{
 "cells": [
  {
   "cell_type": "markdown",
   "id": "ec5d948b",
   "metadata": {},
   "source": [
    "## Calculating BER/BLER for PDSCH Communication with LDPC\n",
    "This notebook shows how to calculate the bit error rate of PDSCH communication with LDPC channel coding."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 1,
   "id": "2415601e",
   "metadata": {},
   "outputs": [],
   "source": [
    "import numpy as np\n",
    "import scipy.io\n",
    "import time\n",
    "import matplotlib.pyplot as plt\n",
    "\n",
    "from neoradium import Carrier, PDSCH, CdlChannel, AntennaPanel, LdpcEncoder, Grid\n",
    "from neoradium.utils import random\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 2,
   "id": "43fe9eef",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\n",
      "Simulating end-to-end for \"16QAM\", with \"Perfect\" channel estimation, in time domain.\n",
      "EB/No(dB)  Total Bits  Bit Errors  BER(%)  Total Blocks  Block Errors  BLER(%)  time(Sec.)\n",
      "---------  ----------  ----------  ------  ------------  ------------  -------  ----------\n",
      "    8       2417280      323481     13.38         320           320     100.00      50.77\n",
      "    9       2417280       18663      0.77         320           145      45.31      52.54\n",
      "   10       2417280           0      0.00         320             0       0.00      52.12\n",
      "   11       2417280           0      0.00         320             0       0.00      53.20\n",
      "   12       2417280           0      0.00         320             0       0.00      52.58\n",
      "   13       2417280           0      0.00         320             0       0.00      53.00\n",
      "\n",
      "Simulating end-to-end for \"16QAM\", with \"LS\" channel estimation, in time domain.\n",
      "EB/No(dB)  Total Bits  Bit Errors  BER(%)  Total Blocks  Block Errors  BLER(%)  time(Sec.)\n",
      "---------  ----------  ----------  ------  ------------  ------------  -------  ----------\n",
      "    8       2417280      469554     19.42         320           320     100.00      54.17\n",
      "    9       2417280      404225     16.72         320           320     100.00      53.96\n",
      "   10       2417280      280051     11.59         320           319      99.69      53.13\n",
      "   11       2417280      133393      5.52         320           160      50.00      55.77\n",
      "   12       2417280        1518      0.06         320            12       3.75      53.92\n",
      "   13       2417280           0      0.00         320             0       0.00      56.55\n"
     ]
    }
   ],
   "source": [
    "numFrames = 4                               # Number of time-domain frames\n",
    "ebNoDbs = range(8,14)                       # Eb/No values (in dB)\n",
    "freqDomain = False                          # Set this to True to apply channel in frequency domain\n",
    "\n",
    "modulation = \"16QAM\"\n",
    "carrier = Carrier(numRbs=51, spacing=30)    # Create a carrier with 51 RBs and 30KHz subcarrier spacing\n",
    "bwp = carrier.curBwp                        # The only bandwidth part in the carrier\n",
    "\n",
    "# Create a PDSCH object\n",
    "pdsch = PDSCH(bwp, interleavingBundleSize=0, numLayers=2, nID=carrier.cellId, modulation=modulation)\n",
    "pdsch.setDMRS(prgSize=0, configType=2, additionalPos=2)     # Specify the DMRS configuration\n",
    "\n",
    "# Create the LDPC encoder\n",
    "codeRate = 490/1024\n",
    "ldpcEncoder = LdpcEncoder(baseGraphNo=1, modulation=pdsch.modems[0].modulation, \n",
    "                          txLayers=pdsch.numLayers, targetRate=codeRate)\n",
    "ldpcDecoder = ldpcEncoder.getDecoder()\n",
    "\n",
    "numSlots = bwp.slotsPerFrame*numFrames\n",
    "results = {}\n",
    "for chanEstMethod in [\"Perfect\", \"LS\"]:                 # Two channel estimation methods\n",
    "    results[chanEstMethod] = {}\n",
    "    print(\"\\nSimulating end-to-end for \\\"%s\\\", with \\\"%s\\\" channel estimation, in %s domain.\"%\n",
    "          (modulation, chanEstMethod, \"frequency\" if freqDomain else \"time\"))\n",
    "    print(\"EB/No(dB)  Total Bits  Bit Errors  BER(%)  Total Blocks  Block Errors  BLER(%)  time(Sec.)\")\n",
    "    print(\"---------  ----------  ----------  ------  ------------  ------------  -------  ----------\")\n",
    "    for ebNoDb in ebNoDbs:                              # For each Eb/No value in ebNoDbs\n",
    "        snrDb = ebNoDb + 10*np.log10(pdsch.modems[0].qm * codeRate * bwp.dataTimeRatio) # Eb/No -> SNR\n",
    "        random.setSeed(123)                             # Making the results reproducible for each Eb/No\n",
    "        t0 = time.time()                                # Start time for each Eb/No\n",
    "        carrier.slotNo = 0\n",
    "\n",
    "        # Creating a CdlChannel object:\n",
    "        channel = CdlChannel('C', delaySpread=300, carrierFreq=4e9, dopplerShift=5,\n",
    "                             txAntenna = AntennaPanel([2,4]),  # 8 TX antenna\n",
    "                             rxAntenna = AntennaPanel([1,2]),  # 2 RX antenna\n",
    "                             seed = 123,\n",
    "                             timing = \"nearest\")  \n",
    "\n",
    "        blockErrors = 0\n",
    "        totalBlocks = 0\n",
    "        bitErrors = 0\n",
    "        totalBits = 0\n",
    "\n",
    "        for slotNo in range(numSlots):\n",
    "            grid = pdsch.getGrid()                       # Create a resource grid already populated with DMRS \n",
    "            txBlockSize = pdsch.getTxBlockSize(codeRate) # Calculate the Transport Block Size\n",
    "            txBlock = random.bits(txBlockSize[0])        # Create random binary data\n",
    "            numBits = pdsch.getBitSizes(grid)            # Actual number of bits available in the resource grid\n",
    "\n",
    "            # Perform the segmentation, rate-matching, and encoding\n",
    "            rateMatchedCodeWords = ldpcEncoder.getRateMatchedCodeWords(txBlock, numBits[0])\n",
    "\n",
    "            pdsch.populateGrid(grid, rateMatchedCodeWords)   # Map/modulate the data to the resource grid\n",
    "\n",
    "            # Store the indexes of the PDSCH data in pdschIndexes to be used later.\n",
    "            pdschIndexes = pdsch.getReIndexes(grid, \"PDSCH\")   \n",
    "\n",
    "            # Getting the Precoding Matrix, and precoding the resource grid\n",
    "            channelMatrix = channel.getChannelMatrix(bwp)           # Get the channel matrix\n",
    "            precoder = pdsch.getPrecodingMatrix(channelMatrix)      # Get the precoder matrix from the PDSCH object\n",
    "            precodedGrid = grid.precode(precoder)                   # Perform the precoding\n",
    "\n",
    "            if freqDomain:\n",
    "                rxGrid = precodedGrid.applyChannel(channelMatrix)   # Apply the channel in frequency domain\n",
    "                rxGrid = rxGrid.addNoise(snrDb=snrDb)               # Add noise\n",
    "            else:\n",
    "                txWaveform = precodedGrid.ofdmModulate()            # OFDM Modulation\n",
    "                maxDelay = channel.getMaxDelay()                    # Get the max. channel delay\n",
    "                txWaveform = txWaveform.pad(maxDelay)               # Pad with zeros\n",
    "                rxWaveform = channel.applyToSignal(txWaveform)      # Apply channel in time domain\n",
    "                noisyRxWaveform = rxWaveform.addNoise(snrDb=snrDb, nFFT=bwp.nFFT)  # Add noise\n",
    "                offset = channel.getTimingOffset()                  # Get timing info for synchronization\n",
    "                syncedWaveform = noisyRxWaveform.sync(offset)       # Synchronization\n",
    "                rxGrid = syncedWaveform.ofdmDemodulate(bwp)         # OFDM demodulation\n",
    "\n",
    "                \n",
    "            if chanEstMethod == \"Perfect\":                          # Perfect Channel Estimation\n",
    "                estChannelMatrix = channelMatrix @ precoder[None,...]\n",
    "            else:                                                   # LS + Interpolation Channel Estimation\n",
    "                estChannelMatrix, noiseEst = rxGrid.estimateChannelLS(pdsch.dmrs, polarInt=False, \n",
    "                                                                      kernel='linear')\n",
    "                                                                      \n",
    "            eqGrid, llrScales = rxGrid.equalize(estChannelMatrix)            # Equalization\n",
    "            llrs = pdsch.getLLRsFromGrid(eqGrid, pdschIndexes, llrScales)    # Demodulation (to LLRs)\n",
    "            rxCodedBlocks = ldpcDecoder.recoverRate(llrs[0], txBlockSize[0]) # Recovering Rate\n",
    "            decodedBlocks = ldpcDecoder.decode(rxCodedBlocks, numIter=20)    # LDPC Decoding\n",
    "            decodedTxBlockWithCRC, crcMatch = ldpcDecoder.checkCrcAndMerge(decodedBlocks) # Merge blocks\n",
    "            decodedTxBlock = decodedTxBlockWithCRC[:-24]                     # remove transport block CRC\n",
    "            blockErrors += len(crcMatch)-sum(crcMatch)                       # Number of Block errors\n",
    "            bitErrors += np.abs(decodedTxBlock-txBlock).sum()                # Number of bit errors\n",
    "            totalBlocks += len(crcMatch)\n",
    "            totalBits += len(txBlock)\n",
    "            \n",
    "            ber = bitErrors*100/totalBits\n",
    "            bler = blockErrors*100/totalBlocks\n",
    "            print(\"\\r  %3d      %8d    %8d    %6.2f    %8d      %8d     %6.2f     %6.2f\"\n",
    "                  %(ebNoDb, totalBits, bitErrors, ber, totalBlocks, blockErrors, bler, time.time()-t0), end='')\n",
    "\n",
    "            carrier.goNext()\n",
    "            channel.goNext()\n",
    "\n",
    "        dt = time.time()-t0\n",
    "        results[chanEstMethod][snrDb] = {\"totalBits\":  totalBits, \n",
    "                                         \"bitErrors\":  bitErrors, \n",
    "                                         \"BER\":        bitErrors*100/totalBits,\n",
    "                                         \"totalBlocks\":totalBlocks, \n",
    "                                         \"blockErrors\":blockErrors, \n",
    "                                         \"BLER\":       blockErrors*100/totalBlocks,\n",
    "                                         \"Time\":       dt}\n",
    "        print(\"\\r  %3d      %8d    %8d    %6.2f    %8d      %8d     %6.2f     %6.2f\"\n",
    "              %(ebNoDb, totalBits, bitErrors, ber, totalBlocks, blockErrors, bler, time.time()-t0))\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 3,
   "id": "8f3a9a54",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "",
      "text/plain": [
       "<Figure size 640x480 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "image/png": "",
      "text/plain": [
       "<Figure size 640x480 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "# Compare the results in a couple of plots:\n",
    "logGraph = False\n",
    "def ebNo2Snr(ebNo): return ebNo + 10*np.log10(pdsch.modems[0].qm * codeRate * bwp.dataTimeRatio)\n",
    "\n",
    "# Bit Error Rate:\n",
    "for i,chanEstMethod in enumerate(['Perfect', 'LS']):\n",
    "    bers = [results[chanEstMethod][ebNo2Snr(ebNoDb)][\"BER\"] for ebNoDb in ebNoDbs]\n",
    "    plt.plot(ebNoDbs, bers, label=chanEstMethod)\n",
    "plt.legend()\n",
    "plt.title(\"Bit Error Rate for different mothods of Channel Estimation.\");\n",
    "plt.grid()\n",
    "plt.xlabel(\"eb/No\")\n",
    "plt.xticks(ebNoDbs)\n",
    "plt.ylabel(\"BER (%)\")\n",
    "if logGraph: plt.yscale('log')\n",
    "plt.show()\n",
    "\n",
    "# Block Error rate\n",
    "for i,chanEstMethod in enumerate(['Perfect', 'LS']):\n",
    "    blers = [results[chanEstMethod][ebNo2Snr(ebNoDb)][\"BLER\"] for ebNoDb in ebNoDbs]\n",
    "    plt.plot(ebNoDbs, blers, label=chanEstMethod)\n",
    "plt.legend()\n",
    "plt.title(\"Block Error Rate for different mothods of Channel Estimation.\");\n",
    "plt.grid()\n",
    "plt.xlabel(\"eb/No\")\n",
    "plt.xticks(ebNoDbs)\n",
    "plt.ylabel(\"BLER (%)\")\n",
    "if logGraph: plt.yscale('log')\n",
    "plt.show()\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "acd64b1c",
   "metadata": {},
   "outputs": [],
   "source": []
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3 (ipykernel)",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.9.6"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 5
}
