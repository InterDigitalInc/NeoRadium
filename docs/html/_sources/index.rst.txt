.. neoradium documentation master file, created by
   sphinx-quickstart on Mon May 24
   You can adapt this file completely to your liking, but it should at least contain the root `toctree` directive.

.. role:: red

.. image:: NeoRadiumRect.png
    :width: 300
    :align: center


What is NeoRadium?
==================

**NeoRadium** is a Python library designed to simplify the simulation of physical layer communication pipelines based on the latest **3GPP 5G NR** standard. Its object-oriented architecture effectively abstracts the complexities inherent in different stages of the communication pipeline, enabling rapid development and execution of end-to-end simulations on any standard computer.

Wireless communication research often focuses on specific blocks or modules within the end-to-end communication pipeline, such as equalization. However, implementing an entire 3GPP-compliant pipeline solely for the purpose of testing a single block can be both time-consuming and cumbersome. This is where **NeoRadium** proves invaluable. It provides comprehensive end-to-end communication pipeline functionality based on 3GPP standards, empowering researchers to effortlessly customize, study, and evaluate the performance of their unique implementations. All these capabilities are delivered without requiring high-end hardware, complex setups, or costly GPUs. As long as your computer operates with Python 3.8+ and a basic configuration, you are ready to begin.

**NeoRadium** includes a comprehensive :doc:`source/Playground/Playground`, offering numerous examples for experimentation. These examples are presented as `Jupyter Notebooks <https://jupyter.org>`_ and provide detailed explanations of API functionalities and their application in practical contexts.


Key Features
============

**NeoRadium** offers a versatile suite of functionalities engineered to streamline 5G NR physical layer research and development. Below is a summary of the capabilities available in the current version. New features are continually being added to further expand its scope.

* **Channel Coding**: Efficient transport block encoding and decoding utilizing Polar and LDPC coding algorithms, in accordance with TS 38.212 specifications.
* **Carriers and Bandwidth Parts**: Precise timing calculations for Cyclic Prefix, OFDM symbols, slots, subframes, and frames.
* **Reference Signal Generation**: Includes DMRS, PT-RS, and CSI-RS generation as specified in TS 38.211, TS 38.212, and TS 38.214.
* **Resource Grid Functionality**: Encompasses resource mapping, OFDM modulation/demodulation, and precoding, aligned with TS 38.101, TS 38.104, and TS 38.211.
* **Channel Estimation, Noise Estimation, and Equalization**.
* **Resource Grid Visualization**: Provides valuable insights through visualized resource grid contents.
* **PDSCH Communication Pipeline**: Simulates the complete PDSCH end-to-end communication pipeline, including modulation/demodulation, mapping/de-mapping, interleaving/de-interleaving, scrambling/descrambling, and transport block size calculations, as specified in TS 38.211 and TS 38.214.
* **Antenna Array Implementation and Simulation**: Based on TR 38.901.
* **Antenna Field Analysis**: Calculates antenna field power and directivity, offering 2D/3D visualization.
* **Channel Modeling**: Applies CDL or TDL channel models to time-domain or frequency-domain signals.
* **DeepMIMO Integration** :red:`(New)`: Enables the import of DeepMIMO ray-tracing scenarios for creating user trajectories.
* **Trajectory-based Channel Models** :red:`(New)`: Facilitates the creation of spatially and temporally consistent sequences of channels based on user trajectories, for use in end-to-end communication pipelines.
* **Channel Datasets** :red:`(New)`: Introduces new functionality to generate datasets of channel matrices based on CDL channel models or temporally and spatially consistent sequences of channel matrices derived from DeepMIMO trajectories.
* **HARQ** :red:`(New)`: Support for Hybrid Automatic Repeat reQuest (HARQ).


.. toctree::
   :hidden:

   self

.. toctree::
   :hidden:
   :maxdepth: 3
   :caption: Getting Started

   source/installation
   source/Playground/Playground

.. toctree::
   :hidden:
   :maxdepth: 3
   :caption: API
   
   source/API/Carrier
   source/API/Grid
   source/API/Waveform
   source/API/Modulation
   source/API/RefSig
   source/API/PhyChannels
   source/API/ChanCode
   source/API/Harq
   source/API/Antenna
   source/API/Channels
   source/API/Random
   source/API/DeepMIMO
   source/API/SnrHelper

Indices
=======

* :ref:`genindex`
* :ref:`modindex`
