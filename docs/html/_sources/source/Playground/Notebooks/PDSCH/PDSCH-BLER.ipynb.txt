{
 "cells": [
  {
   "cell_type": "markdown",
   "id": "ec5d948b",
   "metadata": {},
   "source": [
    "## Calculating BER/BLER for PDSCH Communication with LDPC\n",
    "This notebook shows how to calculate the BLock Error Rate (BLER) of PDSCH communication with LDPC channel coding."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 1,
   "id": "2415601e",
   "metadata": {},
   "outputs": [],
   "source": [
    "import numpy as np\n",
    "import time\n",
    "import matplotlib.pyplot as plt\n",
    "\n",
    "from neoradium import Carrier, PDSCH, CdlChannel, AntennaPanel, LdpcEncoder, Grid, random, SnrScheduler\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 2,
   "id": "43fe9eef",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\n",
      "Simulating end-to-end for \"16QAM\", with \"Perfect\" channel estimation, in frequency domain.\n",
      "SNR(dB)    Total Bits  Bit Errors  BER(%)  Total Blocks  Block Errors  BLER(%)  time(Sec.)\n",
      "---------  ----------  ----------  ------  ------------  ------------  -------  ----------\n",
      "    6.0     6043200           0      0.00         800             0       0.00     110.32\n",
      "    5.8     6043200         349      0.01         800             2       0.25     115.66\n",
      "    5.6     6043200       23641      0.39         800           124      15.50     119.87\n",
      "    5.4     6043200      219226      3.63         800           544      68.00     122.26\n",
      "    5.2     6043200      521096      8.62         800           781      97.62     122.39\n",
      "    5.0     6043200      724626     11.99         800           799      99.88     122.87\n",
      "    4.8     6043200      824174     13.64         800           800     100.00     122.43\n",
      "    4.6     6043200      896263     14.83         800           800     100.00     120.15\n",
      "    6.2     6043200           0      0.00         800             0       0.00     119.54\n",
      "\n",
      "Simulating end-to-end for \"16QAM\", with \"LS\" channel estimation, in frequency domain.\n",
      "SNR(dB)    Total Bits  Bit Errors  BER(%)  Total Blocks  Block Errors  BLER(%)  time(Sec.)\n",
      "---------  ----------  ----------  ------  ------------  ------------  -------  ----------\n",
      "    6.0     6043200     1153377     19.09         800           800     100.00     120.07\n",
      "    6.2     6043200     1113458     18.42         800           800     100.00     122.28\n",
      "    6.6     6043200     1020319     16.88         800           800     100.00     119.69\n",
      "    7.0     6043200      837213     13.85         800           782      97.75     119.66\n",
      "    6.8     6043200      950361     15.73         800           800     100.00     120.07\n",
      "    7.2     6043200      673459     11.14         800           678      84.75     120.70\n",
      "    7.4     6043200      554758      9.18         800           488      61.00     119.48\n",
      "    7.6     6043200      508271      8.41         800           407      50.88     121.37\n",
      "    7.8     6043200      484415      8.02         800           400      50.00     120.86\n",
      "    8.0     6043200      455392      7.54         800           400      50.00     119.83\n",
      "    8.2     6043200      417771      6.91         800           400      50.00     118.66\n",
      "    8.4     6043200      364735      6.04         800           395      49.38     121.64\n",
      "    8.6     6043200      268860      4.45         800           363      45.38     123.30\n",
      "    8.8     6043200      160604      2.66         800           262      32.75     122.01\n",
      "    9.0     6043200       72932      1.21         800           160      20.00     122.01\n",
      "    9.2     6043200       19074      0.32         800            51       6.38     121.36\n",
      "    9.4     6043200        1319      0.02         800            11       1.38     121.92\n",
      "    9.6     6043200           0      0.00         800             0       0.00     120.86\n",
      "    9.8     6043200           0      0.00         800             0       0.00     119.47\n"
     ]
    }
   ],
   "source": [
    "numSlots = 200\n",
    "snrScheduler = SnrScheduler(6,0.2)         # Start at 6 dB, use increments of 0.2 dB\n",
    "freqDomain = True                          # Set to True to apply channel in frequency domain\n",
    "\n",
    "modulation = \"16QAM\"\n",
    "carrier = Carrier(numRbs=51, spacing=30)    # Create a carrier with 51 RBs and 30KHz subcarrier spacing\n",
    "bwp = carrier.curBwp                        # The only bandwidth part in the carrier\n",
    "\n",
    "# Create a PDSCH object\n",
    "pdsch = PDSCH(bwp, interleavingBundleSize=0, numLayers=2, nID=carrier.cellId, modulation=modulation)\n",
    "pdsch.setDMRS(prgSize=0, configType=2, additionalPos=2)     # Specify the DMRS configuration\n",
    "\n",
    "# Create the LDPC encoder\n",
    "codeRate = 490/1024\n",
    "ldpcEncoder = LdpcEncoder(baseGraphNo=1, modulation=pdsch.modems[0].modulation, \n",
    "                          txLayers=pdsch.numLayers, targetRate=codeRate)\n",
    "ldpcDecoder = ldpcEncoder.getDecoder()\n",
    "\n",
    "results = {}\n",
    "for chanEstMethod in [\"Perfect\", \"LS\"]:                 # Two channel estimation methods\n",
    "    results[chanEstMethod] = {}\n",
    "    print(\"\\nSimulating end-to-end for \\\"%s\\\", with \\\"%s\\\" channel estimation, in %s domain.\"%\n",
    "          (modulation, chanEstMethod, \"frequency\" if freqDomain else \"time\"))\n",
    "    print(\"SNR(dB)    Total Bits  Bit Errors  BER(%)  Total Blocks  Block Errors  BLER(%)  time(Sec.)\")\n",
    "    print(\"---------  ----------  ----------  ------  ------------  ------------  -------  ----------\")\n",
    "    snrScheduler.reset()\n",
    "    for snrDb in snrScheduler:\n",
    "        random.setSeed(123)                             # Making the results reproducible for each SNR\n",
    "        t0 = time.time()                                # Start time for each SNR\n",
    "        carrier.slotNo = 0\n",
    "\n",
    "        # Creating a CdlChannel object:\n",
    "        channel = CdlChannel(bwp, 'C', delaySpread=300, carrierFreq=4e9, dopplerShift=5,\n",
    "                             txAntenna = AntennaPanel([2,4], polarization=\"x\"),  # 16 TX antenna\n",
    "                             rxAntenna = AntennaPanel([1,2], polarization=\"x\"))  # 4 RX antenna\n",
    "\n",
    "        blockErrors = 0\n",
    "        totalBlocks = 0\n",
    "        bitErrors = 0\n",
    "        totalBits = 0\n",
    "\n",
    "        for slotNo in range(numSlots):\n",
    "            grid = pdsch.getGrid()                       # Create a resource grid already populated with DMRS \n",
    "            txBlockSize = pdsch.getTxBlockSize(codeRate) # Calculate the Transport Block Size\n",
    "            txBlock = random.bits(txBlockSize[0])        # Create random binary data\n",
    "            numBits = pdsch.getBitSizes(grid)            # Actual number of bits available in the resource grid\n",
    "\n",
    "            # Perform the segmentation, rate-matching, and encoding\n",
    "            rateMatchedCodeBlocks = ldpcEncoder.getRateMatchedCodeBlocks(txBlock, numBits[0])\n",
    "\n",
    "            pdsch.populateGrid(grid, rateMatchedCodeBlocks)         # Map/modulate the data to the resource grid\n",
    "\n",
    "            # Store the indexes of the PDSCH data in pdschIndexes to be used later.\n",
    "            pdschIndexes = pdsch.getReIndexes(grid, \"PDSCH\")   \n",
    "\n",
    "            # Getting the Precoding Matrix, and precoding the resource grid\n",
    "            channelMatrix = channel.getChannelMatrix()              # Get the channel matrix\n",
    "            precoder = pdsch.getPrecodingMatrix(channelMatrix)      # Get the precoder matrix from the PDSCH object\n",
    "            precodedGrid = grid.precode(precoder)                   # Perform the precoding\n",
    "\n",
    "            if freqDomain:\n",
    "                rxGrid = precodedGrid.applyChannel(channelMatrix)   # Apply the channel in frequency domain\n",
    "                rxGrid = rxGrid.addNoise(snrDb=snrDb, useRxPower=True)  # Add noise\n",
    "            else:\n",
    "                txWaveform = precodedGrid.ofdmModulate()            # OFDM Modulation\n",
    "                maxDelay = channel.getMaxDelay()                    # Get the max. channel delay\n",
    "                txWaveform = txWaveform.pad(maxDelay)               # Pad with zeros\n",
    "                rxWaveform = channel.applyToSignal(txWaveform)      # Apply channel in time domain\n",
    "                noisyRxWaveform = rxWaveform.addNoise(snrDb=snrDb, bwp=bwp, useRxPower=True)    # Add noise\n",
    "                offset = channel.getTimingOffset()                  # Get timing info for synchronization\n",
    "                syncedWaveform = noisyRxWaveform.sync(offset)       # Synchronization\n",
    "                rxGrid = syncedWaveform.ofdmDemodulate(bwp)         # OFDM demodulation\n",
    "\n",
    "                \n",
    "            if chanEstMethod == \"Perfect\":                          # Perfect Channel Estimation\n",
    "                estChannelMatrix = channelMatrix @ precoder[None,...]\n",
    "            else:                                                   # LS + Interpolation Channel Estimation\n",
    "                estChannelMatrix, noiseEst = rxGrid.estimateChannelLS(pdsch.dmrs, polarInt=False, \n",
    "                                                                      kernel='linear')\n",
    "                                                                      \n",
    "            eqGrid, llrScales = rxGrid.equalize(estChannelMatrix)            # Equalization\n",
    "            llrs = pdsch.getLLRsFromGrid(eqGrid, pdschIndexes, llrScales)    # Demodulation (to LLRs)\n",
    "            rxCodedBlocks = ldpcDecoder.recoverRate(llrs[0], txBlockSize[0]) # Recovering Rate\n",
    "            decodedBlocks = ldpcDecoder.decode(rxCodedBlocks, numIter=20)    # LDPC Decoding\n",
    "            decodedTxBlockWithCRC, crcMatch = ldpcDecoder.checkCrcAndMerge(decodedBlocks) # Merge blocks\n",
    "            decodedTxBlock = decodedTxBlockWithCRC[:-24]                     # remove transport block CRC\n",
    "            blockErrors += len(crcMatch)-sum(crcMatch)                       # Number of Block errors\n",
    "            bitErrors += np.abs(decodedTxBlock-txBlock).sum()                # Number of bit errors\n",
    "            totalBlocks += len(crcMatch)\n",
    "            totalBits += len(txBlock)\n",
    "            \n",
    "            ber = bitErrors*100/totalBits\n",
    "            bler = blockErrors*100/totalBlocks\n",
    "            print(\"\\r  %5.1f    %8d    %8d    %6.2f    %8d      %8d     %6.2f     %6.2f\"\n",
    "                  %(snrDb, totalBits, bitErrors, ber, totalBlocks, blockErrors, bler, time.time()-t0), end='')\n",
    "\n",
    "            channel.goNext()\n",
    "\n",
    "        dt = time.time()-t0\n",
    "        snrScheduler.setData(bler, ber)\n",
    "        print(\"\")\n",
    "    results[chanEstMethod] = snrScheduler.getSnrsAndData()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 3,
   "id": "8f3a9a54",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "",
      "text/plain": [
       "<Figure size 640x480 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "image/png": "",
      "text/plain": [
       "<Figure size 640x480 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "# Compare the results in a couple of plots:\n",
    "logGraph = False\n",
    "\n",
    "# Bit Error Rate:\n",
    "for i,chanEstMethod in enumerate(['Perfect', 'LS']):\n",
    "    plt.plot(results[chanEstMethod][0], results[chanEstMethod][2], label=chanEstMethod)\n",
    "plt.legend()\n",
    "plt.title(\"Bit Error Rate for different methods of Channel Estimation.\");\n",
    "plt.grid()\n",
    "plt.xlabel(\"SNR (dB)\")\n",
    "# plt.xticks(results[chanEstMethod][0])\n",
    "plt.ylabel(\"BER (%)\")\n",
    "if logGraph: plt.yscale('log')\n",
    "plt.show()\n",
    "\n",
    "# Block Error rate\n",
    "for i,chanEstMethod in enumerate(['Perfect', 'LS']):\n",
    "    plt.plot(results[chanEstMethod][0], results[chanEstMethod][1], label=chanEstMethod)\n",
    "plt.legend()\n",
    "plt.title(\"Block Error Rate for different methods of Channel Estimation.\");\n",
    "plt.grid()\n",
    "plt.xlabel(\"SNR (dB)\")\n",
    "# plt.xticks(results[chanEstMethod][0])\n",
    "plt.ylabel(\"BLER (%)\")\n",
    "if logGraph: plt.yscale('log')\n",
    "plt.show()\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "8164a671-de22-4350-ad75-1afd9aed3cdd",
   "metadata": {},
   "outputs": [],
   "source": []
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3 (ipykernel)",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.9.6"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 5
}
