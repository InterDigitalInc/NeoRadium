Search.setIndex({"docnames": ["html/html/html/html/source/Playground/Notebooks/Antenna/AntennaArray", "html/html/html/html/source/Playground/Notebooks/Antenna/AntennaElement", "html/html/html/html/source/Playground/Notebooks/Antenna/AntennaPanel", "html/html/html/html/source/Playground/Notebooks/CSI-RS/CSI-RS", "html/html/html/html/source/Playground/Notebooks/CSI-RS/CSI-RS-Time", "html/html/html/html/source/Playground/Notebooks/Channels/ChannelMatrix", "html/html/html/html/source/Playground/Notebooks/Channels/cdlTiming", "html/html/html/html/source/Playground/Notebooks/CompareWithMatlab/Antenna/AntennaArray", "html/html/html/html/source/Playground/Notebooks/CompareWithMatlab/Antenna/AntennaElement", "html/html/html/html/source/Playground/Notebooks/CompareWithMatlab/Antenna/AntennaPanel", "html/html/html/html/source/Playground/Notebooks/CompareWithMatlab/CDL/CDL-Matlab", "html/html/html/html/source/Playground/Notebooks/CompareWithMatlab/CSI-RS/CSI-RS-Matlab", "html/html/html/html/source/Playground/Notebooks/CompareWithMatlab/LDPC/LDPC-Matlab", "html/html/html/html/source/Playground/Notebooks/CompareWithMatlab/PDSCH/PDSCH-waveform", "html/html/html/html/source/Playground/Notebooks/CompareWithMatlab/Polar/PolarMatlab", "html/html/html/html/source/Playground/Notebooks/DMRS/CDMsWithNoData", "html/html/html/html/source/Playground/Notebooks/DMRS/DMRS", "html/html/html/html/source/Playground/Notebooks/DMRS/PTRS", "html/html/html/html/source/Playground/Notebooks/MLChEst/MLChestDataGen", "html/html/html/html/source/Playground/Notebooks/MLChEst/MLChestEvaluate", "html/html/html/html/source/Playground/Notebooks/MLChEst/MLChestEvaluateTorch", "html/html/html/html/source/Playground/Notebooks/MLChEst/MLChestTrain", "html/html/html/html/source/Playground/Notebooks/MLChEst/MLChestTrainTorch", "html/html/html/html/source/Playground/Notebooks/OngoingWork/CSI-Feedback/RemoveNeighbors", "html/html/html/html/source/Playground/Notebooks/OngoingWork/CSI-Feedback/Untitled", "html/html/html/html/source/Playground/Notebooks/OngoingWork/CSI-Feedback/getSINR", "html/html/html/html/source/Playground/Notebooks/OngoingWork/CSI-Feedback/tests1", "html/html/html/html/source/Playground/Notebooks/PDSCH/PDSCH-BER", "html/html/html/html/source/Playground/Notebooks/PDSCH/PDSCH-BLER", "html/html/html/html/source/Playground/Notebooks/PDSCH/PDSCH-endToEnd", "html/html/html/html/source/Playground/Notebooks/PDSCH/PDSCH-endToEnd-Copy1", "html/html/source/Playground/Notebooks/Antenna/AntennaArray", "html/html/source/Playground/Notebooks/Antenna/AntennaElement", "html/html/source/Playground/Notebooks/Antenna/AntennaPanel", "html/html/source/Playground/Notebooks/CSI-RS/CSI-RS", "html/html/source/Playground/Notebooks/CSI-RS/CSI-RS-Time", "html/html/source/Playground/Notebooks/Channels/ChannelMatrix", "html/html/source/Playground/Notebooks/Channels/cdlTiming", "html/html/source/Playground/Notebooks/CompareWithMatlab/Antenna/AntennaArray", "html/html/source/Playground/Notebooks/CompareWithMatlab/Antenna/AntennaElement", "html/html/source/Playground/Notebooks/CompareWithMatlab/Antenna/AntennaPanel", "html/html/source/Playground/Notebooks/CompareWithMatlab/CDL/CDL-Matlab", "html/html/source/Playground/Notebooks/CompareWithMatlab/CSI-RS/CSI-RS-Matlab", "html/html/source/Playground/Notebooks/CompareWithMatlab/LDPC/LDPC-Matlab", "html/html/source/Playground/Notebooks/CompareWithMatlab/PDSCH/PDSCH-waveform", "html/html/source/Playground/Notebooks/CompareWithMatlab/Polar/PolarMatlab", "html/html/source/Playground/Notebooks/DMRS/CDMsWithNoData", "html/html/source/Playground/Notebooks/DMRS/DMRS", "html/html/source/Playground/Notebooks/DMRS/PTRS", "html/html/source/Playground/Notebooks/MLChEst/MLChestDataGen", "html/html/source/Playground/Notebooks/MLChEst/MLChestEvaluateTorch", "html/html/source/Playground/Notebooks/MLChEst/MLChestTrainTorch", "html/html/source/Playground/Notebooks/PDSCH/PDSCH-BER", "html/html/source/Playground/Notebooks/PDSCH/PDSCH-BLER", "html/html/source/Playground/Notebooks/PDSCH/PDSCH-endToEnd", "index", "source/API/Antenna", "source/API/Carrier", "source/API/ChanCode", "source/API/Channels", "source/API/Grid", "source/API/Modulation", "source/API/PhyChannels", "source/API/Random", "source/API/RefSig", "source/API/Waveform", "source/Playground/Notebooks/Antenna/AntennaArray", "source/Playground/Notebooks/Antenna/AntennaElement", "source/Playground/Notebooks/Antenna/AntennaPanel", "source/Playground/Notebooks/CSI-RS/CSI-RS", "source/Playground/Notebooks/CSI-RS/CSI-RS-Time", "source/Playground/Notebooks/Channels/ChannelMatrix", "source/Playground/Notebooks/Channels/cdlTiming", "source/Playground/Notebooks/CompareWithMatlab/Antenna/AntennaArray", "source/Playground/Notebooks/CompareWithMatlab/Antenna/AntennaElement", "source/Playground/Notebooks/CompareWithMatlab/Antenna/AntennaPanel", "source/Playground/Notebooks/CompareWithMatlab/CDL/CDL-Matlab", "source/Playground/Notebooks/CompareWithMatlab/CSI-RS/CSI-RS-Matlab", "source/Playground/Notebooks/CompareWithMatlab/LDPC/LDPC-Matlab", "source/Playground/Notebooks/CompareWithMatlab/PDSCH/PDSCH-waveform", "source/Playground/Notebooks/CompareWithMatlab/Polar/PolarMatlab", "source/Playground/Notebooks/DMRS/CDMsWithNoData", "source/Playground/Notebooks/DMRS/DMRS", "source/Playground/Notebooks/DMRS/PTRS", "source/Playground/Notebooks/MLChEst/MLChestDataGen", "source/Playground/Notebooks/MLChEst/MLChestEvaluateTorch", "source/Playground/Notebooks/MLChEst/MLChestTrainTorch", "source/Playground/Notebooks/PDSCH/PDSCH-BER", "source/Playground/Notebooks/PDSCH/PDSCH-BLER", "source/Playground/Notebooks/PDSCH/PDSCH-endToEnd", "source/Playground/Playground", "source/installation"], "filenames": ["html/html/html/html/source/Playground/Notebooks/Antenna/AntennaArray.ipynb", "html/html/html/html/source/Playground/Notebooks/Antenna/AntennaElement.ipynb", "html/html/html/html/source/Playground/Notebooks/Antenna/AntennaPanel.ipynb", "html/html/html/html/source/Playground/Notebooks/CSI-RS/CSI-RS.ipynb", "html/html/html/html/source/Playground/Notebooks/CSI-RS/CSI-RS-Time.ipynb", "html/html/html/html/source/Playground/Notebooks/Channels/ChannelMatrix.ipynb", "html/html/html/html/source/Playground/Notebooks/Channels/cdlTiming.ipynb", "html/html/html/html/source/Playground/Notebooks/CompareWithMatlab/Antenna/AntennaArray.ipynb", "html/html/html/html/source/Playground/Notebooks/CompareWithMatlab/Antenna/AntennaElement.ipynb", "html/html/html/html/source/Playground/Notebooks/CompareWithMatlab/Antenna/AntennaPanel.ipynb", "html/html/html/html/source/Playground/Notebooks/CompareWithMatlab/CDL/CDL-Matlab.ipynb", "html/html/html/html/source/Playground/Notebooks/CompareWithMatlab/CSI-RS/CSI-RS-Matlab.ipynb", "html/html/html/html/source/Playground/Notebooks/CompareWithMatlab/LDPC/LDPC-Matlab.ipynb", "html/html/html/html/source/Playground/Notebooks/CompareWithMatlab/PDSCH/PDSCH-waveform.ipynb", "html/html/html/html/source/Playground/Notebooks/CompareWithMatlab/Polar/PolarMatlab.ipynb", "html/html/html/html/source/Playground/Notebooks/DMRS/CDMsWithNoData.ipynb", "html/html/html/html/source/Playground/Notebooks/DMRS/DMRS.ipynb", "html/html/html/html/source/Playground/Notebooks/DMRS/PTRS.ipynb", "html/html/html/html/source/Playground/Notebooks/MLChEst/MLChestDataGen.ipynb", "html/html/html/html/source/Playground/Notebooks/MLChEst/MLChestEvaluate.ipynb", "html/html/html/html/source/Playground/Notebooks/MLChEst/MLChestEvaluateTorch.ipynb", "html/html/html/html/source/Playground/Notebooks/MLChEst/MLChestTrain.ipynb", "html/html/html/html/source/Playground/Notebooks/MLChEst/MLChestTrainTorch.ipynb", "html/html/html/html/source/Playground/Notebooks/OngoingWork/CSI-Feedback/RemoveNeighbors.ipynb", "html/html/html/html/source/Playground/Notebooks/OngoingWork/CSI-Feedback/Untitled.ipynb", "html/html/html/html/source/Playground/Notebooks/OngoingWork/CSI-Feedback/getSINR.ipynb", "html/html/html/html/source/Playground/Notebooks/OngoingWork/CSI-Feedback/tests1.ipynb", "html/html/html/html/source/Playground/Notebooks/PDSCH/PDSCH-BER.ipynb", "html/html/html/html/source/Playground/Notebooks/PDSCH/PDSCH-BLER.ipynb", "html/html/html/html/source/Playground/Notebooks/PDSCH/PDSCH-endToEnd.ipynb", "html/html/html/html/source/Playground/Notebooks/PDSCH/PDSCH-endToEnd-Copy1.ipynb", "html/html/source/Playground/Notebooks/Antenna/AntennaArray.ipynb", "html/html/source/Playground/Notebooks/Antenna/AntennaElement.ipynb", "html/html/source/Playground/Notebooks/Antenna/AntennaPanel.ipynb", "html/html/source/Playground/Notebooks/CSI-RS/CSI-RS.ipynb", "html/html/source/Playground/Notebooks/CSI-RS/CSI-RS-Time.ipynb", "html/html/source/Playground/Notebooks/Channels/ChannelMatrix.ipynb", "html/html/source/Playground/Notebooks/Channels/cdlTiming.ipynb", "html/html/source/Playground/Notebooks/CompareWithMatlab/Antenna/AntennaArray.ipynb", "html/html/source/Playground/Notebooks/CompareWithMatlab/Antenna/AntennaElement.ipynb", "html/html/source/Playground/Notebooks/CompareWithMatlab/Antenna/AntennaPanel.ipynb", "html/html/source/Playground/Notebooks/CompareWithMatlab/CDL/CDL-Matlab.ipynb", "html/html/source/Playground/Notebooks/CompareWithMatlab/CSI-RS/CSI-RS-Matlab.ipynb", "html/html/source/Playground/Notebooks/CompareWithMatlab/LDPC/LDPC-Matlab.ipynb", "html/html/source/Playground/Notebooks/CompareWithMatlab/PDSCH/PDSCH-waveform.ipynb", "html/html/source/Playground/Notebooks/CompareWithMatlab/Polar/PolarMatlab.ipynb", "html/html/source/Playground/Notebooks/DMRS/CDMsWithNoData.ipynb", "html/html/source/Playground/Notebooks/DMRS/DMRS.ipynb", "html/html/source/Playground/Notebooks/DMRS/PTRS.ipynb", "html/html/source/Playground/Notebooks/MLChEst/MLChestDataGen.ipynb", "html/html/source/Playground/Notebooks/MLChEst/MLChestEvaluateTorch.ipynb", "html/html/source/Playground/Notebooks/MLChEst/MLChestTrainTorch.ipynb", "html/html/source/Playground/Notebooks/PDSCH/PDSCH-BER.ipynb", "html/html/source/Playground/Notebooks/PDSCH/PDSCH-BLER.ipynb", "html/html/source/Playground/Notebooks/PDSCH/PDSCH-endToEnd.ipynb", "index.rst", "source/API/Antenna.rst", "source/API/Carrier.rst", "source/API/ChanCode.rst", "source/API/Channels.rst", "source/API/Grid.rst", "source/API/Modulation.rst", "source/API/PhyChannels.rst", "source/API/Random.rst", "source/API/RefSig.rst", "source/API/Waveform.rst", "source/Playground/Notebooks/Antenna/AntennaArray.ipynb", "source/Playground/Notebooks/Antenna/AntennaElement.ipynb", "source/Playground/Notebooks/Antenna/AntennaPanel.ipynb", "source/Playground/Notebooks/CSI-RS/CSI-RS.ipynb", "source/Playground/Notebooks/CSI-RS/CSI-RS-Time.ipynb", "source/Playground/Notebooks/Channels/ChannelMatrix.ipynb", "source/Playground/Notebooks/Channels/cdlTiming.ipynb", "source/Playground/Notebooks/CompareWithMatlab/Antenna/AntennaArray.ipynb", "source/Playground/Notebooks/CompareWithMatlab/Antenna/AntennaElement.ipynb", "source/Playground/Notebooks/CompareWithMatlab/Antenna/AntennaPanel.ipynb", "source/Playground/Notebooks/CompareWithMatlab/CDL/CDL-Matlab.ipynb", "source/Playground/Notebooks/CompareWithMatlab/CSI-RS/CSI-RS-Matlab.ipynb", "source/Playground/Notebooks/CompareWithMatlab/LDPC/LDPC-Matlab.ipynb", "source/Playground/Notebooks/CompareWithMatlab/PDSCH/PDSCH-waveform.ipynb", "source/Playground/Notebooks/CompareWithMatlab/Polar/PolarMatlab.ipynb", "source/Playground/Notebooks/DMRS/CDMsWithNoData.ipynb", "source/Playground/Notebooks/DMRS/DMRS.ipynb", "source/Playground/Notebooks/DMRS/PTRS.ipynb", "source/Playground/Notebooks/MLChEst/MLChestDataGen.ipynb", "source/Playground/Notebooks/MLChEst/MLChestEvaluateTorch.ipynb", "source/Playground/Notebooks/MLChEst/MLChestTrainTorch.ipynb", "source/Playground/Notebooks/PDSCH/PDSCH-BER.ipynb", "source/Playground/Notebooks/PDSCH/PDSCH-BLER.ipynb", "source/Playground/Notebooks/PDSCH/PDSCH-endToEnd.ipynb", "source/Playground/Playground.rst", "source/installation.rst"], "titles": ["Antenna Array", "Antenna Element", "Antenna Panel", "Channel State Information Reference Signals (CSI-RS) Configuration", "CSI-RS timing configurations", "Channel Matrix", "Channel timing", "Comparing Antenna Array Calculations with Matlab", "Comparing Antenna Element Calculations with Matlab", "Comparing Antenna Panel Calculations with Matlab", "Comparing the CDL Channel results with Matlab", "Comparing the CSI-RS results with Matlab", "Comparing the LDPC results with Matlab", "PDSCH Waveform generation", "Comparing the Polar Coding results with Matlab", "Using <code class=\"docutils literal notranslate\"><span class=\"pre\">otherCdmGroups</span></code> parameter", "Configuring DMRS", "Configuring PTRS", "Generating Dataset for Channel Estimation Training", "Evaluating the Trained Channel Estimator", "Evaluating the Trained Channel Estimator", "Training a ResNet model for Channel Estimation", "Training A ResNet model for Channel Estimation", "&lt;no title&gt;", "&lt;no title&gt;", "Matlab:", "&lt;no title&gt;", "Calculating bit error rate of PDSCH communication", "Calculating BER/BLER for PDSCH Communication with LDPC", "PDSCH end-to-end communication", "&lt;no title&gt;", "Antenna Array", "Antenna Element", "Antenna Panel", "Channel State Information Reference Signals (CSI-RS) Configuration", "CSI-RS timing configurations", "Channel Matrix", "Channel timing", "Comparing Antenna Array Calculations with Matlab", "Comparing Antenna Element Calculations with Matlab", "Comparing Antenna Panel Calculations with Matlab", "Comparing the CDL Channel results with Matlab", "Comparing the CSI-RS results with Matlab", "Comparing the LDPC results with Matlab", "PDSCH Waveform generation", "Comparing the Polar Coding results with Matlab", "Using <code class=\"docutils literal notranslate\"><span class=\"pre\">otherCdmGroups</span></code> parameter", "Configuring DMRS", "Configuring PTRS", "Generating Dataset for Channel Estimation Training", "Evaluating the Trained Channel Estimator", "Training A ResNet model for Channel Estimation", "Calculating bit error rate of PDSCH communication", "Calculating BER/BLER for PDSCH Communication with LDPC", "PDSCH end-to-end communication", "What is NeoRadium?", "Antenna", "Carriers and Bandwidth Parts", "Channel Coding", "Channel Models", "Resource Grid", "Modulation", "Physical Channels", "Random Number Generator", "Reference Signals", "Waveform", "Antenna Array", "Antenna Element", "Antenna Panel", "Channel State Information Reference Signals (CSI-RS) Configuration", "CSI-RS timing configurations", "Channel Matrix", "Channel timing", "Comparing Antenna Array Calculations with Matlab", "Comparing Antenna Element Calculations with Matlab", "Comparing Antenna Panel Calculations with Matlab", "Comparing the CDL Channel results with Matlab", "Comparing the CSI-RS results with Matlab", "Comparing the LDPC results with Matlab", "PDSCH Waveform generation", "Comparing the Polar Coding results with Matlab", "Using <code class=\"docutils literal notranslate\"><span class=\"pre\">otherCdmGroups</span></code> parameter", "Configuring DMRS", "Configuring PTRS", "Generating Dataset for Channel Estimation Training", "Evaluating the Trained Channel Estimator", "Training A ResNet model for Channel Estimation", "Calculating bit error rate of PDSCH communication", "Calculating BER/BLER for PDSCH Communication with LDPC", "PDSCH end-to-end communication", "Playground", "Installation"], "terms": {"1": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89], "import": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 62, 63, 64, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89], "numpi": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 56, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89], "np": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 56, 59, 60, 62, 63, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89], "time": [0, 1, 5, 7, 8, 9, 10, 11, 12, 13, 14, 18, 19, 20, 21, 22, 24, 27, 28, 29, 30, 31, 32, 36, 38, 39, 40, 41, 42, 43, 44, 45, 49, 50, 51, 52, 53, 54, 55, 56, 57, 59, 60, 64, 65, 66, 67, 71, 73, 74, 75, 76, 77, 78, 79, 80, 84, 85, 86, 87, 88, 89, 90], "neoradium": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 24, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 52, 53, 54, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 87, 88, 89, 90], "nr": [0, 1, 2, 6, 7, 8, 9, 10, 14, 18, 20, 25, 26, 29, 31, 32, 33, 37, 38, 39, 40, 41, 45, 49, 50, 54, 55, 58, 59, 60, 62, 64, 65, 66, 67, 68, 72, 73, 74, 75, 76, 80, 84, 85, 89], "2": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89], "we": [0, 1, 2, 6, 7, 8, 9, 10, 11, 12, 13, 15, 17, 18, 19, 20, 21, 22, 23, 24, 27, 29, 31, 32, 33, 37, 38, 39, 40, 41, 42, 43, 44, 46, 48, 49, 50, 51, 52, 54, 58, 62, 64, 65, 66, 67, 68, 72, 73, 74, 75, 76, 77, 78, 79, 81, 83, 84, 85, 86, 87, 89], "first": [0, 2, 3, 4, 5, 6, 7, 9, 11, 12, 13, 14, 15, 18, 19, 20, 21, 22, 24, 29, 31, 33, 34, 35, 36, 37, 38, 40, 42, 43, 44, 45, 46, 49, 50, 51, 54, 56, 58, 59, 60, 61, 62, 64, 65, 66, 68, 69, 70, 71, 72, 73, 75, 77, 78, 79, 80, 81, 84, 85, 86, 89], "creat": [0, 1, 2, 5, 6, 7, 8, 9, 10, 12, 14, 15, 16, 17, 18, 19, 20, 24, 26, 27, 28, 29, 30, 31, 32, 33, 36, 37, 38, 39, 40, 41, 43, 45, 46, 47, 48, 49, 50, 52, 53, 54, 55, 56, 57, 58, 59, 60, 62, 63, 64, 65, 66, 67, 68, 71, 72, 73, 74, 75, 76, 78, 80, 81, 82, 83, 84, 85, 87, 88, 89], "an": [0, 1, 2, 5, 7, 8, 9, 11, 12, 13, 16, 17, 18, 19, 20, 22, 24, 25, 26, 29, 30, 31, 32, 33, 36, 38, 39, 40, 42, 43, 44, 47, 48, 49, 50, 51, 54, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 71, 73, 74, 75, 77, 78, 79, 82, 83, 84, 85, 86, 89], "element": [0, 2, 5, 7, 9, 10, 11, 13, 24, 26, 29, 31, 33, 36, 38, 40, 41, 42, 44, 54, 56, 57, 58, 59, 60, 62, 64, 65, 66, 68, 71, 73, 75, 76, 77, 79, 89, 90], "templat": [0, 2, 7, 9, 24, 26, 31, 33, 38, 40, 56, 66, 68, 73, 75], "The": [0, 1, 2, 3, 5, 6, 7, 8, 9, 10, 11, 12, 13, 15, 18, 19, 20, 21, 22, 26, 27, 28, 29, 30, 31, 32, 33, 34, 36, 37, 38, 39, 40, 41, 42, 43, 44, 46, 49, 50, 51, 52, 53, 54, 56, 57, 58, 59, 60, 61, 62, 64, 65, 66, 67, 68, 69, 71, 72, 73, 74, 75, 76, 77, 78, 79, 81, 84, 85, 86, 87, 88, 89, 90], "panel": [0, 7, 24, 26, 31, 38, 56, 66, 73, 90], "class": [0, 2, 7, 9, 10, 11, 20, 22, 26, 29, 31, 33, 38, 40, 41, 42, 50, 51, 54, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 68, 73, 75, 76, 77, 85, 86, 89], "antennapanel": [0, 2, 5, 6, 7, 9, 10, 11, 13, 18, 19, 20, 24, 26, 27, 28, 29, 30, 31, 33, 36, 37, 38, 40, 41, 42, 44, 49, 50, 52, 53, 54, 56, 59, 66, 68, 71, 72, 73, 75, 76, 77, 79, 84, 85, 87, 88, 89], "us": [0, 1, 2, 3, 4, 5, 7, 8, 9, 10, 11, 12, 13, 16, 17, 18, 19, 20, 21, 22, 23, 24, 26, 27, 28, 29, 31, 32, 33, 34, 35, 36, 38, 39, 40, 41, 42, 43, 44, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 73, 74, 75, 76, 77, 78, 79, 82, 83, 84, 85, 86, 87, 88, 89, 90], "thi": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 22, 24, 27, 28, 29, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89], "elementtempl": [0, 2, 7, 9, 31, 33, 38, 40, 56, 66, 68, 73, 75], "antennael": [0, 1, 2, 7, 8, 9, 24, 26, 31, 32, 33, 38, 39, 40, 56, 66, 67, 68, 73, 74, 75], "beamwidth": [0, 1, 2, 7, 8, 9, 31, 32, 33, 38, 39, 40, 56, 66, 67, 68, 73, 74, 75], "65": [0, 1, 2, 5, 7, 8, 9, 22, 24, 31, 32, 33, 36, 38, 39, 40, 51, 56, 66, 67, 68, 71, 73, 74, 75, 86], "maxattenu": [0, 1, 2, 7, 8, 9, 31, 32, 33, 38, 39, 40, 56, 66, 67, 68, 73, 74, 75], "30": [0, 1, 2, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 22, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 56, 57, 58, 59, 66, 67, 68, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89], "now": [0, 2, 7, 9, 10, 11, 13, 15, 16, 18, 19, 20, 21, 22, 24, 27, 29, 31, 33, 38, 40, 41, 42, 44, 46, 47, 49, 50, 51, 52, 54, 64, 66, 68, 73, 75, 76, 77, 79, 81, 82, 84, 85, 86, 87, 89], "antennaarrai": [0, 7, 31, 38, 56, 59, 66, 73], "paneltempl": [0, 7, 31, 38, 56, 66, 73], "4": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 56, 57, 58, 59, 60, 61, 62, 63, 64, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89], "polar": [0, 2, 5, 6, 7, 9, 10, 11, 18, 19, 20, 24, 26, 29, 30, 31, 33, 36, 37, 38, 40, 41, 42, 49, 50, 54, 55, 56, 59, 60, 66, 68, 71, 72, 73, 75, 76, 77, 84, 85, 89], "can": [0, 1, 2, 7, 8, 9, 10, 11, 13, 15, 18, 19, 20, 21, 22, 24, 29, 31, 32, 33, 38, 39, 40, 41, 42, 44, 46, 49, 50, 51, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 73, 74, 75, 76, 77, 79, 81, 84, 85, 86, 89, 90], "note": [0, 2, 3, 6, 7, 8, 9, 10, 11, 13, 15, 16, 18, 20, 21, 22, 25, 26, 29, 31, 33, 34, 37, 38, 39, 40, 41, 42, 44, 46, 47, 49, 50, 51, 54, 56, 58, 59, 60, 62, 63, 64, 65, 66, 68, 69, 72, 73, 74, 75, 76, 77, 79, 81, 82, 84, 85, 86, 89], "space": [0, 2, 3, 4, 5, 7, 9, 10, 11, 13, 15, 16, 17, 18, 19, 20, 24, 26, 27, 28, 29, 30, 31, 33, 34, 35, 36, 38, 40, 41, 42, 44, 46, 47, 48, 49, 50, 52, 53, 54, 56, 57, 64, 66, 68, 69, 70, 71, 73, 75, 76, 77, 79, 81, 82, 83, 84, 85, 87, 88, 89], "valu": [0, 1, 2, 3, 6, 7, 8, 9, 13, 14, 15, 16, 17, 18, 19, 20, 24, 26, 27, 28, 29, 31, 32, 33, 34, 37, 38, 39, 40, 44, 45, 46, 47, 48, 49, 50, 52, 53, 54, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 72, 73, 74, 75, 79, 80, 81, 82, 83, 84, 85, 87, 88, 89], "ar": [0, 1, 3, 5, 7, 8, 10, 11, 13, 15, 16, 18, 19, 20, 24, 29, 31, 32, 34, 36, 38, 39, 41, 42, 44, 46, 47, 49, 50, 54, 55, 56, 57, 58, 59, 60, 62, 64, 65, 66, 67, 69, 71, 73, 74, 76, 77, 79, 81, 82, 84, 85, 89, 90], "multipl": [0, 7, 25, 26, 29, 31, 38, 54, 56, 58, 59, 60, 62, 66, 73, 89], "wavelength": [0, 7, 31, 38, 66, 73], "3": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 91], "showel": [0, 2, 7, 9, 24, 26, 31, 33, 38, 40, 56, 66, 68, 73, 75], "method": [0, 1, 2, 5, 6, 7, 8, 9, 10, 11, 13, 18, 19, 20, 24, 27, 28, 29, 31, 32, 33, 36, 37, 38, 39, 40, 41, 42, 44, 49, 50, 52, 53, 54, 56, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 71, 72, 73, 74, 75, 76, 77, 79, 84, 85, 87, 88, 89], "draw": [0, 1, 2, 4, 6, 7, 8, 9, 15, 16, 17, 29, 31, 32, 33, 35, 37, 38, 39, 40, 46, 47, 48, 54, 56, 60, 66, 67, 68, 70, 72, 73, 74, 75, 81, 82, 83, 89], "show": [0, 2, 3, 4, 5, 6, 7, 9, 11, 13, 15, 16, 17, 18, 19, 20, 21, 22, 27, 28, 29, 31, 33, 34, 35, 36, 37, 38, 40, 42, 44, 46, 47, 48, 49, 50, 51, 52, 53, 54, 56, 58, 62, 64, 66, 68, 69, 70, 71, 72, 73, 75, 77, 79, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90], "all": [0, 2, 3, 7, 9, 11, 12, 13, 15, 16, 17, 18, 19, 20, 21, 24, 26, 29, 31, 33, 34, 38, 40, 42, 43, 44, 46, 47, 48, 49, 50, 54, 55, 56, 58, 59, 60, 62, 63, 64, 65, 66, 68, 69, 73, 75, 77, 78, 79, 81, 82, 83, 84, 85, 89], "zerotick": [0, 2, 7, 9, 24, 26, 31, 33, 38, 40, 56, 66, 68, 73, 75], "true": [0, 1, 2, 5, 6, 7, 8, 9, 10, 11, 12, 14, 18, 19, 20, 22, 24, 26, 27, 28, 29, 31, 32, 33, 36, 37, 38, 39, 40, 41, 42, 43, 45, 49, 50, 51, 52, 53, 54, 56, 57, 58, 59, 60, 61, 62, 64, 65, 66, 67, 68, 71, 72, 73, 74, 75, 76, 77, 78, 80, 84, 85, 86, 87, 88, 89], "depend": [0, 1, 2, 7, 8, 9, 18, 29, 31, 32, 33, 38, 39, 40, 49, 54, 56, 58, 60, 61, 62, 63, 65, 66, 67, 68, 73, 74, 75, 84, 89], "input": [0, 1, 2, 6, 7, 8, 9, 10, 12, 14, 19, 20, 21, 29, 31, 32, 33, 37, 38, 39, 40, 41, 43, 45, 50, 54, 58, 61, 62, 66, 67, 68, 72, 73, 74, 75, 76, 78, 80, 85, 89], "paramet": [0, 1, 2, 7, 8, 9, 10, 11, 13, 19, 20, 21, 22, 29, 31, 32, 33, 38, 39, 40, 41, 42, 44, 50, 51, 54, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 73, 74, 75, 76, 77, 79, 85, 86, 89, 90], "drawradi": [0, 1, 2, 7, 8, 9, 31, 32, 33, 38, 39, 40, 56, 66, 67, 68, 73, 74, 75], "differ": [0, 1, 2, 3, 5, 6, 7, 8, 9, 10, 11, 13, 15, 16, 17, 18, 19, 20, 24, 27, 28, 29, 31, 32, 33, 34, 36, 37, 38, 39, 40, 41, 42, 44, 46, 47, 48, 49, 50, 52, 53, 54, 55, 56, 58, 59, 60, 62, 64, 65, 66, 67, 68, 69, 71, 72, 73, 74, 75, 76, 77, 79, 81, 82, 83, 84, 85, 87, 88, 89, 90], "type": [0, 1, 2, 3, 4, 7, 8, 9, 11, 13, 15, 16, 17, 24, 26, 29, 31, 32, 33, 34, 35, 38, 39, 40, 42, 44, 46, 47, 48, 54, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 73, 74, 75, 77, 79, 81, 82, 83, 89], "graph": [0, 1, 2, 6, 7, 8, 9, 12, 31, 32, 33, 37, 38, 39, 40, 43, 58, 66, 67, 68, 72, 73, 74, 75, 78], "here": [0, 1, 2, 7, 8, 9, 10, 11, 12, 13, 14, 15, 19, 20, 29, 31, 32, 33, 38, 39, 40, 41, 42, 43, 44, 45, 46, 50, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 66, 67, 68, 73, 74, 75, 76, 77, 78, 79, 80, 81, 85, 89, 91], "direct": [0, 1, 2, 7, 8, 9, 31, 32, 33, 38, 39, 40, 55, 56, 59, 60, 64, 66, 67, 68, 73, 74, 75], "horizont": [0, 1, 2, 7, 8, 9, 31, 32, 33, 38, 39, 40, 56, 60, 66, 67, 68, 73, 74, 75], "plane": [0, 1, 2, 7, 8, 9, 31, 32, 33, 38, 39, 40, 57, 60, 66, 67, 68, 73, 74, 75], "zero": [0, 1, 2, 5, 7, 8, 9, 11, 12, 13, 18, 19, 20, 23, 27, 28, 29, 30, 31, 32, 33, 36, 38, 39, 40, 42, 43, 44, 49, 50, 52, 53, 54, 56, 57, 58, 59, 60, 62, 64, 65, 66, 67, 68, 71, 73, 74, 75, 77, 78, 79, 84, 85, 87, 88, 89], "elev": [0, 1, 2, 7, 8, 9, 31, 32, 33, 38, 39, 40, 56, 66, 67, 68, 73, 74, 75], "radvalu": [0, 1, 2, 7, 8, 9, 31, 32, 33, 38, 39, 40, 66, 67, 68, 73, 74, 75], "theta": [0, 1, 2, 7, 8, 9, 31, 32, 33, 38, 39, 40, 56, 66, 67, 68, 73, 74, 75], "90": [0, 1, 2, 5, 7, 8, 9, 10, 11, 19, 20, 22, 24, 26, 31, 32, 33, 36, 38, 39, 40, 41, 42, 50, 51, 56, 59, 66, 67, 68, 71, 73, 74, 75, 76, 77, 85, 86], "radiationtyp": [0, 1, 2, 7, 8, 9, 31, 32, 33, 38, 39, 40, 56, 66, 67, 68, 73, 74, 75], "normal": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 15, 16, 17, 24, 29, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 46, 47, 48, 54, 56, 57, 59, 64, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 81, 82, 83, 89], "fals": [0, 2, 5, 7, 9, 12, 18, 19, 20, 22, 25, 26, 27, 28, 31, 33, 36, 38, 40, 43, 49, 50, 51, 52, 53, 56, 57, 58, 59, 60, 61, 62, 64, 65, 66, 68, 71, 73, 75, 78, 84, 85, 86, 87, 88], "i": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 49, 50, 51, 52, 53, 54, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 84, 85, 86, 87, 88, 89, 91], "radiat": [0, 7, 31, 38, 56, 66, 73], "power": [0, 3, 4, 5, 7, 8, 9, 10, 11, 24, 31, 34, 35, 36, 38, 39, 40, 41, 42, 55, 56, 57, 58, 59, 60, 62, 64, 66, 69, 70, 71, 73, 74, 75, 76, 77], "vertic": [0, 1, 2, 7, 8, 9, 31, 32, 33, 38, 39, 40, 56, 60, 66, 67, 68, 73, 74, 75], "azimuth": [0, 1, 2, 7, 8, 9, 31, 32, 33, 38, 39, 40, 56, 59, 66, 67, 68, 73, 74, 75], "angl": [0, 1, 2, 6, 7, 8, 9, 10, 11, 31, 32, 33, 37, 38, 39, 40, 41, 42, 56, 59, 60, 66, 67, 68, 72, 73, 74, 75, 76, 77], "0": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89], "phi": [0, 1, 2, 7, 8, 9, 24, 26, 31, 32, 33, 38, 39, 40, 56, 66, 67, 68, 73, 74, 75], "powerdb": [0, 7, 8, 9, 11, 31, 38, 39, 40, 42, 56, 64, 66, 73, 74, 75, 77], "5": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 56, 57, 58, 59, 60, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89], "3d": [0, 1, 2, 7, 8, 9, 12, 19, 20, 27, 28, 31, 32, 33, 38, 39, 40, 43, 50, 52, 53, 55, 56, 62, 66, 67, 68, 73, 74, 75, 78, 85, 87, 88], "viewangl": [0, 1, 2, 7, 8, 9, 31, 32, 33, 38, 39, 40, 56, 66, 67, 68, 73, 74, 75], "10": [0, 2, 3, 5, 6, 7, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 24, 25, 26, 27, 28, 29, 31, 33, 34, 36, 37, 38, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 58, 59, 60, 61, 62, 63, 64, 65, 66, 68, 69, 71, 72, 73, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89], "figsiz": [0, 7, 13, 31, 38, 44, 56, 66, 73, 79], "scipi": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 26, 27, 28, 29, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 52, 53, 54, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 87, 88, 89], "io": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 27, 28, 29, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 52, 53, 54, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 87, 88, 89], "beam": [1, 8, 32, 39, 56, 67, 74], "width": [1, 8, 32, 39, 56, 67, 74], "maximum": [1, 7, 8, 9, 10, 11, 29, 32, 38, 39, 40, 41, 42, 54, 56, 58, 59, 60, 64, 65, 67, 73, 74, 75, 76, 77, 89], "attenu": [1, 8, 32, 39, 56, 59, 67, 74], "30db": [1, 8, 32, 39, 67, 74], "el": [1, 8, 32, 39, 67, 74], "our": [1, 8, 10, 11, 12, 13, 18, 19, 20, 21, 22, 29, 32, 39, 41, 42, 43, 44, 49, 50, 51, 54, 67, 74, 76, 77, 78, 79, 84, 85, 86, 89], "field": [1, 2, 7, 8, 9, 32, 33, 38, 39, 40, 55, 56, 57, 60, 62, 67, 68, 73, 74, 75], "6": [1, 3, 4, 5, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 32, 34, 35, 36, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 50, 51, 52, 53, 54, 56, 57, 58, 61, 62, 63, 64, 67, 69, 70, 71, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 85, 86, 87, 88, 89], "again": [1, 6, 8, 11, 13, 32, 37, 39, 42, 44, 67, 72, 74, 77, 79], "howev": [1, 8, 18, 32, 39, 49, 55, 59, 63, 67, 74, 84], "specifi": [1, 8, 11, 13, 18, 19, 20, 27, 28, 29, 32, 39, 42, 44, 49, 50, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 67, 74, 77, 79, 84, 85, 87, 88, 89], "resolut": [1, 7, 8, 32, 38, 39, 67, 73, 74], "degre": [1, 5, 8, 10, 11, 24, 32, 36, 39, 41, 42, 56, 59, 67, 71, 74, 76, 77], "make": [1, 5, 8, 10, 11, 13, 15, 18, 19, 20, 22, 27, 28, 29, 30, 32, 36, 39, 41, 42, 44, 46, 49, 50, 51, 52, 53, 54, 57, 58, 59, 60, 62, 63, 64, 65, 67, 71, 74, 76, 77, 79, 81, 84, 85, 86, 87, 88, 89], "gener": [1, 6, 8, 10, 11, 12, 14, 21, 22, 32, 37, 39, 41, 42, 43, 45, 51, 55, 56, 58, 59, 60, 64, 65, 67, 72, 74, 76, 77, 78, 80, 86, 90], "faster": [1, 8, 32, 39, 58, 60, 61, 62, 67, 74], "also": [1, 3, 5, 6, 8, 11, 13, 18, 22, 24, 29, 32, 34, 36, 37, 39, 42, 44, 49, 51, 54, 56, 57, 58, 59, 60, 62, 63, 64, 65, 67, 69, 71, 72, 74, 77, 79, 84, 86, 89], "coarser": [1, 8, 32, 39, 67, 74], "than": [1, 7, 8, 14, 19, 20, 24, 26, 32, 38, 39, 45, 50, 57, 58, 59, 61, 62, 65, 67, 73, 74, 80, 85], "previou": [1, 8, 19, 20, 21, 22, 32, 39, 50, 51, 67, 74, 85, 86], "one": [1, 6, 7, 8, 11, 12, 15, 16, 17, 18, 19, 20, 22, 23, 24, 26, 29, 32, 37, 38, 39, 42, 43, 46, 47, 48, 49, 50, 51, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 67, 72, 73, 74, 77, 78, 81, 82, 83, 84, 85, 86, 89], "default": [1, 2, 3, 4, 5, 8, 9, 11, 13, 15, 16, 17, 24, 26, 29, 32, 33, 34, 35, 36, 39, 40, 42, 44, 46, 47, 48, 54, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 67, 68, 69, 70, 71, 74, 75, 77, 79, 81, 82, 83, 89], "arang": [1, 8, 25, 26, 32, 39, 63, 67, 74], "180": [1, 7, 8, 9, 10, 11, 12, 24, 26, 32, 38, 39, 40, 41, 42, 43, 56, 67, 73, 74, 75, 76, 77, 78], "between": [2, 5, 7, 8, 9, 10, 29, 30, 33, 36, 38, 39, 40, 41, 54, 56, 58, 59, 60, 62, 65, 68, 71, 73, 74, 75, 76, 89], "5\ud835\udf06": [2, 5, 9, 10, 11, 24, 33, 36, 40, 41, 42, 68, 71, 75, 76, 77], "60": [2, 5, 9, 10, 11, 14, 15, 16, 17, 18, 22, 24, 25, 26, 33, 36, 40, 41, 42, 45, 46, 47, 48, 49, 51, 57, 68, 71, 75, 76, 77, 80, 81, 82, 83, 84, 86], "notebook": [3, 4, 5, 6, 10, 11, 15, 16, 17, 18, 27, 28, 29, 34, 35, 36, 37, 41, 42, 46, 47, 48, 49, 52, 53, 54, 55, 62, 64, 69, 70, 71, 72, 76, 77, 81, 82, 83, 84, 87, 88, 89, 90], "exampl": [3, 13, 15, 16, 17, 29, 34, 44, 46, 47, 48, 54, 55, 56, 58, 59, 60, 62, 63, 64, 65, 69, 79, 81, 82, 83, 89, 90], "18": [3, 10, 11, 13, 19, 20, 22, 24, 25, 26, 27, 29, 34, 41, 42, 44, 50, 51, 52, 54, 69, 76, 77, 79, 85, 86, 87, 89], "row": [3, 4, 5, 10, 11, 13, 24, 34, 35, 36, 41, 42, 44, 56, 59, 64, 69, 70, 71, 76, 77, 79], "38": [3, 4, 13, 17, 19, 20, 22, 24, 25, 26, 28, 29, 34, 35, 44, 48, 50, 51, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 64, 65, 69, 70, 79, 83, 85, 86, 88, 89], "211": [3, 4, 17, 26, 29, 34, 35, 48, 54, 55, 57, 58, 60, 61, 62, 64, 69, 70, 83, 89], "tabl": [3, 4, 11, 13, 17, 24, 34, 35, 42, 44, 48, 56, 58, 59, 61, 62, 64, 69, 70, 77, 79, 83], "7": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 19, 20, 21, 22, 24, 25, 26, 29, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 50, 51, 54, 56, 58, 59, 60, 61, 62, 63, 64, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 85, 86, 89], "from": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 24, 26, 27, 28, 29, 30, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89], "carrier": [3, 4, 5, 15, 16, 17, 18, 19, 20, 24, 26, 27, 28, 30, 34, 35, 36, 46, 47, 48, 49, 50, 52, 53, 55, 59, 60, 62, 64, 65, 69, 70, 71, 81, 82, 83, 84, 85, 87, 88], "pdsch": [3, 4, 15, 16, 17, 18, 19, 20, 24, 30, 34, 35, 46, 47, 48, 49, 50, 55, 58, 60, 62, 64, 69, 70, 81, 82, 83, 84, 85], "grid": [3, 4, 5, 6, 15, 16, 17, 18, 19, 20, 24, 27, 28, 30, 34, 35, 36, 37, 46, 47, 48, 49, 50, 52, 53, 55, 56, 57, 58, 59, 62, 64, 65, 69, 70, 71, 72, 81, 82, 83, 84, 85, 87, 88], "csirsconfig": [3, 4, 11, 24, 34, 35, 42, 60, 64, 69, 70, 77], "csirsset": [3, 4, 11, 24, 34, 35, 42, 64, 69, 70, 77], "startrb": [3, 4, 5, 11, 13, 15, 16, 17, 24, 26, 29, 34, 35, 36, 42, 44, 46, 47, 48, 54, 57, 60, 64, 69, 70, 71, 77, 79, 81, 82, 83, 89], "numrb": [3, 4, 5, 11, 13, 15, 16, 17, 18, 19, 20, 24, 26, 27, 28, 29, 30, 34, 35, 36, 42, 44, 46, 47, 48, 49, 50, 52, 53, 54, 57, 60, 64, 69, 70, 71, 77, 79, 81, 82, 83, 84, 85, 87, 88, 89], "24": [3, 4, 5, 10, 11, 12, 13, 14, 19, 22, 24, 25, 26, 28, 29, 30, 34, 35, 36, 41, 42, 43, 44, 45, 51, 53, 54, 58, 64, 69, 70, 71, 76, 77, 78, 79, 80, 86, 88, 89], "15": [3, 4, 5, 6, 10, 11, 12, 13, 14, 18, 19, 20, 22, 24, 25, 26, 27, 29, 34, 35, 36, 37, 41, 42, 43, 44, 45, 49, 50, 51, 52, 54, 57, 64, 69, 70, 71, 72, 76, 77, 78, 79, 80, 84, 85, 86, 87, 89], "bwp": [3, 4, 5, 11, 13, 15, 16, 17, 18, 19, 20, 24, 26, 27, 28, 29, 34, 35, 36, 42, 44, 46, 47, 48, 49, 50, 52, 53, 54, 57, 59, 60, 62, 64, 65, 69, 70, 71, 77, 79, 81, 82, 83, 84, 85, 87, 88, 89], "print": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 24, 26, 27, 28, 29, 30, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 56, 57, 58, 59, 60, 61, 62, 64, 65, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89], "bandwidth": [3, 4, 5, 11, 13, 15, 16, 17, 18, 19, 20, 24, 27, 28, 29, 34, 35, 36, 42, 44, 46, 47, 48, 49, 50, 52, 53, 54, 55, 59, 60, 62, 64, 65, 69, 70, 71, 77, 79, 81, 82, 83, 84, 85, 87, 88, 89], "part": [3, 4, 5, 11, 13, 15, 16, 17, 18, 19, 20, 24, 27, 28, 29, 34, 35, 36, 42, 44, 46, 47, 48, 49, 50, 52, 53, 54, 55, 56, 59, 60, 63, 64, 65, 69, 70, 71, 77, 79, 81, 82, 83, 84, 85, 87, 88, 89], "properti": [3, 4, 5, 10, 11, 13, 14, 15, 16, 17, 24, 29, 34, 35, 36, 41, 42, 44, 45, 46, 47, 48, 54, 56, 57, 58, 59, 60, 61, 62, 64, 65, 69, 70, 71, 76, 77, 79, 80, 81, 82, 83, 89], "resourc": [3, 4, 5, 15, 16, 17, 18, 19, 20, 24, 27, 28, 30, 34, 35, 36, 46, 47, 48, 49, 50, 52, 53, 55, 57, 58, 59, 62, 64, 65, 69, 70, 71, 81, 82, 83, 84, 85, 87, 88], "block": [3, 4, 5, 11, 12, 14, 15, 16, 17, 19, 20, 21, 22, 24, 28, 30, 34, 35, 36, 42, 43, 45, 46, 47, 48, 50, 51, 53, 55, 57, 58, 60, 61, 62, 64, 69, 70, 71, 77, 78, 80, 81, 82, 83, 85, 86, 88], "rb": [3, 4, 11, 13, 15, 16, 17, 18, 19, 20, 24, 27, 28, 29, 34, 35, 42, 44, 46, 47, 48, 49, 50, 52, 53, 54, 57, 60, 62, 64, 69, 70, 77, 79, 81, 82, 83, 84, 85, 87, 88, 89], "start": [3, 4, 6, 11, 13, 15, 16, 17, 18, 19, 20, 21, 22, 24, 28, 29, 34, 35, 37, 42, 44, 46, 47, 48, 49, 50, 51, 53, 54, 57, 59, 62, 64, 65, 69, 70, 72, 77, 79, 81, 82, 83, 84, 85, 86, 88, 89], "288": [3, 4, 24, 26, 34, 35, 69, 70], "subcarri": [3, 4, 5, 11, 13, 15, 16, 17, 18, 19, 20, 23, 24, 27, 28, 29, 34, 35, 36, 42, 44, 46, 47, 48, 49, 50, 52, 53, 54, 57, 59, 60, 62, 69, 70, 71, 77, 79, 81, 82, 83, 84, 85, 87, 88, 89], "khz": [3, 4, 11, 13, 15, 16, 17, 24, 29, 34, 35, 42, 44, 46, 47, 48, 54, 57, 69, 70, 77, 79, 81, 82, 83, 89], "cp": [3, 4, 11, 13, 15, 16, 17, 24, 29, 34, 35, 42, 44, 46, 47, 48, 54, 65, 69, 70, 77, 79, 81, 82, 83, 89], "4320000": [3, 4, 34, 35, 69, 70], "hz": [3, 4, 5, 10, 11, 13, 15, 16, 17, 24, 29, 30, 34, 35, 36, 41, 42, 44, 46, 47, 48, 54, 57, 59, 69, 70, 71, 76, 77, 79, 81, 82, 83, 89], "symbolsperslot": [3, 4, 11, 13, 15, 16, 17, 24, 29, 34, 35, 42, 44, 46, 47, 48, 54, 57, 59, 60, 69, 70, 77, 79, 81, 82, 83, 89], "14": [3, 4, 5, 8, 9, 10, 11, 12, 13, 15, 16, 17, 19, 21, 22, 24, 25, 26, 28, 29, 34, 35, 36, 39, 40, 41, 42, 43, 44, 46, 47, 48, 51, 53, 54, 57, 69, 70, 71, 74, 75, 76, 77, 78, 79, 81, 82, 83, 86, 88, 89], "slotspersubfram": [3, 4, 11, 13, 15, 16, 17, 24, 29, 34, 35, 42, 44, 46, 47, 48, 54, 57, 60, 69, 70, 77, 79, 81, 82, 83, 89], "nfft": [3, 4, 11, 13, 15, 16, 17, 18, 19, 20, 24, 27, 28, 29, 30, 34, 35, 42, 44, 46, 47, 48, 49, 50, 52, 53, 54, 57, 60, 65, 69, 70, 77, 79, 81, 82, 83, 84, 85, 87, 88, 89], "512": [3, 4, 24, 34, 35, 69, 70], "1st": [3, 12, 24, 34, 43, 59, 69, 78], "port": [3, 4, 11, 13, 15, 18, 19, 20, 23, 24, 34, 35, 42, 44, 46, 49, 50, 60, 62, 64, 69, 70, 77, 79, 81, 84, 85], "12": [3, 5, 7, 9, 11, 12, 13, 14, 15, 16, 17, 21, 22, 24, 25, 26, 27, 28, 29, 34, 36, 38, 40, 42, 43, 44, 45, 46, 47, 48, 51, 52, 53, 54, 57, 60, 64, 69, 71, 73, 75, 77, 78, 79, 80, 81, 82, 83, 86, 87, 88, 89], "bit": [3, 5, 12, 14, 18, 19, 20, 28, 29, 30, 34, 36, 43, 45, 49, 50, 53, 54, 58, 61, 62, 63, 69, 71, 78, 80, 84, 85, 88, 89, 90], "set": [3, 4, 11, 12, 13, 15, 16, 17, 18, 19, 20, 22, 23, 24, 27, 28, 29, 34, 35, 42, 43, 44, 46, 47, 48, 49, 50, 51, 52, 53, 54, 56, 57, 58, 59, 60, 62, 64, 65, 69, 70, 77, 78, 79, 81, 82, 83, 84, 85, 86, 87, 88, 89], "freqmap": [3, 11, 24, 34, 42, 64, 69, 77], "onli": [3, 4, 5, 10, 11, 13, 15, 16, 17, 18, 19, 20, 23, 24, 27, 28, 29, 34, 35, 36, 41, 42, 44, 46, 47, 48, 49, 50, 52, 53, 54, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 69, 70, 71, 76, 77, 79, 81, 82, 83, 84, 85, 87, 88, 89], "valid": [3, 5, 12, 18, 20, 21, 22, 26, 34, 36, 43, 49, 50, 51, 58, 69, 71, 78, 84, 85, 86], "cdm": [3, 15, 23, 24, 29, 34, 46, 54, 60, 64, 69, 81, 89], "size": [3, 10, 11, 13, 14, 15, 16, 17, 19, 20, 24, 25, 26, 28, 29, 30, 34, 41, 42, 44, 45, 46, 47, 48, 50, 53, 54, 55, 56, 57, 58, 59, 60, 62, 63, 64, 65, 69, 76, 77, 79, 80, 81, 82, 83, 85, 88, 89], "densiti": [3, 4, 11, 34, 35, 42, 58, 62, 64, 69, 70, 77], "symbol": [3, 4, 5, 11, 14, 15, 16, 17, 18, 19, 20, 23, 24, 29, 34, 35, 36, 42, 45, 46, 47, 48, 49, 50, 54, 55, 57, 59, 60, 61, 62, 64, 65, 69, 70, 71, 77, 80, 81, 82, 83, 84, 85, 89], "re": [3, 4, 11, 13, 15, 16, 17, 19, 20, 22, 23, 24, 29, 34, 35, 42, 44, 46, 47, 48, 50, 51, 54, 55, 57, 58, 59, 60, 62, 64, 69, 70, 77, 79, 81, 82, 83, 85, 86, 89], "11": [3, 5, 6, 9, 10, 11, 12, 13, 14, 15, 16, 17, 20, 21, 22, 24, 25, 26, 27, 28, 29, 34, 36, 37, 40, 41, 42, 43, 44, 45, 46, 47, 48, 50, 51, 52, 53, 54, 58, 69, 71, 72, 75, 76, 77, 78, 79, 80, 81, 82, 83, 85, 86, 87, 88, 89], "csityp": [3, 24, 34, 64, 69], "nzp": [3, 4, 11, 24, 34, 35, 42, 60, 62, 64, 69, 70, 77], "numport": [3, 4, 11, 24, 26, 34, 35, 42, 57, 60, 64, 65, 69, 70, 77], "000000001000": [3, 34, 64, 69], "creategrid": [3, 4, 5, 11, 18, 19, 20, 24, 34, 35, 36, 42, 49, 50, 57, 69, 70, 71, 77, 84, 85], "populategrid": [3, 4, 11, 13, 18, 19, 20, 24, 27, 28, 29, 30, 34, 35, 42, 44, 49, 50, 52, 53, 54, 62, 64, 69, 70, 77, 79, 84, 85, 87, 88, 89], "stat": [3, 5, 11, 13, 24, 29, 34, 36, 42, 44, 54, 69, 71, 77, 79, 89], "getstat": [3, 5, 11, 13, 15, 16, 17, 24, 29, 34, 36, 42, 44, 46, 47, 48, 54, 60, 69, 71, 77, 79, 81, 82, 83, 89], "kei": [3, 11, 13, 24, 29, 34, 42, 44, 54, 60, 69, 77, 79, 89], "item": [3, 11, 13, 22, 24, 29, 34, 42, 44, 51, 54, 59, 60, 64, 69, 77, 79, 86, 89], "": [3, 5, 6, 10, 11, 13, 15, 18, 19, 20, 21, 22, 24, 25, 26, 27, 28, 29, 34, 36, 37, 41, 42, 44, 46, 49, 50, 51, 52, 53, 54, 58, 59, 60, 61, 62, 63, 64, 65, 69, 71, 72, 76, 77, 79, 81, 84, 85, 86, 87, 88, 89, 90], "d": [3, 4, 6, 10, 11, 13, 18, 19, 20, 24, 26, 29, 34, 35, 37, 41, 42, 44, 49, 50, 54, 56, 58, 59, 60, 61, 62, 69, 70, 72, 76, 77, 79, 84, 85, 89], "drawmap": [3, 4, 11, 13, 15, 16, 17, 24, 29, 34, 35, 42, 44, 46, 47, 48, 54, 60, 69, 70, 77, 79, 81, 82, 83, 89], "rang": [3, 4, 11, 18, 19, 20, 22, 24, 26, 27, 28, 34, 35, 42, 49, 50, 51, 52, 53, 56, 59, 60, 64, 69, 70, 77, 84, 85, 86, 87, 88], "rerang": [3, 4, 13, 15, 16, 17, 24, 34, 35, 44, 46, 47, 48, 60, 69, 70, 79, 81, 82, 83], "36": [3, 4, 13, 19, 21, 22, 24, 25, 26, 29, 34, 35, 44, 51, 54, 69, 70, 79, 86, 89], "id": [3, 4, 11, 13, 15, 16, 17, 21, 29, 34, 35, 42, 44, 46, 47, 48, 54, 69, 70, 77, 79, 81, 82, 83, 89], "period": [3, 4, 11, 34, 35, 42, 64, 69, 70, 77], "slot": [3, 4, 11, 15, 16, 17, 18, 19, 20, 24, 27, 34, 35, 42, 46, 47, 48, 49, 50, 52, 55, 57, 59, 60, 62, 64, 69, 70, 77, 81, 82, 83, 84, 85, 87], "resourceid": [3, 4, 11, 34, 35, 42, 64, 69, 70, 77], "cdmsize": [3, 4, 11, 34, 35, 42, 64, 69, 70, 77], "nocdm": [3, 34, 64, 69], "index": [3, 4, 5, 11, 13, 16, 17, 18, 19, 20, 23, 24, 26, 27, 28, 29, 30, 34, 35, 36, 42, 44, 47, 48, 49, 50, 52, 53, 54, 55, 57, 58, 59, 60, 62, 64, 65, 69, 70, 71, 77, 79, 82, 83, 84, 85, 87, 88, 89], "offset": [3, 4, 5, 11, 18, 19, 20, 24, 27, 28, 29, 30, 34, 35, 36, 42, 49, 50, 52, 53, 54, 59, 60, 64, 69, 70, 71, 77, 84, 85, 87, 88, 89], "db": [3, 4, 5, 7, 9, 10, 11, 13, 14, 15, 16, 17, 18, 19, 20, 24, 27, 28, 29, 34, 35, 36, 38, 40, 41, 42, 44, 45, 46, 47, 48, 49, 50, 52, 53, 54, 56, 59, 60, 64, 65, 69, 70, 71, 73, 75, 76, 77, 79, 80, 81, 82, 83, 84, 85, 87, 88, 89], "scramblingid": [3, 4, 11, 34, 35, 42, 64, 69, 70, 77], "gridsiz": [3, 11, 13, 15, 16, 17, 24, 29, 34, 42, 44, 46, 47, 48, 54, 69, 77, 79, 81, 82, 83, 89], "4032": [3, 34, 69], "unassign": [3, 5, 11, 15, 16, 17, 24, 34, 36, 42, 46, 47, 48, 60, 62, 69, 71, 77, 81, 82, 83], "3960": [3, 34, 69], "csirs_nzp": [3, 11, 24, 34, 42, 60, 62, 69, 77], "72": [3, 5, 19, 20, 22, 24, 26, 28, 34, 36, 50, 51, 53, 69, 71, 85, 86, 88], "2nd": [3, 34, 69], "everi": [3, 11, 17, 18, 34, 42, 48, 49, 56, 57, 61, 64, 69, 77, 83, 84], "other": [3, 11, 15, 17, 22, 34, 42, 46, 48, 51, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 69, 77, 81, 83, 86], "skip": [3, 11, 21, 22, 29, 34, 42, 51, 54, 69, 77, 86, 89], "addcsir": [3, 34, 64, 69], "1000": [3, 6, 10, 18, 34, 37, 41, 49, 59, 64, 69, 72, 76, 84], "4020": [3, 34, 69], "4008": [3, 34, 69], "3rd": [3, 4, 16, 34, 35, 47, 69, 70, 82], "000001": [3, 22, 34, 51, 69, 86], "fd": [3, 4, 11, 34, 35, 42, 64, 69, 70, 77], "cdm2": [3, 4, 11, 34, 35, 42, 64, 69, 70, 77], "8064": [3, 34, 69], "8016": [3, 34, 69], "48": [3, 5, 13, 22, 24, 25, 26, 29, 34, 36, 44, 51, 54, 69, 71, 79, 86, 89], "8": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 61, 62, 63, 64, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 91], "001000": [3, 11, 34, 42, 69, 77], "7968": [3, 34, 69], "96": [3, 22, 24, 26, 28, 34, 51, 53, 69, 86, 88], "9": [3, 5, 8, 10, 11, 12, 13, 14, 15, 16, 17, 20, 21, 22, 23, 24, 25, 26, 28, 29, 34, 36, 39, 41, 42, 43, 44, 45, 46, 47, 48, 50, 51, 53, 54, 58, 63, 69, 71, 74, 76, 77, 78, 79, 80, 81, 82, 83, 85, 86, 88, 89], "4th": [3, 34, 69], "next": [3, 18, 19, 20, 21, 22, 27, 29, 34, 49, 50, 51, 52, 54, 56, 57, 58, 59, 64, 69, 84, 85, 86, 87, 89], "010": [3, 21, 24, 34, 69], "16128": [3, 34, 69], "15936": [3, 34, 69], "192": [3, 24, 34, 69], "5th": [3, 34, 69], "000010": [3, 22, 34, 51, 69, 86], "6th": [3, 34, 69], "101101": [3, 34, 69], "32256": [3, 34, 69], "31872": [3, 34, 69], "384": [3, 24, 26, 34, 69], "7th": [3, 34, 69], "010010": [3, 34, 69], "13": [3, 5, 7, 10, 11, 12, 13, 14, 15, 16, 17, 19, 20, 22, 24, 25, 26, 27, 28, 29, 34, 36, 38, 41, 42, 43, 44, 45, 46, 47, 48, 50, 51, 52, 53, 54, 69, 71, 73, 76, 77, 78, 79, 80, 81, 82, 83, 85, 86, 87, 88, 89], "8th": [3, 34, 69], "cdm4": [3, 34, 64, 69], "fd2": [3, 34, 64, 69], "td2": [3, 34, 64, 69], "31488": [3, 34, 69], "768": [3, 26, 34, 69], "9th": [3, 34, 69], "48384": [3, 34, 69], "47808": [3, 34, 69], "576": [3, 24, 26, 34, 69], "10th": [3, 34, 69], "101010": [3, 34, 69], "47232": [3, 34, 69], "1152": [3, 26, 34, 69], "16": [3, 5, 6, 8, 9, 10, 11, 12, 13, 14, 20, 21, 22, 24, 25, 26, 28, 29, 30, 34, 36, 37, 39, 40, 41, 42, 43, 44, 45, 50, 51, 53, 54, 58, 64, 69, 71, 72, 74, 75, 76, 77, 78, 79, 80, 85, 86, 88, 89], "11th": [3, 34, 69], "allow": [3, 34, 55, 56, 60, 64, 69], "which": [3, 11, 13, 15, 17, 18, 19, 20, 27, 29, 34, 42, 44, 46, 48, 49, 50, 52, 54, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 69, 77, 79, 81, 83, 84, 85, 87, 89], "would": [3, 15, 34, 46, 69, 81], "caus": [3, 34, 62, 69], "csr": [3, 34, 69], "alloc": [3, 11, 16, 17, 29, 34, 42, 47, 48, 54, 57, 60, 62, 64, 69, 77, 82, 83, 89], "110011": [3, 34, 69], "64512": [3, 34, 69], "63744": [3, 34, 69], "17": [3, 5, 9, 10, 11, 12, 13, 19, 20, 22, 24, 25, 26, 27, 28, 29, 34, 36, 40, 41, 42, 43, 44, 50, 51, 52, 53, 54, 62, 69, 71, 75, 76, 77, 78, 79, 85, 86, 87, 88, 89], "12th": [3, 34, 69], "62976": [3, 34, 69], "1536": [3, 26, 34, 69], "13th": [3, 34, 69], "96768": [3, 34, 69], "95616": [3, 34, 69], "19": [3, 13, 22, 24, 25, 26, 28, 29, 34, 44, 51, 53, 54, 69, 79, 86, 88, 89], "14th": [3, 34, 69], "94464": [3, 34, 69], "2304": [3, 26, 34, 69], "20": [3, 5, 6, 7, 8, 10, 11, 13, 18, 19, 20, 22, 24, 25, 26, 27, 28, 29, 30, 34, 36, 37, 38, 39, 41, 42, 44, 49, 50, 51, 52, 53, 54, 56, 64, 69, 71, 72, 73, 74, 76, 77, 79, 84, 85, 86, 87, 88, 89], "15th": [3, 34, 69], "cdm8": [3, 34, 64, 69], "td4": [3, 34, 64, 69], "92160": [3, 34, 69], "4608": [3, 34, 69], "21": [3, 5, 7, 10, 11, 13, 20, 22, 24, 25, 26, 29, 34, 36, 38, 41, 42, 44, 50, 51, 54, 69, 71, 73, 76, 77, 79, 85, 86, 89], "16th": [3, 34, 69], "32": [3, 13, 21, 22, 24, 25, 26, 29, 34, 44, 51, 54, 59, 64, 69, 79, 86, 89], "129024": [3, 34, 69], "127488": [3, 34, 69], "22": [3, 5, 7, 10, 11, 12, 13, 22, 24, 25, 26, 29, 34, 36, 38, 41, 42, 43, 44, 51, 54, 56, 58, 69, 71, 73, 76, 77, 78, 79, 86, 89], "17th": [3, 34, 69], "125952": [3, 34, 69], "3072": [3, 34, 59, 69], "23": [3, 5, 7, 10, 11, 13, 19, 20, 22, 24, 25, 26, 27, 29, 34, 36, 38, 41, 42, 44, 50, 51, 52, 54, 69, 71, 73, 76, 77, 79, 85, 86, 87, 89], "18th": [3, 34, 69], "122880": [3, 34, 69], "6144": [3, 34, 69], "domain": [4, 5, 10, 11, 13, 18, 19, 20, 27, 28, 30, 35, 36, 41, 42, 44, 49, 50, 52, 53, 55, 59, 60, 64, 65, 70, 71, 76, 77, 79, 84, 85, 87, 88], "etc": [4, 35, 59, 60, 70], "contain": [4, 11, 18, 19, 20, 22, 29, 35, 42, 49, 50, 51, 54, 56, 57, 58, 59, 60, 62, 63, 64, 65, 70, 77, 84, 85, 86, 89], "slotno": [4, 11, 18, 19, 20, 27, 28, 35, 42, 49, 50, 52, 53, 57, 62, 70, 77, 84, 85, 87, 88], "titl": [4, 6, 13, 16, 17, 19, 20, 27, 28, 35, 37, 44, 47, 48, 50, 52, 53, 56, 57, 58, 59, 60, 61, 62, 64, 65, 70, 72, 79, 82, 83, 85, 87, 88], "map": [4, 15, 16, 17, 18, 19, 20, 24, 27, 28, 35, 46, 47, 48, 49, 50, 52, 53, 55, 60, 62, 64, 70, 81, 82, 83, 84, 85, 87, 88], "same": [4, 6, 7, 10, 11, 13, 15, 16, 20, 22, 23, 24, 25, 26, 29, 35, 37, 38, 41, 42, 44, 46, 47, 50, 51, 54, 56, 58, 59, 60, 62, 63, 64, 65, 70, 72, 73, 76, 77, 79, 81, 82, 85, 86, 89], "befor": [4, 11, 12, 13, 15, 16, 17, 24, 29, 35, 42, 43, 44, 46, 47, 48, 54, 56, 58, 59, 60, 62, 70, 77, 78, 79, 81, 82, 83, 89], "wai": [5, 10, 11, 36, 41, 42, 59, 62, 63, 64, 71, 76, 77], "calcul": [5, 10, 11, 14, 18, 19, 20, 25, 26, 29, 36, 41, 42, 45, 49, 50, 54, 55, 56, 58, 59, 60, 61, 62, 64, 65, 71, 76, 77, 80, 84, 85, 89, 90], "compar": [5, 6, 17, 19, 20, 27, 28, 30, 36, 37, 48, 50, 52, 53, 56, 59, 60, 63, 71, 72, 83, 85, 87, 88], "applic": [5, 36, 59, 71], "v": [5, 17, 24, 25, 26, 36, 48, 60, 71, 83], "frequenc": [5, 11, 18, 19, 20, 24, 27, 28, 36, 42, 49, 50, 52, 53, 55, 56, 59, 60, 62, 64, 65, 71, 77, 84, 85, 87, 88], "modem": [5, 14, 28, 29, 30, 36, 45, 53, 54, 61, 62, 71, 80, 88, 89], "cdlchannel": [5, 6, 10, 11, 13, 18, 19, 20, 24, 27, 28, 29, 30, 36, 37, 41, 42, 44, 49, 50, 52, 53, 54, 59, 71, 72, 76, 77, 79, 84, 85, 87, 88, 89], "random": [5, 6, 11, 12, 14, 18, 19, 20, 27, 28, 29, 30, 36, 37, 42, 43, 45, 49, 50, 52, 53, 54, 59, 60, 64, 65, 71, 72, 77, 78, 80, 84, 85, 87, 88, 89], "setse": [5, 6, 18, 19, 20, 27, 28, 29, 30, 36, 37, 49, 50, 52, 53, 54, 63, 71, 72, 84, 85, 87, 88, 89], "123": [5, 6, 10, 11, 18, 19, 20, 26, 27, 28, 29, 30, 36, 37, 41, 42, 49, 50, 52, 53, 54, 63, 71, 72, 76, 77, 84, 85, 87, 88, 89], "result": [5, 6, 7, 8, 9, 18, 19, 20, 22, 27, 28, 29, 30, 36, 37, 38, 39, 40, 49, 50, 51, 52, 53, 54, 56, 58, 59, 60, 62, 63, 65, 71, 72, 73, 74, 75, 84, 85, 86, 87, 88, 89, 90], "reproduc": [5, 19, 20, 27, 28, 29, 30, 36, 50, 52, 53, 54, 63, 71, 85, 87, 88, 89], "25": [5, 7, 10, 11, 13, 18, 19, 20, 22, 24, 25, 26, 27, 29, 36, 38, 41, 42, 44, 49, 50, 51, 52, 54, 62, 65, 71, 73, 76, 77, 79, 84, 85, 86, 87, 89], "crrier": [5, 36, 71], "15khz": [5, 11, 36, 42, 71, 77], "curbwp": [5, 15, 16, 17, 18, 19, 20, 26, 27, 28, 29, 30, 36, 46, 47, 48, 49, 50, 52, 53, 54, 57, 71, 81, 82, 83, 84, 85, 87, 88, 89], "txgrid": [5, 11, 36, 42, 71, 77], "numplan": [5, 36, 57, 60, 71], "empti": [5, 18, 19, 20, 36, 49, 50, 57, 58, 62, 64, 71, 84, 85], "get": [5, 6, 10, 11, 13, 15, 16, 17, 18, 19, 20, 21, 22, 24, 27, 28, 29, 30, 36, 37, 41, 42, 44, 46, 47, 48, 49, 50, 51, 52, 53, 54, 56, 58, 59, 60, 61, 62, 64, 65, 71, 72, 76, 77, 79, 81, 82, 83, 84, 85, 86, 87, 88, 89], "statist": [5, 10, 11, 15, 16, 17, 29, 36, 41, 42, 46, 47, 48, 54, 59, 60, 71, 76, 77, 81, 82, 83, 89], "about": [5, 11, 13, 15, 16, 17, 18, 29, 36, 42, 44, 46, 47, 48, 49, 54, 56, 59, 60, 63, 71, 77, 79, 81, 82, 83, 84, 89], "16qam": [5, 13, 15, 16, 17, 18, 19, 20, 27, 28, 29, 36, 44, 46, 47, 48, 49, 50, 52, 53, 54, 58, 61, 62, 71, 79, 81, 82, 83, 84, 85, 87, 88, 89], "modul": [5, 12, 14, 15, 16, 17, 18, 19, 20, 21, 22, 27, 28, 30, 36, 43, 45, 46, 47, 48, 49, 50, 51, 52, 53, 55, 57, 58, 59, 60, 62, 63, 64, 65, 71, 78, 80, 81, 82, 83, 84, 85, 86, 87, 88], "numrandombit": [5, 36, 71], "qm": [5, 28, 36, 53, 58, 61, 62, 71, 88], "total": [5, 10, 11, 13, 18, 19, 20, 21, 24, 27, 28, 29, 36, 41, 42, 44, 49, 50, 52, 53, 54, 56, 57, 58, 62, 71, 76, 77, 79, 84, 85, 87, 88, 89], "number": [5, 6, 10, 11, 13, 14, 18, 19, 20, 21, 22, 27, 28, 29, 30, 36, 37, 41, 42, 44, 45, 49, 50, 51, 52, 53, 54, 56, 57, 58, 59, 60, 61, 62, 64, 65, 71, 72, 76, 77, 79, 80, 84, 85, 86, 87, 88, 89], "avail": [5, 11, 13, 15, 18, 19, 20, 22, 27, 28, 29, 30, 36, 42, 44, 46, 49, 50, 51, 52, 53, 54, 55, 57, 58, 59, 62, 64, 65, 71, 77, 79, 81, 84, 85, 86, 87, 88, 89, 90], "getreindex": [5, 18, 19, 20, 24, 27, 28, 29, 30, 36, 49, 50, 52, 53, 54, 60, 62, 71, 84, 85, 87, 88, 89], "put": [5, 24, 29, 36, 54, 64, 71, 89], "txwaveform": [5, 6, 10, 11, 13, 18, 19, 20, 24, 27, 28, 29, 30, 36, 37, 41, 42, 44, 49, 50, 52, 53, 54, 71, 72, 76, 77, 79, 84, 85, 87, 88, 89], "ofdmmodul": [5, 11, 13, 18, 19, 20, 24, 27, 28, 29, 30, 36, 42, 44, 49, 50, 52, 53, 54, 60, 65, 71, 77, 79, 84, 85, 87, 88, 89], "ofdm": [5, 17, 18, 19, 20, 27, 28, 30, 36, 48, 49, 50, 52, 53, 55, 57, 59, 60, 62, 64, 65, 71, 83, 84, 85, 87, 88], "waveform": [5, 24, 30, 36, 59, 60, 71, 90], "shape": [5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 18, 19, 20, 21, 22, 24, 25, 26, 29, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 49, 50, 51, 54, 56, 59, 60, 61, 62, 63, 65, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 84, 85, 86, 89], "300": [5, 11, 18, 19, 20, 24, 26, 27, 28, 29, 30, 36, 42, 49, 50, 52, 53, 54, 59, 71, 77, 84, 85, 87, 88, 89], "9216": [5, 36, 71], "cdl": [5, 6, 24, 29, 30, 36, 37, 54, 55, 56, 71, 72, 89], "c": [5, 6, 10, 18, 19, 20, 24, 26, 27, 28, 29, 30, 36, 37, 41, 49, 50, 52, 53, 54, 58, 59, 60, 65, 71, 72, 76, 84, 85, 87, 88, 89], "model": [5, 6, 18, 19, 20, 24, 27, 36, 37, 49, 50, 52, 55, 56, 60, 62, 65, 71, 72, 84, 85, 87], "300n": [5, 24, 36, 71], "delai": [5, 11, 18, 19, 20, 24, 27, 28, 29, 30, 36, 42, 49, 50, 52, 53, 54, 59, 65, 71, 77, 84, 85, 87, 88, 89], "spread": [5, 10, 11, 24, 29, 36, 41, 42, 54, 59, 71, 76, 77, 89], "4ghz": [5, 24, 36, 71], "5hz": [5, 24, 36, 71], "doppler": [5, 6, 10, 24, 29, 36, 37, 41, 54, 59, 71, 72, 76, 89], "shift": [5, 6, 10, 13, 15, 16, 17, 24, 29, 36, 37, 41, 44, 46, 47, 48, 54, 59, 65, 71, 72, 76, 79, 81, 82, 83, 89], "delayspread": [5, 6, 10, 11, 18, 19, 20, 24, 27, 28, 29, 30, 36, 37, 41, 42, 49, 50, 52, 53, 54, 59, 71, 72, 76, 77, 84, 85, 87, 88, 89], "carrierfreq": [5, 6, 10, 11, 18, 19, 20, 24, 27, 28, 29, 30, 36, 37, 41, 42, 49, 50, 52, 53, 54, 59, 71, 72, 76, 77, 84, 85, 87, 88, 89], "4e9": [5, 6, 10, 11, 18, 19, 20, 24, 27, 28, 29, 30, 36, 37, 41, 42, 49, 50, 52, 53, 54, 71, 72, 76, 77, 84, 85, 87, 88, 89], "dopplershift": [5, 6, 10, 11, 18, 19, 20, 24, 27, 28, 29, 30, 36, 37, 41, 42, 49, 50, 52, 53, 54, 59, 71, 72, 76, 77, 84, 85, 87, 88, 89], "txantenna": [5, 6, 10, 11, 18, 19, 20, 24, 26, 27, 28, 29, 30, 36, 37, 41, 42, 49, 50, 52, 53, 54, 59, 71, 72, 76, 77, 84, 85, 87, 88, 89], "tx": [5, 10, 11, 13, 18, 19, 20, 24, 27, 28, 29, 30, 36, 41, 42, 44, 49, 50, 52, 53, 54, 71, 76, 77, 79, 84, 85, 87, 88, 89], "antenna": [5, 6, 10, 11, 13, 18, 19, 20, 24, 26, 27, 28, 29, 30, 36, 37, 41, 42, 44, 49, 50, 52, 53, 54, 55, 59, 60, 62, 64, 65, 71, 72, 76, 77, 79, 84, 85, 87, 88, 89], "rxantenna": [5, 6, 10, 11, 18, 19, 20, 24, 27, 28, 29, 30, 36, 37, 41, 42, 49, 50, 52, 53, 54, 59, 71, 72, 76, 77, 84, 85, 87, 88, 89], "rx": [5, 10, 11, 14, 18, 19, 20, 24, 27, 28, 29, 30, 36, 41, 42, 45, 49, 50, 52, 53, 54, 71, 76, 77, 80, 84, 85, 87, 88, 89], "nearest": [5, 6, 18, 19, 20, 24, 27, 28, 36, 37, 49, 50, 52, 53, 59, 60, 65, 71, 72, 84, 85, 87, 88], "neighbor": [5, 23, 24, 36, 56, 59, 60, 71], "interpol": [5, 6, 19, 20, 24, 27, 28, 29, 36, 37, 50, 52, 53, 54, 59, 60, 71, 72, 85, 87, 88, 89], "try": [5, 6, 20, 24, 36, 37, 50, 71, 72, 85], "linear": [5, 6, 19, 20, 24, 27, 28, 36, 37, 50, 52, 53, 56, 59, 60, 71, 72, 85, 87, 88], "n": [5, 6, 10, 11, 13, 14, 18, 21, 24, 25, 26, 29, 30, 36, 37, 41, 42, 44, 45, 49, 54, 56, 57, 58, 59, 61, 62, 64, 65, 71, 72, 76, 77, 79, 80, 84, 89], "4000000000": [5, 10, 11, 24, 36, 41, 42, 71, 76, 77], "normalizegain": [5, 10, 11, 24, 36, 41, 42, 59, 71, 76, 77], "normalizeoutput": [5, 10, 11, 24, 36, 41, 42, 59, 71, 76, 77], "txdir": [5, 10, 11, 24, 36, 41, 42, 59, 71, 76, 77], "downlink": [5, 10, 11, 24, 29, 36, 41, 42, 54, 57, 58, 59, 60, 64, 71, 76, 77, 89], "coherencetim": [5, 10, 11, 24, 36, 41, 42, 59, 71, 76, 77], "084628": [5, 36, 71], "sec": [5, 10, 11, 18, 19, 20, 21, 24, 27, 28, 36, 41, 42, 49, 50, 52, 53, 71, 76, 77, 84, 85, 87, 88], "uediraz": [5, 10, 11, 24, 36, 41, 42, 59, 71, 76, 77], "pathdelai": [5, 10, 11, 24, 36, 41, 42, 59, 71, 76, 77], "0000": [5, 10, 11, 24, 36, 41, 42, 71, 76, 77], "62": [5, 21, 22, 36, 51, 71, 86], "970": [5, 36, 71], "66": [5, 22, 26, 27, 36, 51, 52, 71, 86, 87], "570": [5, 36, 71], "69": [5, 22, 24, 28, 36, 51, 53, 71, 86, 88], "870": [5, 36, 71], "280": [5, 24, 26, 36, 71], "190": [5, 36, 71], "98": [5, 10, 11, 22, 24, 26, 36, 41, 42, 51, 71, 76, 77, 86], "193": [5, 24, 36, 71], "44": [5, 13, 19, 20, 22, 24, 25, 26, 27, 29, 36, 44, 50, 51, 52, 54, 71, 79, 85, 86, 87, 89], "196": [5, 24, 36, 71], "80": [5, 6, 10, 11, 19, 20, 22, 24, 26, 27, 36, 37, 41, 42, 50, 51, 52, 59, 64, 71, 72, 76, 77, 85, 86, 87], "197": [5, 24, 36, 71], "52": [5, 13, 22, 24, 25, 26, 28, 36, 44, 51, 53, 71, 79, 86, 88], "238": [5, 36, 71], "05": [5, 6, 11, 26, 36, 37, 42, 71, 72, 77], "246": [5, 36, 71], "39": [5, 6, 13, 15, 16, 17, 20, 21, 22, 24, 25, 26, 29, 36, 37, 44, 46, 47, 48, 50, 51, 54, 71, 72, 79, 81, 82, 83, 85, 86, 89], "08": [5, 19, 36, 71], "368": [5, 24, 36, 71], "55": [5, 9, 10, 22, 25, 26, 28, 36, 40, 41, 51, 53, 71, 75, 76, 86, 88], "392": [5, 24, 36, 71], "49": [5, 13, 20, 22, 24, 25, 26, 29, 36, 44, 50, 51, 54, 71, 79, 85, 86, 89], "651": [5, 36, 71], "813": [5, 36, 71], "1277": [5, 36, 71], "1380": [5, 36, 71], "1647": [5, 36, 71], "1682": [5, 36, 71], "1891": [5, 36, 71], "1991": [5, 36, 71], "2112": [5, 26, 36, 71], "2595": [5, 36, 71], "pathpow": [5, 10, 11, 24, 36, 41, 42, 59, 71, 76, 77], "400": [5, 21, 24, 26, 36, 59, 71], "200": [5, 10, 11, 24, 36, 41, 42, 71, 76, 77], "500": [5, 24, 36, 71], "900": [5, 26, 36, 71], "100": [5, 11, 18, 19, 20, 22, 24, 27, 28, 36, 42, 49, 50, 51, 52, 53, 59, 71, 77, 84, 85, 86, 87, 88], "70": [5, 6, 10, 11, 22, 24, 26, 36, 37, 41, 42, 51, 71, 72, 76, 77, 86], "800": [5, 15, 16, 17, 26, 36, 46, 47, 48, 71, 81, 82, 83], "700": [5, 26, 36, 71], "00": [5, 10, 11, 24, 26, 27, 28, 36, 41, 42, 52, 53, 71, 76, 77, 87, 88], "aod": [5, 10, 11, 24, 36, 41, 42, 59, 71, 76, 77], "47": [5, 7, 13, 22, 25, 26, 27, 29, 36, 38, 44, 51, 52, 54, 71, 73, 79, 86, 87, 89], "41": [5, 13, 19, 20, 22, 24, 25, 26, 29, 36, 44, 50, 51, 54, 71, 79, 85, 86, 89], "73": [5, 10, 11, 19, 20, 22, 24, 36, 41, 42, 50, 51, 71, 76, 77, 85, 86], "64": [5, 10, 11, 19, 20, 21, 22, 24, 26, 36, 41, 42, 50, 51, 63, 64, 71, 76, 77, 85, 86], "97": [5, 10, 11, 22, 24, 26, 36, 41, 42, 51, 71, 76, 77, 86], "78": [5, 10, 11, 20, 22, 24, 26, 27, 36, 41, 42, 50, 51, 52, 71, 76, 77, 85, 86, 87], "103": [5, 36, 71], "99": [5, 18, 19, 22, 28, 36, 49, 51, 53, 71, 84, 86, 88], "89": [5, 10, 11, 22, 24, 36, 41, 42, 51, 71, 76, 77, 86], "102": [5, 36, 71], "92": [5, 22, 24, 28, 36, 51, 53, 58, 71, 86, 88], "93": [5, 19, 20, 22, 24, 36, 50, 51, 71, 85, 86], "107": [5, 36, 71], "119": [5, 36, 71], "124": [5, 21, 24, 36, 71], "aoa": [5, 10, 11, 24, 36, 41, 42, 59, 71, 76, 77], "101": [5, 24, 26, 36, 55, 59, 71], "120": [5, 7, 9, 10, 11, 14, 24, 36, 38, 40, 41, 42, 45, 57, 58, 71, 73, 75, 76, 77, 80], "128": [5, 10, 11, 14, 15, 16, 17, 21, 24, 26, 36, 41, 42, 45, 46, 47, 48, 71, 76, 77, 80, 81, 82, 83], "170": [5, 36, 71], "68": [5, 12, 18, 20, 22, 24, 36, 43, 49, 50, 51, 71, 78, 84, 85, 86], "82": [5, 10, 11, 22, 24, 27, 36, 41, 42, 51, 52, 71, 76, 77, 86, 87], "31": [5, 13, 20, 22, 25, 26, 28, 29, 36, 44, 50, 51, 53, 54, 71, 79, 85, 86, 88, 89], "34": [5, 12, 13, 18, 19, 20, 22, 24, 25, 26, 27, 28, 29, 36, 43, 44, 49, 50, 51, 52, 53, 54, 71, 78, 79, 84, 85, 86, 87, 88, 89], "zod": [5, 10, 11, 24, 36, 41, 42, 59, 71, 76, 77], "105": [5, 24, 36, 71], "95": [5, 7, 8, 9, 19, 22, 36, 38, 39, 40, 51, 71, 73, 74, 75, 86], "106": [5, 36, 71], "94": [5, 10, 11, 19, 22, 24, 36, 41, 42, 51, 71, 76, 77, 86], "104": [5, 10, 11, 24, 36, 41, 42, 55, 59, 60, 65, 71, 76, 77], "108": [5, 24, 36, 71], "zoa": [5, 10, 11, 24, 36, 41, 42, 59, 71, 76, 77], "88": [5, 10, 11, 19, 22, 24, 26, 36, 41, 42, 51, 71, 76, 77, 86], "75": [5, 20, 22, 28, 36, 50, 51, 53, 59, 71, 85, 86, 88], "67": [5, 18, 19, 22, 26, 36, 49, 51, 71, 84, 86], "71": [5, 10, 11, 22, 24, 25, 26, 27, 36, 41, 42, 51, 52, 71, 76, 77, 86, 87], "91": [5, 10, 11, 20, 22, 24, 36, 41, 42, 50, 51, 71, 76, 77, 85, 86], "61": [5, 19, 20, 22, 24, 36, 50, 51, 58, 71, 85, 86], "53": [5, 9, 10, 11, 22, 24, 25, 26, 28, 36, 40, 41, 42, 51, 53, 71, 75, 76, 77, 86, 88], "58": [5, 22, 25, 26, 28, 36, 51, 53, 71, 86, 88], "57": [5, 22, 24, 25, 26, 36, 51, 71, 86], "haslo": [5, 10, 11, 24, 36, 41, 42, 59, 71, 76, 77], "cross": [5, 10, 11, 24, 36, 41, 42, 59, 71, 76, 77], "pol": [5, 10, 11, 24, 36, 41, 42, 71, 76, 77], "anglespread": [5, 6, 10, 11, 24, 36, 37, 41, 42, 59, 71, 72, 76, 77], "x": [5, 6, 10, 11, 12, 14, 18, 19, 20, 22, 23, 24, 25, 26, 29, 30, 36, 37, 41, 42, 43, 45, 49, 50, 51, 54, 56, 58, 59, 60, 61, 62, 64, 65, 71, 72, 76, 77, 78, 80, 84, 85, 86, 89], "column": [5, 10, 11, 12, 24, 36, 41, 42, 43, 56, 59, 64, 71, 76, 77, 78], "taper": [5, 10, 11, 24, 36, 41, 42, 56, 71, 76, 77], "filter": [5, 6, 10, 11, 24, 36, 37, 41, 42, 59, 60, 71, 72, 76, 77], "filterdelai": [5, 10, 11, 24, 36, 41, 42, 59, 71, 76, 77], "sampl": [5, 6, 10, 11, 13, 18, 21, 22, 24, 29, 36, 37, 41, 42, 44, 49, 51, 54, 57, 59, 60, 65, 71, 72, 76, 77, 79, 84, 86, 89], "numtxantenna": [5, 10, 11, 13, 24, 36, 41, 42, 44, 71, 76, 77, 79], "numpath": [5, 10, 11, 24, 36, 41, 42, 71, 76, 77], "filterlen": [5, 10, 11, 24, 36, 41, 42, 71, 76, 77], "numinterpol": [5, 10, 11, 24, 36, 41, 42, 71, 76, 77], "50": [5, 10, 11, 13, 22, 24, 25, 26, 28, 29, 36, 41, 42, 44, 51, 53, 54, 57, 71, 76, 77, 79, 86, 88, 89], "stopbandatten": [5, 10, 11, 24, 36, 41, 42, 59, 71, 76, 77], "t0": [5, 6, 7, 9, 18, 19, 20, 22, 27, 28, 36, 37, 38, 40, 49, 50, 51, 52, 53, 71, 72, 73, 75, 84, 85, 86, 87, 88], "experiment": [5, 36, 71], "verif": [5, 36, 71], "debug": [5, 36, 57, 59, 60, 62, 71], "It": [5, 11, 18, 19, 20, 22, 23, 24, 26, 29, 36, 42, 49, 50, 51, 54, 55, 56, 57, 58, 59, 60, 62, 63, 64, 65, 71, 77, 84, 85, 86, 89], "fake": [5, 36, 71], "appli": [5, 6, 12, 13, 14, 18, 19, 20, 24, 27, 28, 30, 36, 37, 43, 44, 45, 49, 50, 52, 53, 55, 56, 58, 59, 60, 62, 65, 71, 72, 78, 79, 80, 84, 85, 87, 88], "demodul": [5, 14, 18, 19, 20, 27, 28, 30, 36, 45, 49, 50, 52, 53, 55, 58, 60, 61, 62, 64, 65, 71, 80, 84, 85, 87, 88], "slowest": [5, 36, 71], "closest": [5, 36, 71], "effect": [5, 14, 18, 29, 36, 45, 49, 54, 55, 59, 60, 65, 71, 80, 84, 89], "channelmatrixtd0": [5, 36, 71], "getchannelmatrixtdexp": [5, 36, 71], "t1": [5, 36, 71], "gain": [5, 6, 36, 37, 55, 56, 59, 71, 72], "channelmatrixtd1": [5, 36, 71], "getchannelmatrix": [5, 11, 18, 19, 20, 24, 27, 28, 29, 30, 36, 42, 49, 50, 52, 53, 54, 59, 62, 71, 77, 84, 85, 87, 88, 89], "timedomain": [5, 11, 24, 36, 42, 59, 71, 77], "interpolatetim": [5, 36, 59, 71], "t2": [5, 36, 71], "without": [5, 15, 29, 36, 46, 54, 55, 56, 58, 60, 63, 64, 71, 81, 89], "directli": [5, 11, 29, 36, 42, 54, 59, 60, 62, 64, 65, 71, 77, 89], "config": [5, 15, 16, 36, 46, 47, 59, 71, 81, 82], "channelmatrixtd2": [5, 36, 71], "t3": [5, 36, 71], "No": [5, 22, 24, 28, 36, 51, 53, 63, 71, 86, 88], "channelmatrixfd": [5, 36, 71], "t4": [5, 36, 71], "07905101776123047": [5, 36, 71], "00852756": [5, 36, 71], "12739031j": [5, 36, 71], "00853205": [5, 36, 71], "12739179j": [5, 36, 71], "00867352": [5, 36, 71], "1274171j": [5, 36, 71], "00908709": [5, 36, 71], "12725874j": [5, 36, 71], "00908488": [5, 36, 71], "12725828j": [5, 36, 71], "0090826": [5, 36, 71], "12725726j": [5, 36, 71], "00920746": [5, 36, 71], "12729786j": [5, 36, 71], "00964038": [5, 36, 71], "12712568j": [5, 36, 71], "00963817": [5, 36, 71], "12712521j": [5, 36, 71], "004191875457763672": [5, 36, 71], "00907741": [5, 36, 71], "12725851j": [5, 36, 71], "00962556": [5, 36, 71], "12712669j": [5, 36, 71], "0034291744232177734": [5, 36, 71], "00854752": [5, 36, 71], "12738554j": [5, 36, 71], "00862589": [5, 36, 71], "12736677j": [5, 36, 71], "00870423": [5, 36, 71], "12734801j": [5, 36, 71], "00878253": [5, 36, 71], "12732925j": [5, 36, 71], "0088608": [5, 36, 71], "12731048j": [5, 36, 71], "00893904": [5, 36, 71], "12729172j": [5, 36, 71], "00901724": [5, 36, 71], "12727295j": [5, 36, 71], "00909731": [5, 36, 71], "12725373j": [5, 36, 71], "00917544": [5, 36, 71], "12723497j": [5, 36, 71], "00925354": [5, 36, 71], "1272162j": [5, 36, 71], "0093316": [5, 36, 71], "12719743j": [5, 36, 71], "00940962": [5, 36, 71], "12717867j": [5, 36, 71], "00948761": [5, 36, 71], "1271599j": [5, 36, 71], "00956557": [5, 36, 71], "12714113j": [5, 36, 71], "005882978439331055": [5, 36, 71], "18121375": [5, 36, 71], "0519848j": [5, 36, 71], "18111617": [5, 36, 71], "05204777j": [5, 36, 71], "18101976": [5, 36, 71], "05210998j": [5, 36, 71], "18092332": [5, 36, 71], "05217218j": [5, 36, 71], "18082688": [5, 36, 71], "05223438j": [5, 36, 71], "18073041": [5, 36, 71], "05229657j": [5, 36, 71], "18063394": [5, 36, 71], "05235875j": [5, 36, 71], "18053627": [5, 36, 71], "05242169j": [5, 36, 71], "18043859": [5, 36, 71], "05248462j": [5, 36, 71], "18034207": [5, 36, 71], "05254679j": [5, 36, 71], "18024553": [5, 36, 71], "05260894j": [5, 36, 71], "18014899": [5, 36, 71], "0526711j": [5, 36, 71], "18005242": [5, 36, 71], "05273324j": [5, 36, 71], "17995584": [5, 36, 71], "05279538j": [5, 36, 71], "receiv": [5, 11, 18, 19, 20, 21, 22, 24, 29, 36, 42, 49, 50, 51, 54, 58, 59, 60, 61, 62, 64, 65, 71, 77, 84, 85, 86, 89], "rxgrid": [5, 11, 18, 19, 20, 24, 27, 28, 29, 30, 36, 42, 49, 50, 52, 53, 54, 62, 71, 77, 84, 85, 87, 88, 89], "maxdelai": [5, 11, 18, 19, 20, 24, 27, 28, 29, 30, 36, 42, 49, 50, 52, 53, 54, 71, 77, 84, 85, 87, 88, 89], "getmaxdelai": [5, 11, 18, 19, 20, 24, 27, 28, 29, 30, 36, 42, 49, 50, 52, 53, 54, 59, 65, 71, 77, 84, 85, 87, 88, 89], "max": [5, 6, 7, 8, 9, 10, 11, 13, 14, 18, 19, 20, 23, 24, 27, 28, 29, 36, 37, 38, 39, 40, 41, 42, 44, 45, 49, 50, 52, 53, 54, 56, 58, 61, 62, 71, 72, 73, 74, 75, 76, 77, 79, 80, 84, 85, 87, 88, 89], "paddedtxwaveform": [5, 36, 71], "pad": [5, 11, 12, 18, 19, 20, 22, 24, 27, 28, 29, 30, 36, 42, 43, 49, 50, 51, 52, 53, 54, 59, 65, 71, 77, 78, 84, 85, 86, 87, 88, 89], "rxwaveform": [5, 10, 11, 18, 19, 20, 24, 27, 28, 29, 30, 36, 41, 42, 49, 50, 52, 53, 54, 60, 71, 76, 77, 84, 85, 87, 88, 89], "applytosign": [5, 6, 10, 11, 18, 19, 20, 24, 27, 28, 29, 30, 36, 37, 41, 42, 49, 50, 52, 53, 54, 59, 65, 71, 72, 76, 77, 84, 85, 87, 88, 89], "gettimingoffset": [5, 11, 18, 19, 20, 24, 27, 28, 29, 30, 36, 42, 49, 50, 52, 53, 54, 59, 65, 71, 77, 84, 85, 87, 88, 89], "synchron": [5, 18, 19, 20, 27, 28, 30, 36, 49, 50, 52, 53, 59, 60, 71, 84, 85, 87, 88], "syncedwaveform": [5, 11, 18, 19, 20, 24, 27, 28, 29, 30, 36, 42, 49, 50, 52, 53, 54, 71, 77, 84, 85, 87, 88, 89], "sync": [5, 11, 18, 19, 20, 24, 27, 28, 29, 30, 36, 42, 49, 50, 52, 53, 54, 59, 60, 65, 71, 77, 84, 85, 87, 88, 89], "ofdmdemodul": [5, 11, 18, 19, 20, 24, 27, 28, 29, 30, 36, 42, 49, 50, 52, 53, 54, 60, 65, 71, 77, 84, 85, 87, 88, 89], "rxgridtd0": [5, 36, 71], "applychannel": [5, 18, 19, 20, 27, 28, 29, 36, 49, 50, 52, 53, 54, 59, 60, 65, 71, 84, 85, 87, 88, 89], "mse": [5, 11, 21, 22, 24, 36, 42, 51, 71, 77, 86], "squar": [5, 11, 18, 19, 20, 24, 25, 26, 27, 29, 36, 42, 49, 50, 52, 54, 60, 71, 77, 84, 85, 87, 89], "ab": [5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 19, 20, 24, 25, 26, 27, 28, 29, 30, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 50, 52, 53, 54, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 85, 87, 88, 89], "mean": [5, 10, 11, 15, 17, 24, 27, 29, 36, 41, 42, 46, 48, 52, 54, 56, 57, 58, 59, 60, 61, 62, 64, 65, 71, 76, 77, 81, 83, 87, 89], "rxgridtd1": [5, 36, 71], "rxgridtd2": [5, 36, 71], "rxgridfd": [5, 36, 71], "amp": [5, 36, 71], "3647531619647926e": [5, 36, 71], "07": [5, 11, 36, 42, 71, 77], "399270605372296e": [5, 36, 71], "893382278673798e": [5, 36, 71], "39108756885752305": [5, 36, 71], "studi": [6, 37, 55, 56, 72], "characterist": [6, 37, 72], "princip": [6, 37, 72], "tdl": [6, 37, 55, 72], "speedkmh": [6, 10, 37, 41, 72, 76], "speed": [6, 10, 37, 41, 59, 72, 76], "ue": [6, 10, 15, 29, 37, 41, 46, 54, 59, 60, 62, 64, 72, 76, 81, 89], "devic": [6, 10, 15, 19, 20, 22, 37, 41, 46, 50, 51, 72, 76, 81, 85, 86], "km": [6, 10, 37, 41, 59, 72, 76], "h": [6, 10, 25, 26, 37, 41, 59, 72, 76], "3600": [6, 10, 37, 41, 72, 76], "299792458": [6, 10, 37, 41, 72, 76], "light": [6, 10, 37, 41, 72, 76], "f": [6, 11, 13, 22, 26, 37, 42, 44, 51, 56, 60, 72, 77, 79, 86], "ghz": [6, 10, 30, 37, 41, 59, 72, 76], "timingmethod": [6, 37, 72], "matlab": [6, 26, 37, 56, 59, 63, 72], "matlabord": [6, 10, 11, 37, 41, 42, 56, 72, 76, 77], "txantennaorient": [6, 37, 72], "anglemean": [6, 37, 72], "130": [6, 7, 8, 9, 10, 11, 37, 38, 39, 40, 41, 42, 72, 73, 74, 75, 76, 77], "110": [6, 7, 10, 11, 37, 38, 41, 42, 72, 73, 76, 77], "scale": [6, 10, 11, 13, 29, 37, 41, 42, 44, 54, 59, 60, 62, 72, 76, 77, 79, 89], "seed": [6, 10, 11, 18, 19, 20, 27, 28, 37, 41, 42, 49, 50, 52, 53, 59, 63, 72, 76, 77, 84, 85, 87, 88], "repeat": [6, 37, 56, 58, 59, 72], "numsampl": [6, 10, 22, 37, 41, 51, 59, 72, 76, 86], "int": [6, 10, 18, 20, 22, 26, 37, 41, 49, 50, 51, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 72, 76, 84, 85, 86], "sampler": [6, 10, 37, 41, 57, 59, 72, 76], "001": [6, 10, 21, 24, 37, 41, 72, 76], "subfram": [6, 10, 37, 41, 55, 57, 72, 76], "channeltim": [6, 37, 59, 72], "getchanneltim": [6, 37, 72], "channelgain": [6, 37, 72], "getchannelgain": [6, 37, 72], "nc": [6, 18, 37, 49, 72, 84], "nt": [6, 10, 25, 26, 29, 37, 41, 54, 59, 60, 62, 65, 72, 76, 89], "upsampl": [6, 37, 59, 72], "execut": [6, 7, 8, 9, 10, 11, 12, 13, 14, 37, 38, 39, 40, 41, 42, 43, 44, 45, 60, 72, 73, 74, 75, 76, 77, 78, 79, 80], "4f": [6, 37, 72], "matplotlib": [6, 11, 13, 19, 20, 27, 28, 37, 42, 44, 50, 52, 53, 56, 72, 77, 79, 85, 87, 88], "pyplot": [6, 11, 13, 19, 20, 27, 28, 37, 42, 44, 50, 52, 53, 72, 77, 79, 85, 87, 88], "plt": [6, 11, 13, 19, 20, 27, 28, 37, 42, 44, 50, 52, 53, 72, 77, 79, 85, 87, 88], "pp": [6, 18, 19, 20, 37, 49, 50, 58, 72, 84, 85], "enumer": [6, 18, 19, 20, 22, 27, 28, 37, 49, 50, 51, 52, 53, 72, 84, 85, 86, 87, 88], "plot": [6, 13, 19, 20, 27, 28, 37, 44, 50, 52, 53, 72, 79, 85, 87, 88], "real": [6, 18, 19, 20, 25, 26, 27, 37, 49, 50, 52, 58, 72, 84, 85, 87], "label": [6, 18, 19, 20, 22, 27, 28, 37, 49, 50, 51, 52, 53, 72, 84, 85, 86, 87, 88], "legend": [6, 19, 20, 27, 28, 37, 50, 52, 53, 72, 85, 87, 88], "pair": [6, 11, 18, 24, 37, 42, 49, 56, 58, 72, 77, 84], "path": [6, 19, 21, 29, 37, 54, 59, 65, 72, 89], "imag": [6, 18, 19, 20, 27, 37, 49, 50, 52, 56, 72, 84, 85, 87], "imaginari": [6, 19, 20, 37, 50, 72, 85], "magnitud": [6, 11, 13, 25, 26, 37, 42, 44, 60, 72, 77, 79], "1457": [6, 37, 72], "2356": [6, 37, 72], "0185": [6, 37, 72], "check": [6, 10, 12, 14, 20, 22, 30, 37, 41, 43, 45, 50, 51, 58, 62, 72, 76, 78, 80, 85, 86], "continu": [6, 11, 18, 37, 42, 49, 55, 72, 77, 84], "each": [6, 11, 13, 18, 19, 20, 24, 28, 29, 37, 42, 44, 49, 50, 53, 54, 56, 57, 58, 59, 60, 61, 62, 64, 65, 72, 77, 79, 84, 85, 88, 89], "run": [6, 10, 11, 19, 20, 37, 41, 42, 50, 55, 72, 76, 77, 85], "step": [6, 18, 19, 20, 21, 22, 29, 37, 49, 50, 51, 54, 58, 59, 60, 72, 84, 85, 86, 89], "onc": [6, 17, 29, 37, 48, 54, 64, 65, 72, 83, 89], "twice": [6, 37, 72], "test": [6, 11, 18, 21, 22, 24, 37, 42, 49, 51, 55, 72, 77, 84, 86], "gains1": [6, 37, 72], "advanc": [6, 37, 59, 72], "state": [6, 37, 59, 64, 72], "gonext": [6, 18, 19, 20, 27, 28, 37, 49, 50, 52, 53, 57, 59, 72, 84, 85, 87, 88], "gains2": [6, 37, 72], "concaten": [6, 11, 24, 26, 37, 42, 58, 72, 77], "gains12c": [6, 37, 72], "restart": [6, 37, 59, 72], "mode": [6, 22, 37, 51, 72, 86], "want": [6, 10, 11, 13, 15, 19, 20, 23, 24, 27, 37, 41, 42, 44, 46, 50, 52, 62, 63, 72, 76, 77, 79, 81, 85, 87], "so": [6, 11, 15, 18, 19, 20, 21, 22, 29, 37, 42, 46, 49, 50, 51, 54, 58, 59, 62, 72, 77, 81, 84, 85, 86, 89], "initi": [6, 10, 11, 18, 19, 20, 37, 41, 42, 49, 50, 58, 59, 60, 62, 63, 64, 65, 72, 76, 77, 84, 85], "restartrangen": [6, 37, 59, 72], "gains12": [6, 37, 72], "absolut": [6, 11, 24, 37, 42, 72, 77], "two": [6, 11, 13, 27, 28, 37, 42, 44, 52, 53, 59, 60, 62, 64, 72, 77, 79, 87, 88], "369472471200176e": [6, 37, 72], "4682821260964236e": [6, 37, 72], "06": [6, 11, 18, 24, 26, 28, 37, 42, 49, 53, 72, 77, 84, 88], "010692990186467183": [6, 37, 72], "01192575626972184": [6, 37, 72], "filet": [6, 37, 72], "data": [6, 10, 11, 15, 18, 19, 20, 21, 22, 27, 28, 29, 30, 37, 41, 42, 46, 49, 50, 51, 52, 53, 54, 56, 57, 58, 60, 62, 64, 72, 76, 77, 81, 84, 85, 86, 87, 88, 89], "some": [6, 11, 13, 15, 16, 17, 18, 19, 21, 29, 37, 42, 44, 46, 47, 48, 49, 54, 57, 58, 60, 62, 64, 65, 72, 77, 79, 81, 82, 83, 84, 89], "signal": [6, 10, 11, 14, 15, 18, 19, 20, 24, 29, 30, 37, 41, 42, 45, 46, 49, 50, 54, 55, 59, 60, 62, 65, 72, 76, 77, 80, 81, 84, 85, 89], "m": [6, 10, 37, 41, 56, 58, 61, 72, 76, 91], "standard": [6, 13, 29, 37, 44, 54, 55, 56, 58, 59, 60, 63, 65, 72, 79, 89], "distribut": [6, 37, 62, 72], "nrnt": [6, 10, 11, 37, 41, 42, 59, 72, 76, 77], "output": [6, 13, 19, 20, 21, 29, 37, 44, 50, 54, 56, 58, 60, 61, 62, 72, 79, 85, 89], "filteroutput1": [6, 37, 72], "channelfilt": [6, 10, 11, 37, 41, 42, 59, 72, 76, 77], "filteroutput2": [6, 37, 72], "filteroutput12c": [6, 37, 72], "txwaveform12": [6, 37, 72], "axi": [6, 18, 25, 26, 27, 37, 49, 52, 56, 59, 72, 84, 87], "filteroutput12": [6, 37, 72], "881784197001252e": [6, 37, 72], "equival": [7, 8, 9, 12, 13, 14, 38, 39, 40, 43, 44, 45, 59, 60, 73, 74, 75, 78, 79, 80], "code": [7, 8, 9, 10, 11, 12, 13, 24, 27, 28, 30, 38, 39, 40, 41, 42, 43, 44, 52, 53, 55, 56, 60, 61, 62, 63, 64, 73, 74, 75, 76, 77, 78, 79, 87, 88], "matlabfil": [7, 8, 9, 10, 11, 12, 13, 14, 38, 39, 40, 41, 42, 43, 44, 45, 73, 74, 75, 76, 77, 78, 79, 80], "mlx": [7, 8, 9, 10, 11, 12, 13, 14, 38, 39, 40, 41, 42, 43, 44, 45, 73, 74, 75, 76, 77, 78, 79, 80], "file": [7, 8, 9, 10, 11, 12, 13, 14, 18, 20, 21, 22, 24, 38, 39, 40, 41, 42, 43, 44, 45, 49, 50, 51, 56, 73, 74, 75, 76, 77, 78, 79, 80, 84, 85, 86], "select": [7, 8, 9, 38, 39, 40, 58, 73, 74, 75], "portion": [7, 8, 9, 38, 39, 40, 73, 74, 75], "return": [7, 8, 9, 11, 13, 18, 19, 20, 22, 23, 24, 25, 26, 28, 29, 38, 39, 40, 42, 44, 49, 50, 51, 53, 54, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 73, 74, 75, 77, 79, 84, 85, 86, 88, 89], "function": [7, 8, 9, 10, 11, 13, 18, 21, 22, 29, 38, 39, 40, 41, 42, 44, 49, 51, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 73, 74, 75, 76, 77, 79, 84, 86, 89], "min": [7, 8, 9, 11, 24, 25, 26, 38, 39, 40, 42, 58, 73, 74, 75, 77], "175": [7, 8, 9, 38, 39, 40, 73, 74, 75], "185": [7, 8, 9, 24, 38, 39, 40, 73, 74, 75], "float64": [7, 8, 9, 19, 20, 38, 39, 40, 50, 73, 74, 75, 85], "88125561687992": [7, 38, 73], "06408449": [7, 38, 73], "54297586": [7, 38, 73], "60588276": [7, 38, 73], "32594437": [7, 38, 73], "7440555": [7, 38, 73], "88125562": [7, 38, 73], "expect": [7, 8, 9, 38, 39, 40, 73, 74, 75], "140": [7, 8, 9, 24, 38, 39, 40, 73, 74, 75], "13389943631754": [7, 38, 73], "29": [7, 13, 22, 24, 25, 26, 27, 29, 38, 44, 51, 52, 54, 62, 73, 79, 86, 87, 89], "63146207": [7, 38, 73], "9993008": [7, 38, 73], "13711387": [7, 38, 73], "06384822": [7, 38, 73], "79202509": [7, 38, 73], "32875878": [7, 38, 73], "28": [7, 13, 19, 20, 22, 24, 25, 26, 29, 38, 44, 50, 51, 54, 73, 79, 85, 86, 89], "67612693": [7, 38, 73], "27": [7, 10, 11, 13, 19, 21, 22, 24, 25, 26, 27, 29, 38, 41, 42, 44, 51, 52, 54, 73, 76, 77, 79, 86, 87, 89], "83094652": [7, 38, 73], "26": [7, 13, 22, 25, 26, 29, 38, 44, 51, 54, 73, 79, 86, 89], "78385309": [7, 38, 73], "51736197": [7, 38, 73], "measur": [7, 38, 56, 73], "take": [7, 13, 18, 21, 22, 38, 44, 49, 51, 55, 73, 79, 84, 86], "complet": [7, 18, 21, 22, 38, 49, 51, 55, 56, 57, 59, 73, 84, 86], "action": [7, 38, 73], "In": [7, 15, 18, 19, 20, 24, 26, 29, 38, 46, 49, 50, 54, 56, 58, 59, 60, 61, 62, 63, 64, 65, 73, 81, 84, 85, 89], "averag": [7, 29, 38, 54, 56, 57, 60, 73, 89], "more": [7, 10, 11, 16, 17, 26, 38, 41, 42, 47, 48, 55, 56, 57, 58, 59, 60, 61, 62, 64, 65, 73, 76, 77, 82, 83, 90], "second": [7, 13, 15, 21, 22, 25, 26, 38, 44, 46, 51, 56, 57, 59, 60, 62, 73, 79, 81, 86], "85": [7, 8, 9, 20, 22, 24, 38, 39, 40, 50, 51, 73, 74, 75, 85, 86], "9520609378814697": [7, 38, 73], "getdirect": [7, 8, 9, 38, 39, 40, 56, 73, 74, 75], "read": [7, 8, 9, 10, 11, 12, 13, 14, 19, 21, 38, 39, 40, 41, 42, 43, 44, 45, 60, 64, 65, 73, 74, 75, 76, 77, 78, 79, 80], "directivitymatlab": [7, 8, 9, 38, 39, 40, 73, 74, 75], "loadmat": [7, 8, 9, 10, 11, 12, 13, 14, 38, 39, 40, 41, 42, 43, 44, 45, 73, 74, 75, 76, 77, 78, 79, 80], "arraydirect": [7, 38, 73], "mat": [7, 8, 9, 10, 11, 12, 13, 14, 38, 39, 40, 41, 42, 43, 44, 45, 73, 74, 75, 76, 77, 78, 79, 80], "clip": [7, 9, 38, 40, 73, 75], "minumum": [7, 9, 38, 40, 73, 75], "linearli": [7, 9, 38, 40, 59, 73, 75], "1e": [7, 9, 11, 13, 14, 38, 40, 42, 44, 45, 73, 75, 77, 79, 80], "assert": [7, 8, 9, 10, 11, 12, 13, 14, 18, 19, 20, 24, 38, 39, 40, 41, 42, 43, 44, 45, 49, 50, 60, 62, 73, 74, 75, 76, 77, 78, 79, 80, 84, 85], "360": [7, 8, 9, 24, 26, 29, 38, 39, 40, 54, 73, 74, 75, 89], "209880444250302e": [7, 38, 73], "09": [7, 11, 38, 42, 73, 77], "getfield": [7, 8, 9, 38, 39, 40, 56, 73, 74, 75], "fieldmatlab": [7, 8, 9, 38, 39, 40, 73, 74, 75], "arrayfield": [7, 38, 73], "973799150320701e": [7, 38, 73], "getpowerpatterndb": [7, 8, 9, 38, 39, 40, 56, 73, 74, 75], "powerdbmatlab": [7, 8, 9, 38, 39, 40, 73, 74, 75], "arraypowerdb": [7, 38, 73], "maxdiff": [7, 11, 38, 42, 73, 77], "365091399449739e": [7, 38, 73], "see": [8, 9, 10, 11, 13, 15, 16, 17, 22, 24, 39, 40, 41, 42, 44, 46, 47, 48, 51, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 74, 75, 76, 77, 79, 81, 82, 83, 86], "directori": [8, 9, 10, 11, 21, 22, 39, 40, 41, 42, 51, 74, 75, 76, 77, 86, 90], "follow": [8, 9, 10, 11, 13, 18, 19, 20, 21, 22, 29, 39, 40, 41, 42, 44, 49, 50, 51, 54, 56, 57, 58, 59, 60, 62, 63, 64, 65, 74, 75, 76, 77, 79, 84, 85, 86, 89, 90], "174314951982485": [8, 39, 74], "825685048017517": [8, 39, 74], "arrai": [8, 9, 11, 12, 13, 18, 19, 20, 23, 24, 25, 26, 39, 40, 42, 43, 44, 49, 50, 55, 56, 58, 59, 60, 61, 62, 63, 64, 65, 74, 75, 77, 78, 79, 84, 85, 90], "75467913": [8, 39, 74], "78024126": [8, 39, 74], "80012292": [8, 39, 74], "8143241": [8, 39, 74], "82284481": [8, 39, 74], "82568505": [8, 39, 74], "07074636689134867": [8, 39, 74], "5926265": [8, 39, 74], "57713592": [8, 39, 74], "5616828": [8, 39, 74], "54628606": [8, 39, 74], "53096402": [8, 39, 74], "51573432": [8, 39, 74], "50061396": [8, 39, 74], "48561921": [8, 39, 74], "47076561": [8, 39, 74], "45606798": [8, 39, 74], "elementdirect": [8, 39, 74], "552713678800501e": [8, 14, 39, 45, 74, 80], "elementfield": [8, 39, 74], "440892098500626e": [8, 39, 74], "elementpowerdb": [8, 39, 74], "197442310920451e": [8, 39, 74], "3461163449353218e": [9, 40, 75], "56": [9, 19, 20, 22, 24, 25, 26, 28, 40, 50, 51, 53, 75, 85, 86, 88], "83750173730888": [9, 40, 75], "76686552": [9, 40, 75], "54": [9, 14, 22, 25, 26, 28, 40, 45, 51, 53, 75, 80, 86, 88], "85766752": [9, 40, 75], "71739482": [9, 40, 75], "33761657": [9, 40, 75], "71222024": [9, 40, 75], "83750174": [9, 40, 75], "584305117453359e": [9, 40, 75], "77330424": [9, 40, 75], "94472821": [9, 40, 75], "03364825": [9, 40, 75], "04789381": [9, 40, 75], "99526854": [9, 40, 75], "88346163": [9, 40, 75], "71996913": [9, 40, 75], "51202565": [9, 40, 75], "26654655": [9, 40, 75], "99008022": [9, 40, 75], "7155697345733643": [9, 40, 75], "867890470891137": [9, 40, 75], "38548524": [9, 40, 75], "55993762": [9, 40, 75], "6950069": [9, 40, 75], "79116026": [9, 40, 75], "84872386": [9, 40, 75], "86789047": [9, 40, 75], "paneldirect": [9, 40, 75], "6200374375330284e": [9, 40, 75], "panelfield": [9, 40, 75], "263256414560601e": [9, 40, 75], "panelpowerdb": [9, 40, 75], "6186163520615082e": [9, 40, 75], "cdltest": [10, 41, 76], "were": [10, 11, 29, 41, 42, 54, 76, 77, 89], "If": [10, 11, 15, 41, 42, 46, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 76, 77, 81], "you": [10, 11, 13, 15, 20, 21, 22, 29, 41, 42, 44, 46, 50, 51, 54, 55, 56, 57, 58, 59, 60, 62, 63, 64, 65, 76, 77, 79, 81, 85, 86, 89, 90], "recreat": [10, 11, 41, 42, 76, 77], "instruct": [10, 11, 41, 42, 76, 77], "matlabfilespath": [10, 12, 13, 14, 41, 43, 44, 45, 76, 78, 79, 80], "object": [10, 11, 12, 13, 15, 16, 17, 18, 19, 20, 21, 22, 24, 26, 27, 28, 29, 30, 41, 42, 43, 44, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 64, 65, 76, 77, 78, 79, 81, 82, 83, 84, 85, 86, 87, 88, 89], "sinc": [10, 11, 18, 29, 41, 42, 49, 54, 62, 63, 64, 76, 77, 84, 89], "alwai": [10, 11, 12, 41, 42, 43, 57, 58, 59, 60, 64, 76, 77, 78], "phase": [10, 11, 41, 42, 59, 62, 64, 76, 77], "rai": [10, 11, 41, 42, 56, 59, 76, 77], "coupl": [10, 11, 28, 41, 42, 53, 59, 64, 76, 77, 88], "getmatlabrandominit": [10, 11, 41, 42, 76, 77], "helper": [10, 11, 41, 42, 62, 65, 76, 77], "implement": [10, 11, 13, 18, 19, 20, 41, 42, 44, 49, 50, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 76, 77, 79, 84, 85], "fir": [10, 11, 41, 42, 76, 77], "slightli": [10, 11, 41, 42, 58, 60, 61, 62, 76, 77], "To": [10, 11, 12, 13, 29, 41, 42, 43, 44, 54, 57, 58, 60, 65, 76, 77, 78, 79, 89], "compens": [10, 11, 41, 42, 76, 77], "need": [10, 11, 12, 15, 22, 29, 41, 42, 43, 46, 51, 54, 56, 59, 63, 64, 65, 76, 77, 78, 81, 86, 89], "modifi": [10, 11, 41, 42, 56, 59, 76, 77], "stopbandattenu": [10, 11, 41, 42, 76, 77], "document": [10, 11, 41, 42, 56, 59, 64, 76, 77], "inform": [10, 11, 13, 15, 18, 19, 20, 29, 41, 42, 44, 46, 49, 50, 54, 56, 57, 58, 59, 60, 61, 62, 64, 65, 76, 77, 79, 81, 84, 85, 89], "cdlmodel": [10, 11, 41, 42, 76, 77], "phiinit": [10, 11, 41, 42, 76, 77], "beta": [10, 11, 13, 41, 42, 44, 56, 59, 76, 77, 79], "getmultiratefir": [10, 11, 41, 42, 76, 77], "861": [10, 11, 41, 42, 76, 77], "abov": [10, 11, 13, 15, 16, 18, 19, 20, 21, 22, 41, 42, 44, 46, 47, 49, 50, 51, 58, 59, 60, 62, 63, 64, 76, 77, 79, 81, 82, 84, 85, 86], "fc": [10, 41, 76], "initialphas": [10, 11, 41, 42, 59, 76, 77], "raycoupl": [10, 11, 41, 42, 59, 76, 77], "txorient": [10, 11, 41, 42, 59, 76, 77], "anglesc": [10, 11, 41, 42, 59, 76, 77], "matlabmatlab": [10, 11, 41, 42, 76, 77], "when": [10, 11, 13, 26, 27, 41, 42, 44, 52, 56, 58, 59, 60, 62, 63, 64, 65, 76, 77, 79, 87], "59401586635868": [10, 41, 76], "007611": [10, 41, 76], "rm": [10, 11, 41, 42, 59, 76, 77], "3500": [10, 11, 24, 41, 42, 76, 77], "1200": [10, 11, 24, 26, 41, 42, 59, 76, 77], "630": [10, 11, 24, 26, 41, 42, 76, 77], "050": [10, 11, 24, 41, 42, 76, 77], "040": [10, 11, 24, 41, 42, 76, 77], "960": [10, 11, 24, 26, 41, 42, 57, 76, 77], "750": [10, 11, 24, 41, 42, 76, 77], "40": [10, 11, 13, 19, 20, 22, 24, 25, 26, 29, 41, 42, 44, 50, 51, 54, 59, 64, 76, 77, 79, 85, 86, 89], "420": [10, 11, 24, 26, 41, 42, 76, 77], "79": [10, 11, 22, 24, 27, 41, 42, 51, 52, 76, 77, 86, 87], "370": [10, 11, 21, 24, 41, 42, 76, 77], "240": [10, 11, 12, 24, 26, 41, 42, 43, 57, 76, 77, 78], "080": [10, 11, 24, 41, 42, 76, 77], "125": [10, 11, 24, 41, 42, 65, 76, 77], "35": [10, 11, 13, 19, 22, 24, 25, 26, 29, 41, 42, 44, 51, 54, 59, 76, 77, 79, 86, 89], "33": [10, 11, 13, 19, 20, 22, 24, 25, 26, 29, 41, 42, 44, 50, 51, 54, 58, 76, 77, 79, 85, 86, 89], "132": [10, 11, 24, 41, 42, 76, 77], "77": [10, 11, 19, 20, 22, 24, 26, 27, 28, 41, 42, 50, 51, 52, 53, 76, 77, 85, 86, 87, 88], "163": [10, 11, 24, 41, 42, 76, 77], "137": [10, 11, 24, 41, 42, 76, 77], "74": [10, 11, 20, 22, 24, 27, 41, 42, 50, 51, 52, 76, 77, 85, 86, 87], "84": [10, 11, 22, 24, 26, 41, 42, 51, 76, 77, 86], "86": [10, 11, 22, 24, 41, 42, 51, 76, 77, 86], "87": [10, 11, 20, 22, 24, 29, 41, 42, 50, 51, 54, 76, 77, 85, 86, 89], "orient": [10, 11, 41, 42, 55, 56, 59, 76, 77], "\ud835\udefc": [10, 11, 41, 42, 76, 77], "\ud835\udec3": [10, 11, 41, 42, 76, 77], "\ud835\udec4": [10, 11, 41, 42, 76, 77], "151": [10, 11, 41, 42, 76, 77], "long": [10, 41, 55, 59, 76], "program": [10, 13, 41, 44, 63, 76, 79], "t": [10, 11, 12, 13, 14, 17, 24, 26, 29, 41, 42, 43, 44, 45, 48, 54, 55, 56, 57, 58, 59, 60, 62, 64, 65, 76, 77, 78, 79, 80, 83, 89], "numinputsampl": [10, 41, 76], "antanna": [10, 41, 76], "load": [10, 11, 13, 41, 42, 44, 76, 77, 79], "sure": [10, 11, 15, 18, 29, 41, 42, 46, 49, 54, 57, 60, 62, 64, 65, 76, 77, 81, 84, 89], "round": [10, 11, 13, 18, 24, 41, 42, 44, 49, 65, 76, 77, 79, 84], "204": [10, 24, 41, 76], "201": [10, 24, 41, 76], "line": [10, 13, 20, 24, 26, 41, 44, 50, 59, 76, 79, 85], "instead": [10, 11, 13, 41, 42, 44, 56, 57, 58, 59, 60, 61, 62, 64, 65, 76, 77, 79], "1j": [10, 19, 20, 25, 26, 41, 50, 76, 85], "rxwaveformmatlab": [10, 11, 41, 42, 76, 77], "diffab": [10, 41, 76], "6478": [10, 41, 76], "1199j": [10, 41, 76], "2126": [10, 41, 76], "1219j": [10, 41, 76], "2027": [10, 41, 76], "3657j": [10, 41, 76], "235": [10, 41, 76], "5164j": [10, 41, 76], "2795": [10, 41, 76], "0952j": [10, 41, 76], "5704": [10, 41, 76], "3598j": [10, 41, 76], "0207": [10, 41, 76], "3367j": [10, 41, 76], "2162": [10, 41, 76], "0988j": [10, 41, 76], "0091": [10, 41, 76], "0549j": [10, 41, 76], "0093": [10, 41, 76], "0458j": [10, 41, 76], "0008": [10, 41, 76], "0113j": [10, 41, 76], "025": [10, 41, 76], "0101j": [10, 41, 76], "5649542371081303e": [10, 41, 76], "matlabpath": [11, 42, 77], "instanc": [11, 13, 22, 29, 42, 44, 51, 54, 59, 63, 77, 79, 86, 89], "singl": [11, 13, 15, 16, 17, 29, 42, 44, 46, 47, 48, 54, 56, 57, 58, 62, 63, 64, 77, 79, 81, 82, 83, 89], "call": [11, 12, 13, 18, 24, 26, 29, 42, 43, 44, 49, 54, 56, 58, 59, 61, 62, 64, 65, 77, 78, 79, 84, 89], "2048": [11, 42, 77], "cell": [11, 13, 15, 16, 17, 18, 19, 20, 21, 22, 24, 26, 29, 42, 44, 46, 47, 48, 49, 50, 51, 54, 57, 77, 79, 81, 82, 83, 84, 85, 86, 89], "activ": [11, 13, 15, 16, 17, 19, 21, 29, 42, 44, 46, 47, 48, 54, 57, 64, 77, 79, 81, 82, 83, 89, 91], "4500000": [11, 42, 77], "condigur": [11, 42, 77], "One": [11, 42, 56, 60, 65, 77], "non": [11, 42, 56, 58, 59, 60, 62, 64, 77], "resouec": [11, 42, 77], "pleas": [11, 18, 29, 42, 49, 54, 56, 57, 58, 59, 60, 62, 63, 64, 65, 77, 84, 89], "current": [11, 18, 42, 49, 55, 56, 57, 58, 59, 60, 61, 63, 64, 77, 84], "have": [11, 13, 15, 17, 19, 20, 21, 22, 23, 24, 29, 42, 44, 46, 48, 50, 51, 54, 56, 58, 59, 62, 64, 65, 77, 79, 81, 83, 85, 86, 89], "zp": [11, 42, 60, 62, 64, 77], "000100": [11, 22, 42, 51, 77, 86], "base": [11, 12, 13, 18, 19, 20, 21, 29, 42, 43, 44, 49, 50, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 77, 78, 79, 84, 85, 89], "Then": [11, 13, 21, 22, 29, 42, 44, 51, 54, 65, 77, 79, 86, 89], "poulat": [11, 42, 77], "dictionari": [11, 13, 19, 20, 27, 42, 44, 50, 52, 60, 62, 77, 79, 85, 87], "after": [11, 29, 42, 54, 58, 59, 60, 62, 65, 77, 89], "visual": [11, 24, 42, 55, 56, 60, 77], "gridstat": [11, 29, 42, 54, 77, 89], "numslot": [11, 18, 19, 20, 24, 27, 28, 42, 49, 50, 52, 53, 57, 59, 60, 77, 84, 85, 87, 88], "content": [11, 42, 55, 57, 58, 60, 62, 77], "16800": [11, 42, 77], "16500": [11, 42, 77], "csirs_zp": [11, 42, 60, 62, 77], "getrevalu": [11, 13, 42, 44, 60, 77, 79], "complex": [11, 18, 19, 20, 21, 29, 42, 49, 50, 54, 55, 56, 59, 60, 61, 62, 63, 64, 65, 77, 84, 85, 89], "correspondingli": [11, 15, 18, 24, 42, 46, 49, 57, 59, 64, 77, 81, 84], "csirssymbol": [11, 42, 77], "nrcsir": [11, 42, 77], "5g": [11, 29, 42, 54, 55, 58, 59, 64, 77, 89], "toolkit": [11, 42, 56, 59, 77], "csirszpsymbol": [11, 42, 77], "These": [11, 18, 19, 20, 29, 42, 49, 50, 54, 55, 56, 58, 59, 62, 64, 77, 84, 85, 89], "csirsnzpsymbol": [11, 42, 77], "csirssymbolsmatlab": [11, 42, 77], "csirssym": [11, 42, 77], "flatten": [11, 13, 42, 44, 77, 79], "mismatch": [11, 12, 13, 14, 29, 30, 42, 43, 44, 45, 54, 77, 78, 79, 80, 89], "WITH": [11, 12, 13, 14, 42, 43, 44, 45, 77, 78, 79, 80], "diff": [11, 13, 14, 42, 44, 45, 77, 79, 80], "210": [11, 26, 42, 77], "7071": [11, 24, 42, 77], "7071j": [11, 42, 77], "5700924586837752e": [11, 14, 42, 45, 77, 80], "whole": [11, 19, 20, 21, 22, 29, 42, 50, 51, 54, 57, 58, 60, 62, 77, 85, 86, 89], "nrresourcegrid": [11, 42, 77], "gridmatlab": [11, 42, 77], "transpos": [11, 13, 18, 19, 20, 22, 25, 26, 42, 44, 49, 50, 51, 77, 79, 84, 85, 86], "order": [11, 13, 42, 44, 56, 58, 61, 62, 77, 79], "127": [11, 42, 77], "j": [11, 13, 24, 25, 26, 42, 44, 77, 79], "ger": [11, 42, 77], "nrofdmmodul": [11, 42, 77], "waveformmatlab": [11, 13, 42, 44, 77, 79], "3000": [11, 18, 42, 49, 77, 84], "3010": [11, 42, 77], "30720": [11, 42, 77], "0017": [11, 13, 42, 44, 77, 79], "0022j": [11, 42, 77], "0027": [11, 42, 77], "0026j": [11, 42, 77], "0038": [11, 42, 77], "0027j": [11, 42, 77], "0048": [11, 42, 77], "0054": [11, 42, 77], "0023j": [11, 42, 77], "0055": [11, 42, 77], "0019j": [11, 42, 77], "0051": [11, 42, 77], "0015j": [11, 42, 77], "0042": [11, 42, 77], "0013j": [11, 42, 77], "0028": [11, 42, 77], "0012j": [11, 42, 77], "0012": [11, 42, 77], "878959614448864e": [11, 42, 77], "042314": [11, 24, 42, 77], "support": [11, 29, 42, 54, 56, 58, 59, 60, 61, 62, 64, 65, 77, 89], "match": [11, 12, 13, 14, 19, 20, 28, 29, 30, 42, 43, 44, 45, 50, 53, 54, 58, 60, 62, 63, 64, 65, 77, 78, 79, 80, 85, 88, 89], "nrperfectchannelestim": [11, 42, 77], "timedomain2": [11, 42, 77], "NOT": [11, 42, 77], "hactual": [11, 24, 42, 77], "hactualmatlab": [11, 42, 77], "h_actual": [11, 42, 77], "687402477901097e": [11, 42, 77], "0173j": [11, 42, 77], "0034": [11, 42, 77], "0171j": [11, 42, 77], "ha": [11, 24, 42, 60, 62, 77], "propag": [11, 42, 58, 65, 77], "goe": [11, 42, 65, 77], "through": [11, 24, 29, 42, 54, 55, 56, 65, 77, 89], "append": [11, 24, 29, 42, 54, 58, 65, 77, 89], "end": [11, 12, 18, 19, 20, 22, 27, 28, 30, 42, 43, 49, 50, 51, 52, 53, 55, 58, 59, 60, 62, 65, 77, 78, 84, 85, 86, 87, 88, 90], "equal": [11, 19, 20, 27, 28, 30, 42, 50, 52, 53, 55, 57, 58, 59, 60, 62, 65, 77, 85, 87, 88], "obtain": [11, 29, 42, 54, 58, 59, 60, 61, 62, 65, 77, 89], "transform": [11, 29, 42, 54, 56, 65, 77, 89], "pass": [11, 13, 24, 29, 42, 44, 54, 57, 59, 60, 62, 63, 64, 65, 77, 79, 89], "sahp": [11, 42, 77], "30731": [11, 42, 77], "28855165e": [11, 42, 77], "17075417e": [11, 42, 77], "05j": [11, 42, 77], "57030299e": [11, 42, 77], "02737737e": [11, 42, 77], "42472190e": [11, 42, 77], "58492709e": [11, 42, 77], "84693723e": [11, 42, 77], "02529180e": [11, 42, 77], "89449786e": [11, 42, 77], "42511598e": [11, 42, 77], "06j": [11, 42, 77], "68494399e": [11, 42, 77], "08190658e": [11, 42, 77], "18506472e": [11, 42, 77], "40357150e": [11, 42, 77], "83048719e": [11, 42, 77], "80838147e": [11, 42, 77], "77166484e": [11, 42, 77], "88491000e": [11, 42, 77], "29606231e": [11, 42, 77], "02508414e": [11, 42, 77], "58492708e": [11, 42, 77], "42511597e": [11, 42, 77], "18506471e": [11, 42, 77], "40357151e": [11, 42, 77], "80838148e": [11, 42, 77], "457436639872327e": [11, 42, 77], "determinist": [11, 13, 42, 44, 77, 79], "nois": [11, 12, 14, 18, 19, 20, 24, 27, 28, 30, 42, 43, 45, 49, 50, 52, 53, 55, 60, 61, 62, 63, 64, 65, 77, 78, 80, 84, 85, 87, 88], "wa": [11, 20, 29, 42, 50, 54, 58, 59, 60, 65, 77, 85, 89], "noisi": [11, 42, 60, 61, 65, 77], "noisywaveform": [11, 24, 42, 77], "add": [11, 14, 18, 19, 20, 21, 24, 27, 28, 29, 30, 42, 45, 49, 50, 52, 53, 54, 59, 60, 64, 65, 77, 80, 84, 85, 87, 88, 89], "snr": [11, 14, 18, 19, 20, 24, 27, 28, 29, 42, 45, 49, 50, 52, 53, 54, 60, 65, 77, 80, 84, 85, 87, 88, 89], "varrianc": [11, 42, 77], "var": [11, 26, 42, 77], "2f": [11, 18, 19, 20, 27, 28, 42, 49, 50, 52, 53, 77, 84, 85, 87, 88], "log10": [11, 14, 28, 42, 45, 53, 77, 80, 88], "addnois": [11, 18, 19, 20, 24, 27, 28, 29, 30, 42, 49, 50, 52, 53, 54, 60, 65, 77, 84, 85, 87, 88, 89], "2203149233307698e": [11, 42, 77], "begin": [11, 18, 29, 42, 49, 54, 57, 60, 65, 77, 84, 89], "But": [11, 42, 77], "practic": [11, 42, 55, 64, 65, 77], "estimatetimingoffset": [11, 24, 42, 60, 65, 77], "doe": [11, 13, 19, 20, 29, 42, 44, 50, 54, 58, 59, 60, 62, 77, 79, 85, 89], "exactli": [11, 13, 29, 42, 44, 54, 77, 79, 89], "both": [11, 20, 29, 42, 50, 54, 56, 58, 59, 60, 62, 63, 64, 77, 85, 89], "cheat": [11, 24, 42, 77], "becaus": [11, 24, 29, 42, 54, 57, 63, 65, 77, 89], "don": [11, 24, 42, 56, 59, 64, 77], "know": [11, 15, 24, 42, 46, 77, 81], "choffset": [11, 24, 42, 77], "Or": [11, 24, 42, 77], "reciv": [11, 24, 42, 77], "rxcsirsconfig": [11, 24, 42, 77], "csirsgrid": [11, 24, 42, 77], "nrofdmdemodul": [11, 42, 77], "rxgridmatlab": [11, 42, 77], "61575139e": [11, 42, 77], "03": [11, 26, 27, 42, 52, 77, 87], "00175339j": [11, 42, 77], "06114113e": [11, 42, 77], "0013182j": [11, 42, 77], "51931543e": [11, 42, 77], "00099349j": [11, 42, 77], "12506622e": [11, 42, 77], "04": [11, 20, 26, 42, 50, 77, 85], "00099399j": [11, 42, 77], "40631448e": [11, 42, 77], "00146395j": [11, 42, 77], "26437220e": [11, 42, 77], "0011728j": [11, 42, 77], "79090970e": [11, 42, 77], "00045581j": [11, 42, 77], "08299457e": [11, 42, 77], "00019759j": [11, 42, 77], "56087026e": [11, 42, 77], "00012872j": [11, 42, 77], "62260526e": [11, 42, 77], "00062589j": [11, 42, 77], "10153725e": [11, 42, 77], "00029551j": [11, 42, 77], "56870049e": [11, 42, 77], "00037998j": [11, 42, 77], "54244624e": [11, 42, 77], "00114511j": [11, 42, 77], "91488916e": [11, 42, 77], "00068177j": [11, 42, 77], "538668235349703e": [11, 42, 77], "estimatechannel": [11, 19, 20, 24, 27, 28, 29, 30, 42, 50, 52, 53, 54, 60, 62, 77, 85, 87, 88, 89], "actual": [11, 22, 24, 27, 28, 29, 30, 42, 51, 52, 53, 54, 56, 58, 59, 61, 62, 64, 65, 77, 86, 87, 88, 89], "least": [11, 18, 19, 20, 24, 29, 42, 49, 50, 54, 57, 59, 60, 64, 77, 84, 85, 89], "hest": [11, 18, 19, 20, 24, 42, 49, 50, 60, 77, 84, 85], "_": [11, 24, 29, 30, 42, 54, 62, 77, 89], "ignor": [11, 13, 42, 44, 56, 58, 59, 60, 62, 64, 65, 77, 79], "relat": [11, 42, 77], "error": [11, 14, 19, 20, 24, 28, 29, 42, 45, 50, 53, 54, 58, 60, 62, 64, 77, 80, 85, 88, 89, 90], "4569771845362033e": [11, 42, 77], "0027963260779751394": [11, 42, 77], "0008693920418179478": [11, 42, 77], "67645612042719e": [11, 42, 77], "00383678": [11, 42, 77], "01727704j": [11, 42, 77], "00337909": [11, 42, 77], "01709973j": [11, 42, 77], "00469164": [11, 42, 77], "0179458j": [11, 42, 77], "fig": [11, 42, 58, 64, 77], "ax1": [11, 42, 77], "ax2": [11, 42, 77], "subplot": [11, 42, 77], "tight_layout": [11, 42, 77], "suptitl": [11, 42, 77], "hm1": [11, 42, 77], "imshow": [11, 42, 77], "cmap": [11, 42, 77], "autumn": [11, 42, 77], "aspect": [11, 42, 77], "origin": [11, 12, 14, 30, 42, 43, 45, 58, 62, 63, 65, 77, 78, 80], "lower": [11, 42, 59, 77], "set_titl": [11, 42, 77], "set_xlabel": [11, 42, 77], "set_ylabel": [11, 42, 77], "set_xtick": [11, 42, 77], "colorbar": [11, 42, 77], "ax": [11, 25, 26, 42, 56, 77], "hm2": [11, 42, 77], "subplots_adjust": [11, 42, 77], "top": [11, 42, 77], "wspace": [11, 42, 77], "encod": [12, 14, 28, 29, 30, 43, 45, 53, 54, 55, 58, 78, 80, 88, 89], "decod": [12, 14, 28, 30, 43, 45, 53, 55, 58, 61, 78, 80, 88], "transport": [12, 14, 28, 30, 43, 45, 53, 55, 58, 62, 78, 80, 88], "ldpcencod": [12, 13, 28, 29, 30, 43, 44, 53, 54, 58, 78, 79, 88, 89], "ldpcdecod": [12, 13, 28, 29, 30, 43, 44, 53, 54, 58, 61, 78, 79, 88, 89], "basegraphno": [12, 28, 29, 30, 43, 53, 54, 58, 78, 88, 89], "qpsk": [12, 14, 43, 45, 58, 61, 62, 78, 80], "rv": [12, 43, 58, 78], "txlayer": [12, 28, 29, 30, 43, 53, 54, 58, 78, 88, 89], "nref": [12, 43, 58, 78], "targetr": [12, 28, 29, 30, 43, 53, 54, 58, 78, 88, 89], "449": [12, 24, 43, 58, 78], "1024": [12, 13, 24, 28, 29, 30, 43, 44, 53, 54, 57, 58, 78, 79, 88, 89], "inbit": [12, 43, 78], "reshap": [12, 14, 19, 20, 25, 26, 43, 45, 50, 78, 80, 85], "dtype": [12, 18, 19, 20, 23, 24, 26, 43, 49, 50, 63, 78, 84, 85], "int8": [12, 23, 24, 43, 63, 78], "crc": [12, 14, 28, 30, 43, 45, 53, 58, 78, 80, 88], "tbwithcrc": [12, 43, 78], "appendcrc": [12, 43, 58, 78], "24a": [12, 29, 30, 43, 54, 58, 78, 89], "10024": [12, 43, 78], "do": [12, 17, 25, 26, 29, 43, 48, 54, 58, 60, 62, 65, 78, 83, 89], "segment": [12, 14, 28, 30, 43, 45, 53, 58, 78, 80, 88], "filler": [12, 43, 58, 78], "codeblockscrc": [12, 43, 78], "dosegment": [12, 14, 43, 45, 58, 78, 80], "fillerbit": [12, 43, 58, 78], "codeblockscrcmatlab": [12, 43, 78], "cbsin": [12, 43, 78], "sum": [12, 14, 19, 20, 24, 25, 26, 27, 28, 29, 30, 43, 45, 50, 52, 53, 54, 58, 59, 78, 80, 85, 87, 88, 89], "codeblock": [12, 14, 30, 43, 45, 58, 78, 80], "includ": [12, 18, 21, 22, 27, 29, 43, 49, 51, 52, 54, 55, 56, 57, 58, 59, 60, 62, 65, 78, 84, 86, 87, 89], "liftings": [12, 43, 58, 78], "zc": [12, 43, 78], "setindex": [12, 43, 58, 64, 78], "numfillerbit": [12, 43, 78], "5280": [12, 43, 78], "244": [12, 24, 26, 43, 78], "basegraph": [12, 43, 58, 78], "8x8": [12, 43, 78], "sub": [12, 13, 43, 44, 58, 59, 78, 79], "matrix": [12, 13, 18, 19, 20, 21, 22, 27, 28, 29, 30, 43, 44, 49, 50, 51, 52, 53, 54, 56, 58, 59, 60, 61, 62, 78, 79, 84, 85, 86, 87, 88, 89, 90], "doubl": [12, 16, 17, 43, 47, 48, 64, 78, 82, 83], "diagon": [12, 43, 78], "section": [12, 43, 56, 57, 58, 59, 60, 61, 62, 64, 65, 78], "r": [12, 18, 19, 20, 23, 24, 26, 27, 28, 43, 49, 50, 52, 53, 55, 58, 60, 62, 78, 84, 85, 87, 88], "join": [12, 14, 26, 43, 45, 78, 80], "46": [12, 13, 22, 25, 26, 29, 43, 44, 51, 54, 78, 79, 86, 89], "codeword": [12, 14, 29, 43, 45, 54, 58, 78, 80, 89], "punctur": [12, 43, 58, 78], "setfillerbit": [12, 43, 58, 78], "testcodeword": [12, 43, 78], "zerofillerbit": [12, 43, 58, 78], "isvalidcodeword": [12, 43, 58, 78], "ones": [12, 13, 23, 24, 43, 44, 65, 78, 79], "intention": [12, 43, 78], "invalid": [12, 26, 43, 78], "usag": [12, 43, 55, 78], "codewordsmatlab": [12, 14, 43, 45, 78, 80], "enc": [12, 43, 78], "15840": [12, 43, 78], "ratematchedcodeword": [12, 14, 28, 29, 43, 45, 53, 54, 78, 80, 88, 89], "ratematch": [12, 14, 43, 45, 58, 78, 80], "rate": [12, 14, 19, 20, 21, 22, 28, 30, 43, 45, 50, 51, 53, 57, 58, 59, 62, 78, 80, 85, 86, 88, 90], "ratematchedcodewordsmatlab": [12, 14, 43, 45, 78, 80], "chin": [12, 43, 78], "22808": [12, 43, 78], "getratematchedcodeword": [12, 28, 29, 30, 43, 53, 54, 58, 78, 88, 89], "simpl": [12, 13, 29, 43, 44, 54, 64, 78, 79, 89], "bipolar": [12, 43, 78], "channel": [12, 24, 27, 28, 30, 43, 52, 53, 55, 56, 60, 64, 65, 78, 87, 88], "channeloutput": [12, 43, 78], "recov": [12, 14, 28, 29, 43, 45, 53, 54, 58, 78, 80, 88, 89], "rxcodedblock": [12, 28, 29, 30, 43, 53, 54, 58, 78, 88, 89], "recoverr": [12, 14, 28, 29, 30, 43, 45, 53, 54, 58, 78, 80, 88, 89], "len": [12, 13, 18, 19, 20, 22, 24, 26, 28, 43, 44, 49, 50, 51, 53, 59, 78, 79, 84, 85, 86, 88], "rxcodedblocksmatlab": [12, 43, 78], "raterec": [12, 43, 78], "inf": [12, 22, 43, 51, 78, 86], "large_llr": [12, 43, 78], "replac": [12, 43, 78], "messag": [12, 18, 43, 49, 58, 64, 78, 84], "rxcodeword": [12, 43, 78], "rxcodewordsmatlab": [12, 43, 78], "decbit": [12, 14, 43, 45, 78, 80], "undo": [12, 43, 78], "rxdecodedwordswithoutcrc": [12, 43, 78], "crcmatch": [12, 28, 29, 30, 43, 53, 54, 58, 78, 88, 89], "checkcrcandmerg": [12, 28, 29, 30, 43, 53, 54, 58, 78, 88, 89], "rxdecodedwordswithoutcrcmatlab": [12, 43, 78], "decblk": [12, 43, 78], "checkcrc": [12, 29, 30, 43, 54, 58, 78, 89], "30khz": [13, 18, 19, 20, 27, 28, 30, 44, 49, 50, 52, 53, 79, 84, 85, 87, 88], "624": [13, 21, 24, 44, 79], "18720000": [13, 44, 79], "enabl": [13, 14, 44, 45, 55, 58, 62, 64, 79, 80], "interleav": [13, 14, 29, 44, 45, 54, 55, 58, 62, 79, 80, 89], "interleavingbundles": [13, 15, 16, 17, 18, 19, 20, 27, 28, 29, 44, 46, 47, 48, 49, 50, 52, 53, 54, 62, 79, 81, 82, 83, 84, 85, 87, 88, 89], "argument": [13, 44, 56, 57, 58, 59, 62, 64, 79], "layer": [13, 15, 16, 17, 18, 19, 20, 21, 22, 29, 30, 44, 46, 47, 48, 49, 50, 51, 54, 55, 58, 60, 62, 64, 79, 81, 82, 83, 84, 85, 86, 89], "could": [13, 20, 22, 44, 50, 51, 58, 59, 60, 62, 79, 85, 86], "own": [13, 44, 59, 62, 79], "them": [13, 22, 24, 29, 44, 51, 54, 56, 58, 62, 63, 64, 79, 86, 89, 90], "instanti": [13, 20, 22, 44, 50, 51, 59, 79, 85, 86], "just": [13, 29, 44, 54, 55, 59, 64, 79, 89], "account": [13, 44, 79], "factor": [13, 44, 56, 59, 60, 62, 79], "newer": [13, 44, 79], "version": [13, 44, 55, 58, 59, 60, 65, 79], "214": [13, 24, 29, 44, 54, 55, 60, 62, 64, 79, 89], "v17": [13, 44, 79], "2021": [13, 44, 79], "ratio": [13, 29, 30, 44, 54, 57, 58, 59, 60, 61, 62, 64, 65, 79, 89], "epr": [13, 44, 64, 79], "forc": [13, 44, 79], "epreratiodb": [13, 15, 16, 17, 29, 44, 46, 47, 48, 54, 64, 79, 81, 82, 83, 89], "numlay": [13, 15, 16, 17, 18, 19, 20, 24, 26, 27, 28, 29, 30, 44, 46, 47, 48, 49, 50, 52, 53, 54, 60, 62, 79, 81, 82, 83, 84, 85, 87, 88, 89], "numcdmgroupswithoutdata": [13, 44, 79], "othercdmgroup": [13, 44, 60, 62, 64, 79, 90], "setdmr": [13, 15, 16, 17, 18, 19, 20, 27, 28, 29, 30, 44, 46, 47, 48, 49, 50, 52, 53, 54, 62, 79, 81, 82, 83, 84, 85, 87, 88, 89], "mappingtyp": [13, 15, 16, 17, 29, 44, 46, 47, 48, 54, 62, 79, 81, 82, 83, 89], "A": [13, 14, 15, 16, 17, 21, 24, 29, 44, 45, 46, 47, 48, 54, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 79, 80, 81, 82, 83, 89], "nid": [13, 15, 16, 17, 18, 19, 20, 27, 28, 29, 30, 44, 46, 47, 48, 49, 50, 52, 53, 54, 62, 64, 79, 81, 82, 83, 84, 85, 87, 88, 89], "rnti": [13, 15, 16, 17, 29, 44, 46, 47, 48, 54, 62, 79, 81, 82, 83, 89], "numcodeword": [13, 15, 16, 17, 29, 44, 46, 47, 48, 54, 79, 81, 82, 83, 89], "portset": [13, 15, 16, 17, 18, 19, 20, 29, 44, 46, 47, 48, 49, 50, 54, 62, 64, 79, 81, 82, 83, 84, 85, 89], "symset": [13, 15, 16, 17, 29, 44, 46, 47, 48, 54, 62, 64, 79, 81, 82, 83, 89], "prbset": [13, 15, 16, 17, 29, 44, 46, 47, 48, 54, 62, 79, 81, 82, 83, 89], "37": [13, 22, 24, 25, 26, 29, 44, 51, 54, 79, 86, 89], "42": [13, 19, 20, 22, 25, 26, 28, 29, 44, 50, 51, 53, 54, 79, 85, 86, 88, 89], "43": [13, 22, 25, 26, 29, 44, 51, 54, 79, 86, 89], "45": [13, 14, 22, 24, 25, 26, 28, 29, 44, 45, 51, 53, 54, 56, 79, 80, 86, 88, 89], "51": [13, 18, 19, 20, 22, 25, 26, 27, 28, 29, 30, 44, 49, 50, 51, 52, 53, 54, 79, 84, 85, 86, 87, 88, 89], "prg": [13, 15, 16, 17, 29, 44, 46, 47, 48, 54, 60, 62, 79, 81, 82, 83, 89], "wideband": [13, 15, 16, 17, 29, 44, 46, 47, 48, 54, 60, 62, 79, 81, 82, 83, 89], "configtyp": [13, 15, 16, 17, 18, 19, 20, 27, 28, 29, 30, 44, 46, 47, 48, 49, 50, 52, 53, 54, 64, 79, 81, 82, 83, 84, 85, 87, 88, 89], "scid": [13, 15, 16, 17, 29, 44, 46, 47, 48, 54, 64, 79, 81, 82, 83, 89], "sameseq": [13, 15, 16, 17, 29, 44, 46, 47, 48, 54, 64, 79, 81, 82, 83, 89], "typea1stpo": [13, 15, 16, 17, 29, 44, 46, 47, 48, 54, 64, 79, 81, 82, 83, 89], "additionalpo": [13, 15, 16, 17, 18, 19, 20, 27, 28, 29, 30, 44, 46, 47, 48, 49, 50, 52, 53, 54, 64, 79, 81, 82, 83, 84, 85, 87, 88, 89], "cdmgroup": [13, 15, 16, 17, 29, 44, 46, 47, 48, 54, 64, 79, 81, 82, 83, 89], "deltashift": [13, 15, 16, 17, 29, 44, 46, 47, 48, 54, 79, 81, 82, 83, 89], "allcdmgroup": [13, 15, 16, 17, 29, 44, 46, 47, 48, 54, 79, 81, 82, 83, 89], "getgrid": [13, 15, 16, 17, 18, 19, 20, 27, 28, 29, 30, 44, 46, 47, 48, 49, 50, 52, 53, 54, 62, 79, 81, 82, 83, 84, 85, 87, 88, 89], "out": [13, 20, 22, 44, 50, 51, 58, 79, 85, 86], "mapping5gphysicalchannelsandsignalstotheresourcegridexampl": [13, 44, 79], "dmrssymbol": [13, 44, 79], "dmrssymbolsmatlab": [13, 44, 79], "70710678": [13, 14, 26, 44, 45, 79, 80], "70710678j": [13, 14, 26, 44, 45, 79, 80], "getgridbits": [13, 44, 79], "crear": [13, 44, 79], "numbit": [13, 18, 19, 20, 27, 28, 29, 30, 44, 49, 50, 52, 53, 54, 79, 84, 85, 87, 88, 89], "feed": [13, 44, 79], "scrambl": [13, 44, 55, 62, 64, 79], "abl": [13, 44, 79], "un": [13, 29, 44, 54, 60, 62, 79, 89], "remark": [13, 29, 44, 54, 79, 89], "below": [13, 18, 20, 44, 49, 50, 59, 60, 62, 64, 65, 79, 84, 85], "getbits": [13, 18, 19, 20, 27, 28, 29, 30, 44, 49, 50, 52, 53, 54, 62, 79, 84, 85, 87, 88, 89], "randint": [13, 44, 63, 79], "unremark": [13, 29, 44, 54, 79, 89], "resault": [13, 44, 79], "pdschbit": [13, 44, 79], "getdatasymbol": [13, 44, 62, 79], "As": [13, 15, 19, 20, 44, 46, 50, 55, 63, 79, 81, 85], "datasymbol": [13, 44, 79], "datasymbolsmatlab": [13, 44, 79], "pdschsymbol": [13, 44, 79], "31622777": [13, 44, 79], "31622777j": [13, 44, 79], "9486833": [13, 44, 79], "9486833j": [13, 44, 79], "count": [13, 44, 62, 79], "ptr": [13, 44, 60, 62, 79], "reserv": [13, 44, 60, 62, 79], "17472": [13, 44, 79], "no_data": [13, 15, 44, 46, 60, 62, 79, 81], "16224": [13, 44, 79], "For": [13, 18, 19, 20, 28, 29, 44, 49, 50, 53, 54, 56, 57, 58, 59, 60, 62, 64, 65, 79, 84, 85, 88, 89], "assum": [13, 29, 44, 54, 56, 58, 59, 60, 62, 65, 79, 89], "transmit": [13, 24, 30, 44, 57, 58, 59, 62, 64, 65, 79], "ident": [13, 20, 22, 44, 50, 51, 62, 64, 79, 85, 86], "w": [13, 25, 26, 44, 79], "fft": [13, 29, 44, 54, 57, 59, 65, 79, 89], "ey": [13, 44, 79], "sqrt": [13, 14, 20, 22, 24, 26, 44, 45, 50, 51, 56, 79, 80, 85, 86], "frist": [13, 44, 79], "accordingli": [13, 44, 79], "35355339": [13, 44, 79], "35355339j": [13, 44, 79], "precodedgrid": [13, 18, 19, 20, 27, 28, 29, 30, 44, 49, 50, 52, 53, 54, 79, 84, 85, 87, 88, 89], "pdschgridmatlab": [13, 44, 79], "pdschgrid": [13, 44, 79], "2236": [13, 44, 79], "4472j": [13, 44, 79], "6708j": [13, 44, 79], "2236j": [13, 44, 79], "4472": [13, 44, 79], "6708": [13, 44, 79], "length": [13, 24, 29, 44, 54, 56, 57, 58, 61, 62, 65, 79, 89], "15360": [13, 29, 44, 54, 79, 89], "0053": [13, 44, 79], "0104j": [13, 44, 79], "0072": [13, 44, 79], "0016j": [13, 44, 79], "0071j": [13, 44, 79], "0086": [13, 44, 79], "0011j": [13, 44, 79], "0063": [13, 44, 79], "0057j": [13, 44, 79], "0191": [13, 44, 79], "0001j": [13, 44, 79], "0044": [13, 44, 79], "004j": [13, 44, 79], "015": [13, 44, 79], "0036j": [13, 44, 79], "0155": [13, 44, 79], "0084j": [13, 44, 79], "008": [13, 21, 44, 79], "015j": [13, 44, 79], "figur": [13, 44, 56, 79], "xlabel": [13, 19, 20, 27, 28, 44, 50, 52, 53, 79, 85, 87, 88], "fontsiz": [13, 44, 79], "ylabel": [13, 19, 20, 27, 28, 44, 50, 52, 53, 79, 85, 87, 88], "text": [13, 44, 56, 57, 58, 59, 60, 61, 62, 64, 65, 79], "payloadlen": [14, 45, 58, 80], "must": [14, 24, 26, 29, 45, 54, 57, 58, 59, 60, 62, 64, 65, 80, 89], "larger": [14, 45, 57, 58, 80], "1706": [14, 45, 80], "ratematchedlen": [14, 45, 58, 80], "ebno": [14, 28, 45, 53, 80, 88], "coder": [14, 28, 29, 45, 53, 54, 62, 80, 88, 89], "bp": [14, 45, 80], "per": [14, 18, 19, 20, 45, 49, 50, 55, 56, 57, 59, 61, 64, 80, 84, 85], "esno": [14, 45, 80], "energi": [14, 45, 64, 80], "over": [14, 45, 62, 80], "snrdb": [14, 18, 19, 20, 24, 27, 28, 29, 30, 45, 49, 50, 52, 53, 54, 60, 65, 80, 84, 85, 87, 88, 89], "noisevar": [14, 25, 26, 45, 60, 61, 62, 65, 80], "noisestd": [14, 45, 60, 63, 65, 80], "varianc": [14, 29, 45, 54, 60, 61, 62, 65, 80, 89], "std": [14, 20, 22, 45, 50, 51, 60, 65, 80, 85, 86], "3424250943932492": [14, 45, 80], "9241819678918566": [14, 45, 80], "9613438343755353": [14, 45, 80], "polarencod": [14, 45, 58, 80], "dci": [14, 45, 58, 64, 80], "datatyp": [14, 45, 58, 80], "payloads": [14, 45, 58, 80], "e": [14, 15, 18, 19, 20, 23, 24, 45, 46, 49, 50, 55, 58, 59, 60, 80, 81, 84, 85, 91], "codeblocks": [14, 45, 58, 80], "k": [14, 18, 19, 20, 25, 26, 29, 45, 49, 50, 54, 56, 57, 58, 59, 60, 62, 64, 80, 84, 85, 89], "polarcodes": [14, 45, 58, 80], "log2": [14, 45, 80], "nmax": [14, 45, 58, 80], "iseg": [14, 45, 58, 80], "disabl": [14, 29, 45, 54, 58, 59, 62, 64, 80, 89], "crcpoli": [14, 45, 58, 80], "24c": [14, 45, 58, 80], "iil": [14, 45, 58, 80], "ibil": [14, 45, 58, 80], "num": [14, 45, 80], "pariti": [14, 45, 58, 62, 80], "npc": [14, 45, 58, 80], "npcwm": [14, 45, 58, 80], "txpblock": [14, 45, 80], "msg": [14, 45, 80], "str": [14, 18, 22, 26, 45, 49, 51, 56, 57, 58, 59, 60, 61, 62, 64, 65, 80, 84, 86], "codeblocksmatlab": [14, 45, 80], "msgcrc": [14, 45, 80], "100100110110000110100110000010": [14, 45, 80], "100100110110000110100110000010111100001010001110100010": [14, 45, 80], "word": [14, 29, 45, 54, 58, 59, 62, 80, 89], "encout": [14, 45, 80], "1001110011": [14, 45, 80], "modin": [14, 45, 80], "modulatedmatlab": [14, 45, 80], "modout": [14, 45, 80], "complexnois": [14, 45, 80], "channois": [14, 45, 80], "rxsymbol": [14, 45, 80], "51312371": [14, 45, 80], "76995541j": [14, 45, 80], "88901799": [14, 45, 80], "41258547j": [14, 45, 80], "44741359": [14, 45, 80], "38917752j": [14, 45, 80], "49504718": [14, 45, 80], "34599014j": [14, 45, 80], "58021683": [14, 45, 80], "80163037j": [14, 45, 80], "llr": [14, 28, 29, 30, 45, 53, 54, 58, 60, 61, 62, 80, 88, 89], "getllrsfromsymbol": [14, 45, 61, 80], "llrsmatlab": [14, 45, 80], "rxllr": [14, 45, 80], "57039747": [14, 45, 80], "35642204": [14, 45, 80], "72080897": [14, 45, 80], "32316924": [14, 45, 80], "42975952": [14, 45, 80], "25153001": [14, 45, 80], "51507488": [14, 45, 80], "05889091": [14, 45, 80], "83619924": [14, 45, 80], "45336219": [14, 45, 80], "hard": [14, 45, 58, 61, 62, 80], "decis": [14, 45, 58, 61, 62, 80], "hardcodeword": [14, 45, 80], "org": [14, 45, 80], "polardecod": [14, 45, 58, 61, 80], "scllistsiz": [14, 45, 58, 80], "useminsum": [14, 45, 58, 80], "scl": [14, 45, 58, 80], "list": [14, 20, 22, 24, 26, 45, 50, 51, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 80, 85, 86], "minsum": [14, 45, 80], "approxim": [14, 45, 58, 61, 62, 80], "raterecoveredrxblock": [14, 45, 58, 80], "raterecoveredrxblocksmatlab": [14, 45, 80], "decin": [14, 45, 80], "dectxblock": [14, 45, 58, 80], "numcrcerror": [14, 45, 58, 80], "dectxblockmatlab": [14, 45, 80], "how": [15, 18, 27, 28, 29, 46, 49, 52, 53, 54, 56, 59, 60, 62, 63, 64, 65, 81, 84, 87, 88, 89, 90, 91], "let": [15, 16, 17, 18, 19, 20, 21, 22, 29, 46, 47, 48, 49, 50, 51, 54, 58, 81, 82, 83, 84, 85, 86, 89], "group": [15, 23, 24, 29, 46, 54, 56, 57, 60, 62, 64, 81, 89], "therefor": [15, 18, 46, 49, 58, 60, 64, 81, 84], "should": [15, 46, 56, 58, 59, 60, 62, 63, 64, 65, 81], "assign": [15, 29, 46, 54, 60, 62, 64, 81, 89], "those": [15, 18, 46, 49, 81, 84], "30000": [15, 16, 17, 29, 46, 47, 48, 54, 81, 82, 83, 89], "000": [15, 16, 17, 29, 46, 47, 48, 54, 57, 59, 81, 82, 83, 89], "1800000": [15, 16, 17, 46, 47, 48, 81, 82, 83], "prb": [15, 16, 17, 46, 47, 48, 62, 81, 82, 83], "dmr": [15, 17, 18, 19, 20, 27, 28, 30, 46, 48, 49, 50, 52, 53, 55, 60, 62, 81, 83, 84, 85, 87, 88], "resours": [15, 16, 17, 46, 47, 48, 81, 82, 83], "popul": [15, 16, 17, 18, 19, 20, 27, 28, 29, 30, 46, 47, 48, 49, 50, 52, 53, 54, 62, 64, 81, 82, 83, 84, 85, 87, 88, 89], "1680": [15, 16, 17, 26, 46, 47, 48, 81, 82, 83], "1560": [15, 46, 81], "cannot": [15, 46, 81], "interfer": [15, 46, 81], "anoth": [15, 19, 20, 29, 46, 50, 54, 59, 60, 81, 85, 89], "tell": [15, 46, 81], "g": [15, 46, 55, 58, 59, 60, 81], "third": [15, 46, 81], "look": [15, 46, 81], "mark": [15, 46, 60, 62, 81], "prevent": [15, 46, 81], "interf": [15, 46, 81], "eachoth": [15, 46, 81], "configur": [15, 18, 19, 20, 27, 28, 30, 46, 49, 50, 52, 53, 58, 60, 62, 64, 81, 84, 85, 87, 88, 90], "suppos": [15, 46, 81], "1620": [16, 26, 47, 82], "addit": [16, 17, 22, 29, 47, 48, 51, 54, 56, 57, 59, 60, 61, 62, 63, 64, 65, 82, 83, 86, 89], "posit": [16, 17, 29, 47, 48, 54, 56, 58, 60, 64, 82, 83, 89], "work": [16, 18, 47, 49, 58, 59, 82, 84, 91], "b": [16, 26, 47, 58, 59, 60, 62, 65, 82], "rel": [16, 47, 56, 59, 62, 82], "still": [16, 47, 82], "setptr": [17, 48, 62, 64, 83], "timedens": [17, 48, 64, 83], "freqdens": [17, 48, 64, 83], "reoffset": [17, 48, 64, 83], "epreratio": [17, 48, 64, 83], "1581": [17, 48, 83], "resourceelementoffset": [17, 48, 64, 83], "3gpp": [17, 24, 29, 48, 54, 55, 56, 57, 58, 59, 60, 61, 62, 64, 65, 83, 89], "01": [17, 20, 26, 27, 48, 50, 52, 83, 85, 87], "ani": [18, 26, 49, 55, 56, 57, 58, 59, 60, 62, 64, 84], "deep": [18, 19, 20, 21, 49, 50, 84, 85], "learn": [18, 19, 20, 21, 22, 49, 50, 51, 84, 85, 86], "project": [18, 49, 84], "prepar": [18, 19, 20, 27, 49, 50, 52, 84, 85, 87], "commun": [18, 19, 20, 49, 50, 55, 57, 58, 62, 64, 65, 84, 85, 90], "pipelin": [18, 29, 49, 54, 55, 62, 84, 89], "captur": [18, 49, 84], "togeth": [18, 22, 49, 51, 58, 64, 84, 86], "known": [18, 29, 49, 54, 84, 89], "pilot": [18, 19, 20, 21, 22, 29, 49, 50, 51, 54, 60, 84, 85, 86, 89], "locat": [18, 19, 20, 21, 22, 29, 49, 50, 51, 54, 56, 60, 62, 64, 84, 85, 86, 89], "algorithm": [18, 29, 49, 54, 55, 58, 59, 60, 84, 89], "precod": [18, 19, 20, 27, 28, 30, 49, 50, 52, 53, 55, 60, 62, 84, 85, 87, 88], "predict": [18, 19, 20, 21, 22, 49, 50, 51, 63, 84, 85, 86], "l": [18, 19, 20, 25, 26, 27, 28, 29, 49, 50, 52, 53, 54, 58, 59, 60, 61, 62, 64, 84, 85, 87, 88, 89], "where": [18, 23, 24, 29, 49, 54, 55, 56, 58, 59, 60, 61, 62, 63, 64, 65, 84, 89], "tensor": [18, 19, 20, 21, 29, 49, 50, 54, 59, 60, 84, 85, 89], "nl": [18, 25, 26, 49, 60, 62, 84], "correspond": [18, 20, 24, 49, 50, 56, 58, 59, 60, 62, 64, 84, 85], "diagram": [18, 19, 20, 21, 22, 49, 50, 51, 84, 85, 86], "getsampl": [18, 49, 84], "ground": [18, 49, 84], "truth": [18, 26, 49, 84], "updat": [18, 49, 58, 59, 60, 62, 64, 84], "broken": [18, 49, 84], "down": [18, 49, 58, 59, 84], "def": [18, 19, 20, 22, 23, 24, 25, 26, 28, 49, 50, 51, 53, 84, 85, 86, 88], "actualchannel": [18, 49, 84], "rsgrid": [18, 19, 20, 49, 50, 84, 85], "pxxch": [18, 20, 49, 50, 64, 84, 85], "rsindex": [18, 19, 20, 49, 50, 84, 85], "rr": [18, 19, 20, 49, 50, 84, 85], "ll": [18, 19, 20, 49, 50, 84, 85], "kk": [18, 19, 20, 49, 50, 84, 85], "ll2": [18, 19, 20, 49, 50, 84, 85], "kk2": [18, 19, 20, 49, 50, 84, 85], "p": [18, 19, 20, 26, 49, 50, 56, 59, 60, 65, 84, 85], "portl": [18, 19, 20, 49, 50, 84, 85], "portk": [18, 19, 20, 49, 50, 84, 85], "uniqu": [18, 19, 20, 49, 50, 84, 85], "numl": [18, 19, 20, 49, 50, 84, 85], "numk": [18, 19, 20, 49, 50, 84, 85], "pilotvalu": [18, 19, 20, 49, 50, 84, 85], "rxvalu": [18, 19, 20, 49, 50, 84, 85], "none": [18, 19, 20, 21, 22, 25, 26, 27, 28, 29, 49, 50, 51, 52, 53, 54, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 84, 85, 86, 87, 88, 89], "inh": [18, 19, 20, 49, 50, 84, 85], "complex128": [18, 49, 84], "2d": [18, 23, 24, 49, 55, 58, 62, 65, 84], "li": [18, 19, 20, 49, 50, 84, 85], "th": [18, 49, 59, 64, 84], "makedataset": [18, 49, 84], "frame": [18, 19, 20, 26, 27, 28, 49, 50, 52, 53, 55, 57, 59, 84, 85, 87, 88], "numfram": [18, 19, 20, 27, 28, 49, 50, 52, 53, 84, 85, 87, 88], "name": [18, 21, 49, 59, 84], "save": [18, 19, 20, 21, 22, 27, 49, 50, 51, 52, 65, 84, 85, 86, 87], "filenam": [18, 22, 49, 51, 84, 86], "shown": [18, 19, 20, 29, 49, 50, 54, 84, 85, 89], "aggreg": [18, 49, 84], "freqdomain": [18, 19, 20, 27, 28, 49, 50, 52, 53, 84, 85, 87, 88], "cellid": [18, 19, 20, 27, 28, 29, 30, 49, 50, 52, 53, 54, 57, 84, 85, 87, 88, 89], "prgsize": [18, 19, 20, 27, 28, 29, 49, 50, 52, 53, 54, 62, 84, 85, 87, 88, 89], "slotsperfram": [18, 19, 20, 27, 28, 49, 50, 52, 53, 57, 60, 84, 85, 87, 88], "totalit": [18, 49, 84], "iter": [18, 26, 49, 56, 58, 84], "curit": [18, 49, 84], "counter": [18, 49, 57, 63, 84], "txbit": [18, 19, 20, 27, 49, 50, 52, 84, 85, 87], "binari": [18, 19, 20, 27, 28, 29, 30, 49, 50, 52, 53, 54, 62, 64, 84, 85, 87, 88, 89], "channelmatrix": [18, 19, 20, 27, 28, 29, 30, 49, 50, 52, 53, 54, 60, 62, 84, 85, 87, 88, 89], "getprecodingmatrix": [18, 19, 20, 27, 28, 29, 30, 49, 50, 52, 53, 54, 62, 84, 85, 87, 88, 89], "perform": [18, 19, 20, 27, 28, 29, 30, 49, 50, 52, 53, 54, 55, 58, 60, 62, 84, 85, 87, 88, 89], "els": [18, 19, 20, 22, 26, 27, 28, 49, 50, 51, 52, 53, 84, 85, 86, 87, 88], "noisyrxwaveform": [18, 19, 20, 27, 28, 29, 30, 49, 50, 52, 53, 54, 84, 85, 87, 88, 89], "info": [18, 19, 20, 21, 24, 27, 28, 49, 50, 52, 53, 64, 84, 85, 87, 88], "newsampl": [18, 49, 84], "newlabel": [18, 49, 84], "dt": [18, 19, 20, 27, 28, 49, 50, 52, 53, 84, 85, 87, 88], "durat": [18, 49, 57, 59, 84], "percentdon": [18, 49, 84], "percentag": [18, 49, 65, 84], "task": [18, 49, 58, 65, 84], "done": [18, 19, 29, 49, 54, 58, 59, 84, 89], "last": [18, 24, 25, 26, 49, 56, 58, 60, 84], "progress": [18, 49, 84], "remain": [18, 49, 58, 62, 63, 64, 84], "convert": [18, 19, 20, 29, 49, 50, 54, 56, 59, 60, 61, 62, 65, 84, 85, 89], "float": [18, 49, 56, 57, 58, 60, 61, 62, 65, 84], "stack": [18, 19, 20, 27, 49, 50, 52, 84, 85, 87], "followin": [18, 49, 84], "mixtur": [18, 49, 84], "experienc": [18, 49, 84], "dure": [18, 29, 49, 54, 57, 60, 62, 84, 89], "your": [18, 49, 55, 56, 59, 63, 84], "machin": [18, 22, 49, 51, 84, 86], "minut": [18, 49, 84], "trainsampl": [18, 21, 49, 84], "trainlabel": [18, 21, 49, 84], "integ": [18, 49, 56, 58, 62, 63, 64, 65, 84], "2000": [18, 26, 49, 84], "chesttrain": [18, 21, 22, 49, 51, 84, 86], "npy": [18, 21, 22, 49, 51, 84, 86], "validsampl": [18, 21, 49, 84], "validlabel": [18, 21, 49, 84], "chestvalid": [18, 21, 22, 49, 51, 84, 86], "testsampl": [18, 21, 49, 84], "testlabel": [18, 21, 49, 84], "4000": [18, 49, 84], "chesttest": [18, 21, 22, 49, 51, 84, 86], "447": [18, 49, 84], "59": [18, 22, 25, 26, 27, 28, 49, 51, 52, 53, 84, 86, 87, 88], "its": [19, 20, 50, 55, 58, 60, 62, 64, 65, 85], "baselin": [19, 20, 50, 85], "case": [19, 20, 29, 50, 54, 56, 58, 59, 60, 61, 62, 64, 65, 85, 89], "perfect": [19, 20, 27, 28, 50, 52, 53, 62, 85, 87, 88], "firebal": [19, 21, 24], "dataset": [19, 90], "basedset": [19, 21], "makefromfil": 19, "chestresnet": [19, 21], "fbm": [19, 21], "gpu": [19, 20, 21, 22, 50, 51, 55, 85, 86], "printlayersinfo": [19, 21], "flop": [19, 21], "format": [19, 21], "getflop": [19, 21], "initsess": [19, 21], "tensorflow": 19, "session": 19, "infer": [19, 20, 50, 85], "chanest": [19, 21], "scope": [19, 21], "inshap": [19, 21], "comment": [19, 21], "outshap": [19, 21], "post": [19, 21], "act": [19, 21, 27, 52, 87], "param": [19, 21], "in_tensor": [19, 21], "612": [19, 21, 24, 29, 54, 60, 89], "14x612x2": [19, 21], "s1_l1_res2": [19, 21], "relu": [19, 20, 21, 22, 50, 51, 85, 86], "328": [19, 21, 24], "s1_l2_res1": [19, 21], "904": [19, 21], "s2_l1_conv": [19, 21], "ksp": [19, 21], "l2": [19, 21], "154": [19, 21], "out_reg": [19, 21], "386": [19, 21], "608": [19, 21, 24], "672": [19, 21, 26], "256": [19, 21, 24, 26], "metal": [19, 20, 22, 50, 51, 85, 86], "appl": 19, "m1": 19, "fed": [19, 20, 50, 85], "packag": [19, 20, 21, 50, 85], "rais": [19, 20, 24, 26, 50, 60, 85], "valueerror": [19, 20, 24, 26, 50, 85], "gird": [19, 20, 29, 50, 54, 60, 85, 89], "dx": [19, 20, 50, 85], "modelin": [19, 20, 50, 85], "batch": [19, 20, 21, 50, 85], "modelout": [19, 20, 50, 85], "inferbatch": 19, "estchan": [19, 20, 50, 85], "ml": [19, 20, 50, 85], "seen": [19, 20, 50, 85], "better": [19, 20, 50, 60, 63, 85], "chanestmethod": [19, 20, 27, 28, 50, 52, 53, 85, 87, 88], "three": [19, 20, 21, 22, 24, 50, 51, 60, 62, 64, 85, 86], "nsimul": [19, 20, 27, 28, 50, 52, 53, 85, 87, 88], "ber": [19, 20, 27, 50, 52, 85, 87, 90], "biterror": [19, 20, 27, 28, 50, 52, 53, 85, 87, 88], "totalbit": [19, 20, 27, 28, 50, 52, 53, 85, 87, 88], "store": [19, 20, 27, 28, 29, 50, 52, 53, 54, 60, 85, 87, 88, 89], "pdschindex": [19, 20, 27, 28, 29, 30, 50, 52, 53, 54, 62, 85, 87, 88, 89], "later": [19, 20, 27, 28, 29, 50, 52, 53, 54, 85, 87, 88, 89, 91], "estchannelmatrix": [19, 20, 27, 28, 29, 30, 50, 52, 53, 54, 85, 87, 88, 89], "elif": [19, 20, 22, 24, 50, 51, 85, 86], "noiseest": [19, 20, 27, 28, 50, 52, 53, 85, 87, 88], "polarint": [19, 20, 27, 28, 50, 52, 53, 60, 85, 87, 88], "kernel": [19, 20, 21, 22, 24, 27, 28, 50, 51, 52, 53, 60, 85, 86, 87, 88], "eqgrid": [19, 20, 27, 28, 29, 30, 50, 52, 53, 54, 60, 85, 87, 88, 89], "llrscale": [19, 20, 27, 28, 29, 30, 50, 52, 53, 54, 60, 62, 85, 87, 88, 89], "rxbit": [19, 20, 27, 50, 52, 85, 87], "gethardbitsfromgrid": [19, 20, 27, 50, 52, 62, 85, 87], "8d": [19, 20, 27, 28, 50, 52, 53, 85, 87, 88], "mothod": [19, 20, 27, 28, 50, 52, 53, 85, 87, 88], "xtick": [19, 20, 27, 28, 50, 52, 53, 85, 87, 88], "yscale": [19, 20, 27, 28, 50, 52, 53, 85, 87, 88], "log": [19, 20, 22, 27, 28, 29, 30, 50, 51, 52, 53, 54, 58, 60, 61, 62, 85, 86, 87, 88, 89], "simul": [19, 20, 27, 28, 50, 52, 53, 55, 57, 59, 61, 63, 85, 87, 88], "2545920": [19, 20, 27, 50, 52, 85, 87], "1036799": [19, 20, 50, 85], "850716": [19, 20, 50, 85], "606267": [19, 20, 50, 85], "81": [19, 20, 22, 24, 26, 27, 50, 51, 52, 85, 86, 87], "02": [19, 20, 25, 26, 50, 85], "350625": [19, 20, 50, 85], "145817": [19, 20, 50, 85], "83": [19, 22, 51, 58, 86], "1093175": 19, "894557": 19, "638622": 19, "388298": 19, "191185": 19, "1138786": [19, 20, 50, 85], "968019": [19, 20, 50, 85], "717426": [19, 20, 50, 85], "448406": [19, 20, 50, 85], "217902": [19, 20, 50, 85], "requir": [20, 22, 50, 51, 62, 85, 86], "torch": [20, 22, 50, 51, 85, 86], "nn": [20, 22, 50, 51, 85, 86], "defin": [20, 21, 22, 29, 50, 51, 54, 56, 58, 59, 60, 62, 63, 64, 85, 86, 89], "resnet": [20, 50, 85, 90], "resblock": [20, 22, 50, 51, 85, 86], "__init__": [20, 22, 24, 26, 50, 51, 85, 86], "self": [20, 22, 24, 26, 50, 51, 85, 86], "indepth": [20, 22, 50, 51, 85, 86], "middepth": [20, 22, 50, 51, 85, 86], "outdepth": [20, 22, 50, 51, 85, 86], "stride": [20, 22, 50, 51, 85, 86], "super": [20, 22, 50, 51, 85, 86], "isinst": [20, 22, 50, 51, 85, 86], "conv1": [20, 22, 50, 51, 85, 86], "conv2d": [20, 22, 50, 51, 85, 86], "1x1": [20, 22, 50, 51, 85, 86], "conv": [20, 22, 50, 51, 85, 86], "bn1": [20, 22, 50, 51, 85, 86], "batchnorm2d": [20, 22, 50, 51, 85, 86], "conv2": [20, 22, 50, 51, 85, 86], "bn2": [20, 22, 50, 51, 85, 86], "conv3": [20, 22, 50, 51, 85, 86], "bn3": [20, 22, 50, 51, 85, 86], "inplac": [20, 22, 50, 51, 85, 86], "downsamplenet": [20, 22, 50, 51, 85, 86], "sequenti": [20, 22, 50, 51, 59, 85, 86], "bn": [20, 21, 22, 50, 51, 85, 86], "init": [20, 22, 50, 51, 85, 86], "ones_": [20, 22, 50, 51, 85, 86], "weight": [20, 22, 50, 51, 56, 58, 85, 86], "zeros_": [20, 22, 50, 51, 85, 86], "bia": [20, 22, 50, 51, 85, 86], "trunc_normal_": [20, 22, 50, 51, 85, 86], "prod": [20, 22, 50, 51, 85, 86], "improv": [20, 22, 50, 51, 85, 86], "like": [20, 22, 50, 51, 58, 64, 85, 86], "forward": [20, 22, 50, 51, 62, 85, 86], "chestnet": [20, 22, 50, 51, 85, 86], "res1": [20, 21, 22, 50, 51, 85, 86], "9x11": [20, 21, 22, 50, 51, 85, 86], "res2": [20, 21, 22, 50, 51, 85, 86], "3x7": [20, 21, 22, 50, 51, 85, 86], "res3": [20, 22, 50, 51, 85, 86], "cuda": [20, 22, 50, 51, 85, 86], "is_avail": [20, 22, 50, 51, 85, 86], "mp": [20, 22, 50, 51, 85, 86], "backend": [20, 22, 50, 51, 85, 86], "cpu": [20, 22, 50, 51, 85, 86], "move": [20, 22, 50, 51, 59, 85, 86], "target": [20, 22, 50, 51, 58, 85, 86], "chestmodel": [20, 50, 85], "pth": [20, 22, 50, 51, 85, 86], "epoch": [20, 21, 22, 50, 51, 85, 86], "search": [20, 50, 85], "choos": [20, 29, 50, 54, 59, 85, 89], "load_state_dict": [20, 50, 85], "chestmodelweight": [20, 22, 50, 51, 85, 86], "map_loc": [20, 50, 85], "weights_onli": [20, 50, 85], "prev": [20, 50, 85], "eval": [20, 22, 50, 51, 85, 86], "pytorch": [20, 22, 50, 51, 85, 86], "from_numpi": [20, 50, 85], "float32": [20, 22, 50, 51, 85, 86], "no_grad": [20, 22, 50, 51, 85, 86], "bring": [20, 50, 85], "back": [20, 50, 60, 65, 85], "1083427": [20, 50, 85], "887882": [20, 50, 85], "637612": [20, 50, 85], "389796": [20, 50, 85], "197993": [20, 50, 85], "neural": [21, 22, 51, 86], "network": [21, 22, 51, 62, 86], "structur": [21, 22, 51, 86], "traind": [21, 22, 51, 86], "validd": [21, 22, 51, 86], "testd": [21, 22, 51, 86], "printdsinfo": 21, "16000": [21, 22, 51, 86], "2400": [21, 22, 26, 51, 86], "grai": 21, "box": 21, "layersinfo": 21, "string": [21, 26, 56, 57, 58, 59, 60, 61, 62, 64, 65], "k_kernel_ixi": 21, "o_outsizes_i": 21, "s_stride_ixi_1": 21, "conv_k1_": 21, "s_o": 21, "o0_pv": 21, "conv_k": 21, "k_s1_o": 21, "o1_p": 21, "conv_k1_s1_o": 21, "o2": 21, "o2_pv": 21, "tensor_s14": 21, "res2_k11x9_o16": 21, "res1_k7x3_o16": 21, "conv_k3_o2_p": 21, "l2r": 21, "convolut": [21, 22, 51, 86], "3x3": [21, 56], "regular": 21, "reg_s14": 21, "validationd": 21, "batchsiz": [21, 22, 51, 86], "numepoch": [21, 22, 51, 86], "learningr": [21, 22, 51, 86], "002": 21, "00001": 21, "decai": [21, 22, 51, 86], "exponenti": [21, 22, 51, 61, 62, 86], "regfactor": 21, "dropoutkeep": 21, "optim": [21, 22, 51, 86], "adam": [21, 22, 51, 86], "sever": [21, 22, 51, 57, 61, 65, 86], "hour": [21, 22, 51, 86], "proce": [21, 22, 51, 86], "loss": [21, 22, 51, 86], "00200000009": 21, "0638999": 21, "249": [21, 24], "0086457": 21, "374": 21, "0057803": 21, "007": 21, "499": 21, "00190000003": 21, "0047276": 21, "005": 21, "003938": 21, "749": 21, "0035286": 21, "874": 21, "0034247": 21, "999": 21, "00180500001": 21, "0030548": 21, "1124": 21, "0029008": 21, "012": 21, "1249": 21, "0027836": 21, "004": 21, "1374": 21, "0028083": 21, "1499": 21, "00171474996": 21, "0028544": 21, "399": 21, "49874": 21, "00001015221": 21, "0014256": 21, "49999": 21, "001426": 21, "18354": 21, "evaluatemodel": 21, "process": [21, 29, 54, 58, 59, 60, 61, 62, 65, 89], "nmse": 21, "326738": 21, "001526": 21, "rmse": 21, "033944": 21, "mae": 21, "026846": 21, "0015264276": 21, "033943895": 21, "026845945": 21, "32673806058297666": 21, "gmse": 21, "0015264275197926392": 21, "grmse": 21, "03906952162226509": 21, "gmae": 21, "026845943238406472": 21, "csvitem": 21, "bestms": 21, "bestepoch": [21, 22, 51, 86], "traintim": 21, "001377510605379939": 21, "61710548401": 21, "freamework": [22, 51, 86], "tool": [22, 51, 86], "datetim": [22, 51, 86], "util": [22, 27, 28, 29, 30, 51, 52, 53, 54, 86, 87, 88, 89], "dataload": [22, 51, 86], "lr_schedul": [22, 51, 86], "exponentiallr": [22, 51, 86], "chestdataset": [22, 51, 86], "__len__": [22, 51, 86], "__getitem__": [22, 51, 86], "idx": [22, 23, 24, 51, 86], "loader": [22, 51, 86], "traindl": [22, 51, 86], "shuffl": [22, 51, 63, 86], "validdl": [22, 51, 86], "testdl": [22, 51, 86], "pictur": [22, 51, 86], "And": [22, 51, 86], "loop": [22, 51, 86], "trainepoch": [22, 51, 86], "lossfunct": [22, 51, 86], "modeldevic": [22, 51, 86], "lossmin": [22, 51, 86], "lossmean": [22, 51, 86], "lossmax": [22, 51, 86], "batchno": [22, 51, 86], "batchsampl": [22, 51, 86], "batchlabel": [22, 51, 86], "comput": [22, 51, 55, 86], "batchpredict": [22, 51, 86], "backward": [22, 51, 86], "backpropag": [22, 51, 86], "zero_grad": [22, 51, 86], "lossvalu": [22, 51, 86], "numbatch": [22, 51, 86], "0001": [22, 51, 86], "mseloss": [22, 51, 86], "tupl": [22, 23, 24, 26, 51, 56, 59, 60, 62, 86], "lr1st": [22, 51, 86], "lrlast": [22, 51, 86], "lr": [22, 51, 86], "lrschedul": [22, 51, 86], "exp": [22, 51, 86], "schedul": [22, 51, 62, 86], "lowestloss": [22, 51, 86], "4d": [22, 25, 26, 51, 86], "10f": [22, 51, 86], "get_last_lr": [22, 51, 86], "validloss": [22, 51, 86], "best": [22, 29, 51, 54, 86, 89], "far": [22, 51, 86], "state_dict": [22, 51, 86], "indic": [22, 51, 56, 58, 59, 60, 62, 86], "timedelta": [22, 51, 86], "131095": [22, 51, 86], "018107": [22, 51, 86], "000095": [22, 51, 86], "007698": [22, 51, 86], "004004": [22, 51, 86], "000091": [22, 51, 86], "003329": [22, 51, 86], "002922": [22, 51, 86], "000087": [22, 51, 86], "002697": [22, 51, 86], "002642": [22, 51, 86], "000083": [22, 51, 86], "002430": [22, 51, 86], "002455": [22, 51, 86], "000079": [22, 51, 86], "002270": [22, 51, 86], "002382": [22, 51, 86], "000076": [22, 51, 86], "002169": [22, 51, 86], "002182": [22, 51, 86], "000072": [22, 51, 86], "002083": [22, 51, 86], "002352": [22, 51, 86], "000069": [22, 51, 86], "002019": [22, 51, 86], "002460": [22, 51, 86], "000066": [22, 51, 86], "001962": [22, 51, 86], "002147": [22, 51, 86], "000063": [22, 51, 86], "001917": [22, 51, 86], "001909": [22, 51, 86], "000060": [22, 51, 86], "001873": [22, 51, 86], "002105": [22, 51, 86], "000057": [22, 51, 86], "001842": [22, 51, 86], "001950": [22, 51, 86], "000055": [22, 51, 86], "001809": [22, 51, 86], "001785": [22, 51, 86], "000052": [22, 51, 86], "001781": [22, 51, 86], "000050": [22, 51, 86], "001757": [22, 51, 86], "002527": [22, 51, 86], "000048": [22, 51, 86], "001736": [22, 51, 86], "001796": [22, 51, 86], "000045": [22, 51, 86], "001719": [22, 51, 86], "001724": [22, 51, 86], "000043": [22, 51, 86], "001700": [22, 51, 86], "001919": [22, 51, 86], "000041": [22, 51, 86], "001682": [22, 51, 86], "001789": [22, 51, 86], "000039": [22, 51, 86], "001668": [22, 51, 86], "001765": [22, 51, 86], "000038": [22, 51, 86], "001657": [22, 51, 86], "001684": [22, 51, 86], "000036": [22, 51, 86], "001651": [22, 51, 86], "001970": [22, 51, 86], "000034": [22, 51, 86], "001632": [22, 51, 86], "001833": [22, 51, 86], "000033": [22, 51, 86], "001624": [22, 51, 86], "001627": [22, 51, 86], "000031": [22, 51, 86], "001621": [22, 51, 86], "001659": [22, 51, 86], "000030": [22, 51, 86], "001609": [22, 51, 86], "001677": [22, 51, 86], "000028": [22, 51, 86], "001600": [22, 51, 86], "001732": [22, 51, 86], "000027": [22, 51, 86], "001594": [22, 51, 86], "001583": [22, 51, 86], "000026": [22, 51, 86], "001586": [22, 51, 86], "001582": [22, 51, 86], "000025": [22, 51, 86], "001579": [22, 51, 86], "001688": [22, 51, 86], "000024": [22, 51, 86], "001575": [22, 51, 86], "001565": [22, 51, 86], "000023": [22, 51, 86], "001572": [22, 51, 86], "001834": [22, 51, 86], "000022": [22, 51, 86], "001563": [22, 51, 86], "001663": [22, 51, 86], "000021": [22, 51, 86], "001561": [22, 51, 86], "001573": [22, 51, 86], "000020": [22, 51, 86], "001554": [22, 51, 86], "000019": [22, 51, 86], "001550": [22, 51, 86], "001626": [22, 51, 86], "000018": [22, 51, 86], "001545": [22, 51, 86], "001555": [22, 51, 86], "000017": [22, 51, 86], "001542": [22, 51, 86], "000016": [22, 51, 86], "001540": [22, 51, 86], "001564": [22, 51, 86], "001534": [22, 51, 86], "001556": [22, 51, 86], "000015": [22, 51, 86], "001532": [22, 51, 86], "000014": [22, 51, 86], "001529": [22, 51, 86], "001527": [22, 51, 86], "001537": [22, 51, 86], "000013": [22, 51, 86], "001547": [22, 51, 86], "000012": [22, 51, 86], "001521": [22, 51, 86], "001553": [22, 51, 86], "001513": [22, 51, 86], "000011": [22, 51, 86], "001517": [22, 51, 86], "001514": [22, 51, 86], "001499": [22, 51, 86], "001512": [22, 51, 86], "001496": [22, 51, 86], "000009": [22, 51, 86], "001509": [22, 51, 86], "001511": [22, 51, 86], "001507": [22, 51, 86], "001502": [22, 51, 86], "000008": [22, 51, 86], "001508": [22, 51, 86], "001525": [22, 51, 86], "001506": [22, 51, 86], "001504": [22, 51, 86], "001497": [22, 51, 86], "000007": [22, 51, 86], "001503": [22, 51, 86], "001489": [22, 51, 86], "001501": [22, 51, 86], "001576": [22, 51, 86], "001498": [22, 51, 86], "000006": [22, 51, 86], "001500": [22, 51, 86], "001485": [22, 51, 86], "63": [22, 26, 51, 86], "001494": [22, 51, 86], "000005": [22, 51, 86], "001493": [22, 51, 86], "001490": [22, 51, 86], "001483": [22, 51, 86], "000004": [22, 51, 86], "001492": [22, 51, 86], "001482": [22, 51, 86], "001480": [22, 51, 86], "001484": [22, 51, 86], "001488": [22, 51, 86], "001486": [22, 51, 86], "001487": [22, 51, 86], "000003": [22, 51, 86], "001477": [22, 51, 86], "76": [22, 24, 51, 86], "001474": [22, 51, 86], "000002": [22, 51, 86], "001479": [22, 51, 86], "001481": [22, 51, 86], "001475": [22, 51, 86], "001471": [22, 51, 86], "001473": [22, 51, 86], "001472": [22, 51, 86], "001470": [22, 51, 86], "001478": [22, 51, 86], "001469": [22, 51, 86], "testloss": [22, 51, 86], "6f": [22, 51, 86], "001460": [22, 51, 86], "remov": [23, 24, 28, 29, 30, 53, 54, 58, 65, 88, 89], "y": [23, 24, 56], "csi": [23, 24, 55, 60, 62], "removeneighbor": [23, 24], "bmp": [23, 24], "int32": [23, 26], "newidx": 23, "csireport": [24, 26], "symbollen": [24, 57], "9360000": 24, "16384": 24, "occupi": [24, 62], "fm": 24, "freq": 24, "insid": [24, 64], "34944": 24, "33696": 24, "1248": 24, "getnumel": [24, 26, 56], "int16": [24, 26], "16395": 24, "estim": [24, 27, 28, 30, 52, 53, 55, 60, 61, 62, 64, 87, 88, 90], "csirssetlist": [24, 64], "16388": 24, "152077454384459e": 24, "004140206755751211": 24, "0012053535933496415": 24, "8658583014719393e": 24, "06177877": 24, "00491705j": 24, "06175917": 24, "00506486j": 24, "06173923": 24, "00521265j": 24, "06171894": 24, "0053604j": 24, "0616983": 24, "00550813j": 24, "06167732": 24, "00565583j": 24, "061656": 24, "00580349j": 24, "06163403": 24, "00595314j": 24, "06161201": 24, "00610074j": 24, "06158965": 24, "00624831j": 24, "06156694": 24, "00639584j": 24, "06154389": 24, "00654333j": 24, "06152049": 24, "00669079j": 24, "06149675": 24, "00683821j": 24, "06072263": 24, "00625106j": 24, "p1idx": 24, "109": 24, "112": 24, "113": 24, "116": 24, "117": 24, "121": 24, "129": 24, "133": 24, "136": 24, "141": 24, "144": 24, "145": [24, 28, 53, 88], "148": 24, "149": [24, 26], "152": 24, "153": 24, "156": 24, "157": [24, 26], "160": [24, 28, 53, 64, 88], "161": 24, "164": [24, 65], "165": 24, "168": 24, "169": 24, "172": [24, 26], "173": 24, "176": 24, "177": [24, 26], "181": [24, 26], "184": 24, "188": 24, "189": [24, 26], "205": 24, "208": 24, "209": [24, 26], "212": [24, 29, 54, 55, 58, 89], "213": 24, "216": [24, 26], "217": 24, "220": [24, 26], "221": 24, "224": 24, "225": 24, "228": 24, "229": 24, "232": 24, "233": 24, "236": 24, "237": 24, "241": 24, "245": 24, "248": 24, "252": [24, 26], "253": 24, "257": 24, "260": 24, "261": 24, "264": [24, 26], "265": 24, "268": 24, "269": 24, "272": 24, "273": 24, "276": 24, "277": 24, "281": [24, 26], "284": 24, "285": 24, "289": 24, "292": [24, 26], "293": 24, "296": 24, "297": 24, "301": 24, "304": 24, "305": 24, "308": [24, 26], "309": 24, "312": 24, "313": 24, "316": [24, 60], "317": 24, "320": [24, 26, 28, 53, 64, 88], "321": 24, "324": [24, 26], "325": 24, "329": 24, "332": 24, "333": 24, "336": [24, 26], "337": [24, 26], "340": 24, "341": 24, "344": 24, "345": 24, "348": 24, "349": 24, "352": [24, 26], "353": 24, "356": 24, "357": 24, "361": 24, "364": [24, 26], "365": 24, "369": 24, "372": 24, "373": 24, "376": 24, "377": 24, "380": 24, "381": 24, "385": [24, 26], "388": 24, "389": 24, "393": 24, "396": [24, 26], "397": 24, "401": 24, "404": 24, "405": 24, "408": 24, "409": 24, "412": 24, "413": 24, "416": 24, "417": 24, "421": 24, "424": [24, 26], "425": 24, "428": 24, "429": 24, "432": [24, 26], "433": 24, "436": 24, "437": 24, "440": [24, 26], "441": 24, "444": 24, "445": [24, 26], "448": 24, "452": 24, "453": 24, "456": 24, "457": 24, "460": 24, "461": 24, "464": 24, "465": 24, "468": 24, "469": 24, "472": 24, "473": 24, "476": 24, "477": 24, "480": [24, 26, 57], "481": 24, "484": 24, "485": 24, "488": 24, "489": 24, "492": 24, "493": 24, "496": 24, "497": 24, "501": 24, "504": [24, 26], "505": 24, "508": 24, "509": 24, "513": 24, "516": 24, "517": 24, "520": 24, "521": 24, "524": 24, "525": 24, "528": [24, 26], "529": 24, "532": 24, "533": 24, "536": 24, "537": 24, "540": [24, 26], "541": 24, "544": 24, "545": 24, "548": 24, "549": 24, "552": 24, "553": 24, "556": 24, "557": 24, "560": [24, 26], "561": 24, "564": 24, "565": 24, "568": 24, "569": 24, "572": 24, "573": 24, "577": 24, "580": 24, "581": 24, "584": 24, "585": 24, "588": 24, "589": 24, "592": 24, "593": 24, "596": 24, "597": 24, "600": [24, 26, 59], "601": 24, "604": [24, 26], "605": 24, "609": 24, "613": 24, "616": [24, 26], "617": 24, "620": 24, "621": 24, "codebooktyp": [24, 26], "type1sp": [24, 26], "codebookmod": [24, 26], "csirsindex": 24, "p0idx": 24, "csirsindexesp0": 24, "hatcsir": 24, "codebook": [24, 25, 26], "getcodebook": [24, 26], "5j": [24, 25, 26], "3536": 24, "3536j": 24, "attributeerror": 24, "traceback": [24, 26], "most": [24, 26, 56, 59, 62, 64], "recent": [24, 26], "gt": [24, 26], "opensourc": 24, "ongithub": 24, "wireless": [24, 55, 58, 62, 64], "newproject": 24, "ongit": 24, "csifeedback": 24, "py": [24, 57, 58, 60, 62, 63, 64, 65], "219": [24, 26], "i1": 24, "i2": 24, "type1spindex": 24, "218": 24, "gettype1spprecod": 24, "222": 24, "type1mp": 24, "415": 24, "vlm": 24, "414": 24, "i11": 24, "i12": 24, "i13": 24, "attribut": 24, "n1": [24, 26], "n2": [24, 26], "kwarg": [24, 56, 57, 58, 59, 60, 62, 64, 65], "179": 24, "subbands": 24, "subbandsizevalu": 24, "lt": 24, "subband": 24, "less": [24, 57, 58, 59, 61, 62], "182": 24, "183": 24, "nonetyp": 24, "cb": [24, 26, 58], "getsinr": [25, 26], "heff": [25, 26], "matmul": [25, 26], "u": [25, 26, 57], "vh": [25, 26], "linalg": [25, 26], "svd": [25, 26], "full_matric": [25, 26], "noisyinv": [25, 26], "expand": [25, 26, 55], "dimens": [25, 26, 56, 60, 62], "witch": [25, 26], "elementwis": [25, 26], "boadcast": [25, 26], "dim": [25, 26], "gamma": [25, 26, 56, 59], "4j": [25, 26], "8j": [25, 26], "9j": [25, 26], "2j": [25, 26], "6j": [25, 26], "3j": [25, 26], "7j": [25, 26], "1234": [25, 26], "99168153": [25, 26], "359": [25, 26], "63323565": [25, 26], "56863075": [25, 26], "35297339": [25, 26], "70391124": [25, 26], "05619982": [25, 26], "904854": [25, 26], "78160181": [25, 26], "57413193": [25, 26], "42505049": [25, 26], "nvar": [25, 26], "1i": [25, 26], "nr5g": 25, "intern": [25, 59, 62, 63, 64, 65], "nrprecodedsinr": 25, "0e": 25, "379916815287058": 25, "596332356494885": 25, "045686307544590": 25, "713529733922738": 25, "017039112368622": 25, "370561998195295": 25, "009048539994034": 25, "267816018069208": 25, "005741319256007": 25, "224250504865427": 25, "getsinr2": 25, "ncb": 25, "sinr": [25, 26], "40883222": 25, "52340496": 25, "2475617": 25, "52864147": 25, "76208101": 25, "56866664": 25, "62906288": 25, "30651113": 25, "57440452": 25, "19946038": 25, "textenumerrormsg": 26, "enumerrormsg": 26, "formatstr": 26, "validaterang": 26, "context": [26, 55, 60], "varnam": 26, "inspect": 26, "getouterfram": 26, "currentfram": 26, "getframeinfo": 26, "code_context": 26, "strip": 26, "find": [26, 29, 54, 59, 65, 89], "split": 26, "fstr": 26, "special": 26, "comb": 26, "cl": 26, "122": 26, "my": 26, "a123": 26, "par": 26, "shahab": 26, "codebooksallow": 26, "110101": 26, "restrict": 26, "010101": 26, "uum": 26, "uul": 26, "outer": 26, "cd": [26, 91], "162": 26, "198": 26, "231": 26, "270": 26, "330": 26, "315": 26, "350": 26, "378": 26, "462": 26, "640": [26, 64], "704": 26, "660": 26, "720": [26, 57, 59], "770": 26, "840": 26, "880": 26, "648": 26, "792": 26, "864": 26, "756": 26, "924": 26, "1008": 26, "1056": 26, "486": 26, "594": 26, "567": 26, "693": 26, "810": 26, "990": 26, "1080": 26, "945": 26, "1050": 26, "1155": 26, "1260": 26, "1320": 26, "1440": 26, "972": 26, "1188": 26, "1296": 26, "1134": 26, "1386": 26, "1512": 26, "1584": 26, "1728": 26, "1120": 26, "1232": 26, "1344": 26, "1280": 26, "1408": 26, "1400": 26, "1540": 26, "1600": 26, "1760": 26, "1920": 26, "1848": 26, "2016": 26, "1350": 26, "1500": 26, "1650": 26, "1800": 26, "1575": 26, "1750": 26, "1925": 26, "2100": 26, "2200": 26, "1980": 26, "2160": 26, "1890": 26, "2310": 26, "2520": 26, "2640": 26, "2880": 26, "vml": 26, "vmlphi": 26, "147": 26, "ambigu": 26, "cbrirestrict": 26, "11110110": 26, "typeerror": 26, "286": 26, "287": 26, "pagemtim": 26, "sb": 26, "vb": 26, "pagesvd": 26, "econ": 26, "vector": [26, 56, 60], "a1": 26, "a2": 26, "squeez": 26, "pagetranspos": 26, "syntaxerror": 26, "syntax": 26, "784": 26, "634": 26, "823": 26, "08694782e": 26, "21976428e": 26, "72022958e": 26, "78794263e": 26, "13746866e": 26, "23793807e": 26, "60318900e": 26, "58782552e": 26, "35535122e": 26, "48782490e": 26, "51614857e": 26, "43485094e": 26, "29383495e": 26, "00836679e": 26, "57021497e": 26, "52118989e": 26, "07846033": 26, "23394205": 26, "38942377": 26, "54490549": 26, "7003872": 26, "77061273": 26, "49524854": 26, "21988435": 26, "05547983": 26, "33084402": 26, "06215885": 26, "22342462": 26, "3846904": 26, "54595617": 26, "70722194": 26, "77209862": 26, "50008143": 26, "22806424": 26, "04395294": 26, "31597013": 26, "05908594": 26, "22143288": 26, "38377981": 26, "54612675": 26, "70847368": 26, "77233985": 26, "50096655": 26, "22959324": 26, "04178007": 26, "31315338": 26, "0577943": 26, "22059482": 26, "38339534": 26, "54619585": 26, "70899637": 26, "77243758": 26, "50133614": 26, "2302347": 26, "04086674": 26, "31196819": 26, "298": 26, "myfun": 26, "argv": 26, "arg": 26, "hamidi": 26, "getcomb": 26, "listi": 26, "meshgrid": 26, "q": 26, "evalu": [27, 52, 55, 59, 87, 90], "scheme": [27, 52, 58, 61, 62, 87], "minms": [27, 52, 87], "maxms": [27, 52, 87], "alreadi": [27, 28, 29, 52, 53, 54, 58, 87, 88, 89], "qam": [27, 29, 52, 54, 87, 89], "mse1": [27, 52, 87], "fest": [27, 52, 87], "fact": [27, 52, 87], "mse2": [27, 52, 87], "758389": [27, 52, 87], "478555": [27, 52, 87], "208018": [27, 52, 87], "42283": [27, 52, 87], "2789": [27, 52, 87], "884330": [27, 52, 87], "588715": [27, 52, 87], "300615": [27, 52, 87], "91421": [27, 52, 87], "11869": [27, 52, 87], "708": [27, 52, 87], "ebnodb": [28, 53, 88], "eb": [28, 53, 88], "490": [28, 29, 30, 53, 54, 88, 89], "getdecod": [28, 29, 30, 53, 54, 58, 88, 89], "datatimeratio": [28, 53, 57, 88], "blockerror": [28, 53, 88], "totalblock": [28, 53, 88], "txblocksiz": [28, 29, 30, 53, 54, 58, 88, 89], "gettxblocks": [28, 29, 30, 53, 54, 58, 62, 88, 89], "txblock": [28, 29, 30, 53, 54, 58, 88, 89], "getllrsfromgrid": [28, 29, 30, 53, 54, 58, 62, 88, 89], "decodedblock": [28, 29, 30, 53, 54, 58, 88, 89], "numit": [28, 29, 53, 54, 58, 88, 89], "decodedtxblockwithcrc": [28, 29, 30, 53, 54, 58, 88, 89], "merg": [28, 29, 53, 54, 58, 88, 89], "decodedtxblock": [28, 29, 30, 53, 54, 58, 88, 89], "2417280": [28, 53, 88], "323481": [28, 53, 88], "18663": [28, 53, 88], "469554": [28, 53, 88], "404225": [28, 53, 88], "280051": [28, 53, 88], "319": [28, 53, 88], "133393": [28, 53, 88], "1518": [28, 53, 88], "loggraph": [28, 53, 88], "ebno2snr": [28, 53, 88], "physic": [29, 54, 55, 58, 60, 89], "share": [29, 54, 60, 89], "demonstr": [29, 54, 89], "refer": [29, 54, 55, 56, 57, 58, 59, 60, 62, 63, 65, 89], "tr": [29, 54, 55, 56, 57, 58, 59, 61, 62, 89], "901": [29, 54, 55, 56, 59, 89], "minimum": [29, 54, 60, 64, 65, 89], "mmse": [29, 54, 60, 89], "cancel": [29, 54, 58, 89], "extract": [29, 54, 58, 60, 61, 62, 64, 89], "likelihood": [29, 30, 54, 58, 60, 61, 62, 89], "bitstream": [29, 54, 58, 61, 63, 89], "newradium": [29, 54, 89], "cover": [29, 54, 57, 89], "mhz": [29, 54, 89], "18360000": [29, 54, 89], "qam16": [29, 54, 89], "setdmrd": [29, 54, 89], "although": [29, 54, 59, 89], "wide": [29, 54, 89], "band": [29, 54, 57, 59, 89], "narrow": [29, 54, 89], "provid": [29, 54, 55, 56, 58, 59, 60, 62, 63, 64, 65, 89], "desir": [29, 54, 56, 58, 62, 89], "transmiss": [29, 54, 58, 59, 60, 62, 64, 65, 89], "capac": [29, 54, 89], "what": [29, 54, 60, 62, 89], "30216": [29, 54, 89], "63648": [29, 54, 89], "17136": [29, 54, 89], "1224": [29, 54, 89], "15912": [29, 54, 89], "side": [29, 54, 56, 62, 64, 65, 89], "somehow": [29, 54, 56, 89], "nlo": [29, 54, 89], "small": [29, 54, 62, 63, 89], "mimo": [29, 54, 59, 62, 89], "transmitt": [29, 54, 59, 60, 62, 64, 65, 89], "51x12": [29, 54, 89], "respect": [29, 54, 56, 89], "simpli": [29, 54, 89], "f0": [29, 54, 60, 65, 89], "pring": [29, 54, 89], "usual": [29, 54, 56, 58, 59, 60, 62, 65, 89], "15447": [29, 54, 89], "awgn": [29, 54, 60, 62, 63, 65, 89], "involv": [29, 54, 55, 59, 64, 89], "point": [29, 54, 56, 57, 61, 65, 89], "correl": [29, 54, 59, 60, 65, 89], "shortcut": [29, 54, 60, 89], "go": [29, 54, 55, 89], "happen": [29, 54, 89], "sometim": [29, 54, 89], "conveni": [29, 54, 89], "avid": [29, 54, 89], "That": [29, 54, 64, 89], "close": [29, 54, 89], "procedur": [29, 54, 58, 89], "readi": [29, 54, 58, 59, 62, 89], "separ": [29, 54, 56, 60, 62, 89], "23232": [29, 54, 89], "7744": [29, 54, 89], "wich": [29, 54, 89], "txblockcrcmatch": [29, 30, 54, 58, 89], "30240": [29, 54, 89], "randomli": [29, 54, 59, 89], "ldpc": [30, 55, 62], "pre": [30, 62], "recoveri": [30, 58], "stream": [30, 62], "python": [55, 63, 91], "librari": [55, 56], "design": [55, 58], "simplifi": [55, 59], "latest": 55, "Its": 55, "architectur": 55, "hide": 55, "stage": 55, "swiftli": 55, "develop": 55, "research": 55, "often": 55, "focus": 55, "particular": 55, "entir": 55, "consum": 55, "cumbersom": 55, "come": [55, 64], "while": [55, 58, 64], "custom": [55, 58, 59], "achiev": 55, "capabl": [55, 90], "high": [55, 58, 59, 62, 64], "hardwar": 55, "setup": 55, "costli": 55, "basic": [55, 58], "good": 55, "comprehens": 55, "playground": 55, "experi": 55, "numer": 55, "form": [55, 56, 58, 59, 60, 62], "jupyt": [55, 90], "explain": [55, 58, 59, 60, 64, 90], "api": [55, 56, 58, 59, 64, 90], "detail": [55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 90], "offer": 55, "versatil": 55, "suit": 55, "streamlin": 55, "summari": 55, "ad": [55, 60, 64, 65], "effici": [55, 58, 59], "specif": [55, 56, 59, 60, 63], "precis": [55, 58], "cyclic": [55, 57, 65], "prefix": [55, 57, 65], "pt": 55, "align": 55, "valuabl": 55, "insight": 55, "de": [55, 58, 60], "descrambl": [55, 62], "analysi": 55, "gpp": 56, "easili": 56, "charactrist": 56, "antennabas": 56, "deriv": [56, 58, 59, 62, 63, 64], "getsteeringvector": 56, "steer": 56, "respons": [56, 59, 60], "given": [56, 57, 58, 59, 60, 61, 62, 64, 65], "zenith": [56, 59], "except": [56, 64], "thrown": 56, "combin": [56, 58], "numel": 56, "numtheta": 56, "numphi": 56, "getfieldpattern": 56, "pattern": [56, 62], "around": 56, "scaler": 56, "getrotationmatrix": 56, "rotat": 56, "coordin": [56, 59, 60], "local": [56, 64], "global": [56, 59, 60, 63, 65], "system": [56, 62], "equat": [56, 60], "alpha": [56, 59], "bear": [56, 59], "downtilt": 56, "slant": [56, 59], "radian": [56, 59], "getelementsfield": 56, "handl": [56, 59, 61], "convers": [56, 60, 65], "cluster": [56, 59], "numantenna": 56, "locfactor": 56, "getpolarizedfield": 56, "matric": 56, "desier": 56, "beamform": 56, "arrayfieldv": 56, "arrayfieldh": 56, "f_v": 56, "f_h": 56, "getpowerpattern": 56, "frac": [56, 57, 58, 60, 65], "p_": 56, "avg": 56, "integr": 56, "web": 56, "page": [56, 90], "pi": 56, "int_0": 56, "sin": 56, "d_": 56, "dbi": 56, "isotrop": [56, 59], "multi": [56, 59], "purpos": [56, 59], "boolean": [56, 57, 58, 59, 60, 61, 62, 64, 65], "being": [56, 58, 59, 62, 64, 65], "view": 56, "control": [56, 58, 60, 62, 63, 64], "cut": [56, 60], "common": [56, 57, 62, 64], "dict": [56, 57, 58, 59, 60, 62, 64, 65], "option": [56, 57, 58, 59, 62, 64], "enough": 56, "z": 56, "freqrang": 56, "oper": [56, 62, 63], "polangl": 56, "pure": 56, "polmodel": 56, "tr38": 56, "theta_": 56, "3db": 56, "phi_": 56, "verticalsidelobeattenu": 56, "lobe": 56, "sla_v": 56, "a_": 56, "mainmaxgain": 56, "main": [56, 62], "indent": [56, 57, 58, 59, 60, 61, 62, 64, 65], "getstr": [56, 57, 58, 59, 60, 61, 62, 64, 65], "charact": [56, 57, 58, 59, 60, 61, 62, 64, 65], "otherwis": [56, 57, 58, 59, 60, 61, 62, 64, 65], "noth": [56, 57, 58, 59, 60, 61, 62, 64, 65], "posinarrai": 56, "clone": 56, "copi": 56, "represent": 56, "rectangular": 56, "organ": 56, "plain": [56, 60], "individu": [56, 64], "along": [56, 59, 60], "distanc": 56, "wave": [56, 62, 64], "By": [56, 58, 59, 60, 62, 64], "half": 56, "awai": 56, "singli": 56, "dualli": 56, "either": [56, 57, 58, 62, 64], "center": [56, 60], "parent": 56, "getel": 56, "elementrc": 56, "getelementposit": 56, "ref": 56, "repres": [56, 58, 60, 62, 64, 65], "getallposit": 56, "maxsiz": 56, "standalon": 56, "larg": 56, "height": 56, "tick": 56, "allel": 56, "mypanel": 56, "yield": 56, "spece": 56, "across": [56, 62], "within": [56, 62], "panelrc": 56, "elementinpanelrc": 56, "allpanel": 56, "myarrai": 56, "bandwidthpart": [57, 59, 60, 61, 62, 64, 65], "associ": [57, 60, 62, 64], "subset": 57, "contigu": 57, "numerologi": 57, "crb": 57, "cptype": [57, 62], "extend": 57, "calcualt": 57, "At": [57, 65], "unus": 57, "guard": 57, "ge": 57, "symbolspersubfram": [57, 60], "slotnoinfram": [57, 62], "slotnoinsubfram": 57, "identifi": [57, 62, 64], "frameno": [57, 62], "increment": 57, "amount": [57, 59, 60, 65], "spent": 57, "user": [57, 60, 62], "spend": 57, "doesn": 57, "carri": [57, 60], "useredesc": [57, 60, 62], "describ": [57, 60, 62], "correctli": [57, 60, 62], "getcptim": 57, "symidxinsubfram": 57, "getcplen": 57, "getsymtim": 57, "getslottim": 57, "slotindex": 57, "getslotlen": 57, "getslotsdur": 57, "getslotssampl": 57, "getnumslotsforsampl": 57, "getnumsymbolsforsampl": 57, "uplink": [57, 58, 59, 60, 62, 64], "automat": [57, 58, 60, 62, 64], "curbwpindex": 57, "framenorel": 57, "remaind": 57, "divid": 57, "boundari": [57, 59, 62], "chancodebas": 58, "encapsul": [58, 59, 60, 62, 64, 65], "hierarchi": 58, "ldpcbase": 58, "low": [58, 59, 60, 62, 64], "polarbas": 58, "classmethod": 58, "getcrc": 58, "poli": 58, "polynomi": 58, "1d": [58, 62], "1100001": 58, "111000100001": 58, "10001000000100001": 58, "1100001100100110011111011": 58, "24b": 58, "1100000000000000001100011": 58, "1101100101011000100010111": 58, "correct": [58, 62], "new": [58, 59, 60, 63, 64, 65], "choic": [58, 63], "determin": [58, 59, 62, 64, 65], "8448": 58, "3840": 58, "h_": 58, "bg": 58, "bpsk": [58, 61, 62], "64qam": [58, 61, 62], "256qam": [58, 61, 62], "1024qam": [58, 61, 62], "redund": 58, "hybrid": 58, "request": 58, "harq": 58, "buffer": 58, "lbrm": 58, "maxcodeblocks": 58, "k_": 58, "numcodeblock": 58, "lift": 58, "z_c": 58, "i_": 58, "4384765625": 58, "inherit": [58, 59], "break": 58, "smaller": [58, 60, 63], "manag": 58, "fill": 58, "whose": 58, "2z_c": 58, "kept": 58, "concatcb": 58, "lceil": 58, "rceil": 58, "addcrc": 58, "easier": 58, "exist": 58, "opposit": [58, 62], "ldcp": 58, "revers": 58, "typic": [58, 59, 64], "properli": 58, "rxblock": 58, "exact": 58, "Not": 58, "rxcodeblock": 58, "onlyinfobit": 58, "outputbelief": 58, "belief": 58, "inspir": 58, "mostli": [58, 59, 64], "video": 58, "written": 58, "scratch": [58, 59], "accur": [58, 59, 61, 62], "slower": [58, 59, 61, 62], "final": [58, 60], "longer": [58, 60, 65], "rxdecodedword": 58, "assembl": 58, "verifi": 58, "crccheckresult": 58, "uci": 58, "broadcast": 58, "pbch": 58, "flag": [58, 59, 64], "whether": 58, "bil": 58, "10241": 58, "n_": 58, "il": 58, "pc": 58, "mai": [58, 59, 62, 63, 64, 65], "reliabl": 58, "wm": 58, "seg": 58, "ratematchedblocklen": 58, "e_r": 58, "msgbit": 58, "frozenbit": 58, "frozen": 58, "pcbit": 58, "setios": 58, "chang": [58, 62, 63], "reus": 58, "anyth": 58, "success": 58, "extrins": 58, "hyperbol": 58, "tangent": 58, "rxllrblock": 58, "recurs": 58, "access": [58, 59, 60, 62, 64], "technologi": [58, 64], "erik": [58, 64], "dahlman": [58, 64], "stefan": [58, 64], "parkval": [58, 64], "johan": [58, 64], "skold": [58, 64], "tal": 58, "vardi": 58, "ieee": 58, "transact": 58, "theori": 58, "vol": 58, "2213": 58, "2226": 58, "2015": 58, "tap": 59, "tdlchannel": 59, "channelbas": [59, 65], "subclass": 59, "higher": 59, "level": 59, "almost": 59, "interact": 59, "connect": 59, "nanosecond": 59, "veryshort": 59, "short": [59, 60], "nomin": 59, "verylong": 59, "static": 59, "kfactor": 59, "diagnost": 59, "stop": 59, "fix": 59, "mention": [59, 64], "coher": [59, 64], "curtim": 59, "increas": 59, "reset": 59, "sequenc": [59, 62, 64, 65], "applytogrid": 59, "inputsign": [59, 65], "keepnt": 59, "closer": 59, "impuls": [59, 60], "cir": [59, 60], "consid": [59, 60, 62], "millisecond": 59, "situat": 59, "getpathgain": 59, "getpathfilt": 59, "coeffici": 59, "profil": 59, "movement": 59, "station": 59, "stationari": 59, "tilt": 59, "rxorient": 59, "xpolpow": 59, "10db": 59, "departur": 59, "arriv": 59, "overrid": 59, "confus": [59, 60], "kfactorlo": 59, "lo": 59, "rememb": 59, "thei": [59, 60, 62, 64, 65], "accord": [59, 62], "annex": 59, "There": [59, 64], "predefin": 59, "unlik": 59, "a30": 59, "b100": 59, "c60": 59, "c300": 59, "d30": 59, "nano": 59, "fr1": 59, "fr2": 59, "txantennacount": 59, "rxantennacount": 59, "mimocorrel": 59, "medium": 59, "mediuma": 59, "mediumb": 59, "copolar": 59, "crosspolar": 59, "correlationmatrix": 59, "sostyp": 59, "sinusoid": 59, "variat": 59, "techniqu": 59, "gmeds1": 59, "introduc": 59, "paper": 59, "uncorrel": 59, "rayleigh": 59, "fade": 59, "xiao": 59, "novel": 59, "rician": 59, "stateless": 59, "smooth": 59, "transit": 59, "sosnumsin": 59, "keep": [60, 64], "easi": [60, 62, 63, 64], "white": [60, 62, 63, 65], "gaussian": [60, 62, 63, 65], "dimension": [60, 61, 62, 65], "avoid": [60, 63], "term": 60, "unknown": 60, "pdcch": [60, 62, 64], "pusch": [60, 62, 64], "pucch": [60, 62, 64], "rx_data": 60, "numsubcarri": 60, "numsymbol": 60, "present": [60, 62], "transfer": [60, 65], "addition": [60, 64], "few": 60, "myre": 60, "mygrid": [60, 62], "dmrsvalu": [60, 62], "write": 60, "707": 60, "707j": 60, "948": 60, "948j": 60, "316j": 60, "retypeat": 60, "retypestr": [60, 62], "retriev": [60, 62], "dmrsidx": [60, 62], "reservedrbset": [60, 62], "reservedremap": [60, 62], "differnt": 60, "csir": [60, 62, 64], "dmrsvalues1": 60, "dmrsvalues2": 60, "grouprb": [60, 62], "groupf": [60, 62], "entri": [60, 62], "window": [60, 65], "baseband": [60, 65], "up": [60, 64], "applywindow": [60, 65], "hf": 60, "tri": 60, "similar": [60, 62, 64, 65], "rsinfo": 60, "meancdm": 60, "taken": 60, "y_p": 60, "h_p": 60, "odot": 60, "n_p": 60, "qquad": 60, "wise": 60, "divis": 60, "cosin": 60, "cartesian": 60, "cost": 60, "extrapol": 60, "interp1d": 60, "kind": 60, "quadrat": 60, "thin_plate_splin": 60, "rbf": 60, "rbfinterpol": 60, "multiquadr": 60, "estnoisevar": 60, "multipli": [60, 65], "deviat": [60, 63, 65], "formula": [60, 65], "sigma": [60, 65], "2_": [60, 65], "n_r": [60, 65], "rangen": [60, 63, 65], "color": 60, "drawn": 60, "vice": 61, "versa": 61, "well": 61, "constel": 61, "lookup": 61, "usemax": [61, 62], "logarithm": [61, 62], "deliv": 62, "gnb": 62, "qualiti": 62, "fair": 62, "consider": 62, "enhanc": 62, "robust": 62, "among": 62, "assist": 62, "ensur": 62, "recept": 62, "track": [62, 64], "suppress": [62, 64], "particularli": [62, 64], "millimet": [62, 64], "regardless": 62, "fraction": 62, "veri": 62, "latenc": 62, "portno": 62, "symno": 62, "reno": 62, "rule": 62, "flexibl": [62, 64], "sliv": 62, "consecut": [62, 64], "symstart": 62, "symlen": 62, "bundl": 62, "radio": 62, "temporari": 62, "golden": 62, "neither": 62, "numcw": 62, "slotmap": 62, "constructor": 62, "newli": 62, "mypdsch": 62, "getnumresfromindex": 62, "asid": 62, "dedic": 62, "virtual": 62, "vrb": 62, "rare": 62, "descript": 62, "sens": 62, "deinterleav": 62, "demap": 62, "produc": 62, "datasymbols1": 62, "datareindex": 62, "datasymbols2": 62, "xoverhead": 62, "scalefactor": 62, "overhead": 62, "oh": 62, "behavior": [63, 64], "permut": 63, "congruenti": 63, "pcg64": 63, "38382838": 63, "35261486j": 63, "10004801": 63, "5325556j": 63, "20456608": 63, "58387099j": 63, "85796067": 63, "15164351j": 63, "getgener": 63, "default_rng": 63, "mygen": 63, "mt19937": 63, "mersenn": 63, "twister": 63, "unpredict": 63, "pcg64dxsm": 63, "dxsm": 63, "philox": 63, "rng": 63, "sfc64": 63, "fast": [63, 65], "chaotic": 63, "prng": 63, "randomst": 63, "legaci": 63, "69646919": 63, "28613933": 63, "22685145": 63, "55131477": 63, "71946897": 63, "rand": 63, "6965": 63, "2861": 63, "2269": 63, "5513": 63, "7195": 63, "strongli": 63, "recommend": 63, "bitgener": 63, "codebas": 63, "affect": [63, 65], "approach": [63, 65], "quick": 63, "constant": 63, "myrandint": 63, "prefer": 63, "unchang": 63, "overal": [64, 65], "simplic": 64, "zpcsir": 64, "zpcsirsset": 64, "csirslist": 64, "resourcetyp": 64, "semipersist": 64, "nzpcsirs1": 64, "nzpcsirs2": 64, "nzpcsirsset": 64, "quickli": 64, "nz": 64, "t_": 64, "rho": 64, "bitmap": 64, "beta_": 64, "pseudo": 64, "l_0": 64, "l_1": 64, "bar": 64, "k_0": 64, "k_1": 64, "k_2": 64, "k_3": 64, "myset": 64, "rsid": 64, "resourcesetid": 64, "aperiod": 64, "trigger": 64, "semi": 64, "persist": 64, "occur": 64, "why": 64, "until": 64, "deactiv": 64, "addcsiresourceset": 64, "intend": 64, "oscil": 64, "soon": 64, "mandatori": 64, "technic": 64, "65535": 64, "scramblingid0": 64, "scramblingid1": 64, "ptrsenabl": 64, "due": 64, "mcsi": 64, "mcs1": 64, "mcs2": 64, "mcs3": 64, "imc": 64, "nrbi": 64, "nrb0": 64, "nrb1": 64, "mc": 64, "extent": 65, "fourier": 65, "numpad": 65, "entireti": 65, "timingoffset": 65, "shorter": 65, "cplen": 65, "cpoffsetratio": 65, "mid": 65, "open": 90, "plai": 90, "bler": 90, "train": 90, "python3": 91, "venv": 91, "ve": 91, "sourc": 91, "bin": 91, "pip": 91, "upgrad": 91, "setuptool": 91}, "objects": {"neoradium": [[56, 0, 0, "-", "antenna"], [57, 0, 0, "-", "carrier"], [59, 0, 0, "-", "cdl"], [58, 0, 0, "-", "chancodebase"], [59, 0, 0, "-", "channel"], [64, 0, 0, "-", "csirs"], [64, 0, 0, "-", "dmrs"], [60, 0, 0, "-", "grid"], [58, 0, 0, "-", "ldpc"], [61, 0, 0, "-", "modulation"], [62, 0, 0, "-", "pdsch"], [58, 0, 0, "-", "polar"], [63, 0, 0, "-", "random"], [59, 0, 0, "-", "tdl"], [65, 0, 0, "-", "waveform"]], "neoradium.antenna": [[56, 1, 1, "", "AntennaArray"], [56, 1, 1, "", "AntennaBase"], [56, 1, 1, "", "AntennaElement"], [56, 1, 1, "", "AntennaPanel"]], "neoradium.antenna.AntennaArray": [[56, 2, 1, "", "allElements"], [56, 2, 1, "", "allPanels"], [56, 2, 1, "", "getAllPositions"], [56, 2, 1, "", "getElement"], [56, 2, 1, "", "getElementPosition"], [56, 2, 1, "", "getNumElements"], [56, 2, 1, "", "print"], [56, 2, 1, "", "showElements"]], "neoradium.antenna.AntennaBase": [[56, 2, 1, "", "drawRadiation"], [56, 2, 1, "", "getDirectivity"], [56, 2, 1, "", "getElementsFields"], [56, 2, 1, "", "getField"], [56, 2, 1, "", "getFieldPattern"], [56, 2, 1, "", "getPolarizedFields"], [56, 2, 1, "", "getPowerPattern"], [56, 2, 1, "", "getPowerPatternDb"], [56, 2, 1, "", "getRotationMatrix"], [56, 2, 1, "", "getSteeringVector"]], "neoradium.antenna.AntennaElement": [[56, 2, 1, "", "clone"], [56, 2, 1, "", "getDirectivity"], [56, 2, 1, "", "getField"], [56, 2, 1, "", "getPolarizedFields"], [56, 2, 1, "", "getPowerPattern"], [56, 2, 1, "", "getPowerPatternDb"], [56, 3, 1, "", "posInArray"], [56, 2, 1, "", "print"]], "neoradium.antenna.AntennaPanel": [[56, 2, 1, "", "allElements"], [56, 2, 1, "", "clone"], [56, 2, 1, "", "getAllPositions"], [56, 2, 1, "", "getElement"], [56, 2, 1, "", "getElementPosition"], [56, 2, 1, "", "getNumElements"], [56, 2, 1, "", "print"], [56, 2, 1, "", "showElements"]], "neoradium.carrier": [[57, 1, 1, "", "BandwidthPart"], [57, 1, 1, "", "Carrier"]], "neoradium.carrier.BandwidthPart": [[57, 2, 1, "", "createGrid"], [57, 2, 1, "", "getCpLen"], [57, 2, 1, "", "getCpTime"], [57, 2, 1, "", "getNumSlotsForSamples"], [57, 2, 1, "", "getNumSymbolsForSamples"], [57, 2, 1, "", "getSlotLen"], [57, 2, 1, "", "getSlotTime"], [57, 2, 1, "", "getSlotsDuration"], [57, 2, 1, "", "getSlotsSamples"], [57, 2, 1, "", "getSymTime"], [57, 2, 1, "", "print"]], "neoradium.carrier.Carrier": [[57, 2, 1, "", "createGrid"], [57, 2, 1, "", "goNext"], [57, 2, 1, "", "print"]], "neoradium.cdl": [[59, 1, 1, "", "CdlChannel"]], "neoradium.cdl.CdlChannel": [[59, 2, 1, "", "print"], [59, 2, 1, "", "restart"]], "neoradium.chancodebase": [[58, 1, 1, "", "ChanCodeBase"]], "neoradium.chancodebase.ChanCodeBase": [[58, 2, 1, "", "appendCrc"], [58, 2, 1, "", "checkCrc"], [58, 2, 1, "", "getCrc"]], "neoradium.channel": [[59, 1, 1, "", "ChannelBase"]], "neoradium.channel.ChannelBase": [[59, 2, 1, "", "applyToGrid"], [59, 2, 1, "", "applyToSignal"], [59, 2, 1, "", "getChannelMatrix"], [59, 2, 1, "", "getMaxDelay"], [59, 2, 1, "", "getPathFilters"], [59, 2, 1, "", "getPathGains"], [59, 2, 1, "", "getTimingOffset"], [59, 2, 1, "", "goNext"], [59, 2, 1, "", "print"], [59, 2, 1, "", "restart"]], "neoradium.csirs": [[64, 1, 1, "", "CsiRs"], [64, 1, 1, "", "CsiRsConfig"], [64, 1, 1, "", "CsiRsSet"]], "neoradium.csirs.CsiRs": [[64, 2, 1, "", "print"]], "neoradium.csirs.CsiRsConfig": [[64, 2, 1, "", "addCsiResourceSets"], [64, 2, 1, "", "addCsiRs"], [64, 2, 1, "", "populateGrid"], [64, 2, 1, "", "print"]], "neoradium.csirs.CsiRsSet": [[64, 2, 1, "", "addCsiRs"], [64, 2, 1, "", "print"]], "neoradium.dmrs": [[64, 1, 1, "", "DMRS"], [64, 1, 1, "", "PTRS"]], "neoradium.dmrs.DMRS": [[64, 2, 1, "", "populateGrid"], [64, 2, 1, "", "print"], [64, 2, 1, "", "setPTRS"]], "neoradium.dmrs.PTRS": [[64, 2, 1, "", "populateGrid"], [64, 2, 1, "", "print"]], "neoradium.grid": [[60, 1, 1, "", "Grid"]], "neoradium.grid.Grid": [[60, 2, 1, "", "addNoise"], [60, 2, 1, "", "applyChannel"], [60, 2, 1, "", "drawMap"], [60, 2, 1, "", "equalize"], [60, 2, 1, "", "estimateChannelLS"], [60, 2, 1, "", "estimateTimingOffset"], [60, 2, 1, "", "getReIndexes"], [60, 2, 1, "", "getReValues"], [60, 2, 1, "", "getStats"], [60, 2, 1, "", "ofdmModulate"], [60, 2, 1, "", "precode"], [60, 2, 1, "", "print"], [60, 2, 1, "", "reTypeAt"]], "neoradium.ldpc": [[58, 1, 1, "", "LdpcBase"], [58, 1, 1, "", "LdpcDecoder"], [58, 1, 1, "", "LdpcEncoder"]], "neoradium.ldpc.LdpcBase": [[58, 2, 1, "", "isValidCodeword"]], "neoradium.ldpc.LdpcDecoder": [[58, 2, 1, "", "checkCrcAndMerge"], [58, 2, 1, "", "decode"], [58, 2, 1, "", "print"], [58, 2, 1, "", "recoverRate"]], "neoradium.ldpc.LdpcEncoder": [[58, 2, 1, "", "doSegmentation"], [58, 2, 1, "", "encode"], [58, 2, 1, "", "getDecoder"], [58, 2, 1, "", "getRateMatchedCodeWords"], [58, 2, 1, "", "print"], [58, 2, 1, "", "rateMatch"], [58, 2, 1, "", "setFillerBits"]], "neoradium.modulation": [[61, 1, 1, "", "Modem"]], "neoradium.modulation.Modem": [[61, 2, 1, "", "demodulate"], [61, 2, 1, "", "getLLRsFromSymbols"], [61, 2, 1, "", "modulate"], [61, 2, 1, "", "print"]], "neoradium.pdsch": [[62, 1, 1, "", "PDSCH"]], "neoradium.pdsch.PDSCH": [[62, 2, 1, "", "getBitSizes"], [62, 2, 1, "", "getDataSymbols"], [62, 2, 1, "", "getGrid"], [62, 2, 1, "", "getHardBitsFromGrid"], [62, 2, 1, "", "getLLRsFromGrid"], [62, 2, 1, "", "getNumREsFromIndexes"], [62, 2, 1, "", "getPrecodingMatrix"], [62, 2, 1, "", "getReIndexes"], [62, 2, 1, "", "getTxBlockSize"], [62, 2, 1, "", "populateGrid"], [62, 2, 1, "", "print"], [62, 2, 1, "", "setDMRS"], [62, 2, 1, "", "setPTRS"]], "neoradium.polar": [[58, 1, 1, "", "PolarBase"], [58, 1, 1, "", "PolarDecoder"], [58, 1, 1, "", "PolarEncoder"]], "neoradium.polar.PolarBase": [[58, 2, 1, "", "setIoSizes"]], "neoradium.polar.PolarDecoder": [[58, 2, 1, "", "decode"], [58, 2, 1, "", "print"], [58, 2, 1, "", "recoverRate"]], "neoradium.polar.PolarEncoder": [[58, 2, 1, "", "doSegmentation"], [58, 2, 1, "", "encode"], [58, 2, 1, "", "print"], [58, 2, 1, "", "rateMatch"]], "neoradium.random": [[63, 1, 1, "", "RanGen"]], "neoradium.random.RanGen": [[63, 2, 1, "", "getGenerator"], [63, 2, 1, "", "setSeed"]], "neoradium.tdl": [[59, 1, 1, "", "TdlChannel"]], "neoradium.tdl.TdlChannel": [[59, 2, 1, "", "print"]], "neoradium.waveform": [[65, 1, 1, "", "Waveform"]], "neoradium.waveform.Waveform": [[65, 2, 1, "", "addNoise"], [65, 2, 1, "", "applyChannel"], [65, 2, 1, "", "applyWindowing"], [65, 2, 1, "", "ofdmDemodulate"], [65, 2, 1, "", "pad"], [65, 2, 1, "", "print"], [65, 2, 1, "", "sync"]]}, "objtypes": {"0": "py:module", "1": "py:class", "2": "py:method", "3": "py:property"}, "objnames": {"0": ["py", "module", "Python module"], "1": ["py", "class", "Python class"], "2": ["py", "method", "Python method"], "3": ["py", "property", "Python property"]}, "titleterms": {"antenna": [0, 1, 2, 7, 8, 9, 31, 32, 33, 38, 39, 40, 56, 66, 67, 68, 73, 74, 75, 90], "arrai": [0, 7, 31, 38, 66, 73], "element": [1, 8, 32, 39, 67, 74], "panel": [2, 9, 33, 40, 68, 75], "channel": [3, 5, 6, 10, 11, 18, 19, 20, 21, 22, 29, 34, 36, 37, 41, 42, 49, 50, 51, 54, 58, 59, 62, 69, 71, 72, 76, 77, 84, 85, 86, 89, 90], "state": [3, 34, 69, 90], "inform": [3, 34, 69, 90], "refer": [3, 34, 64, 69, 90], "signal": [3, 34, 64, 69, 90], "csi": [3, 4, 11, 34, 35, 42, 64, 69, 70, 77, 90], "r": [3, 4, 11, 34, 35, 42, 64, 69, 70, 77, 90], "configur": [3, 4, 11, 13, 16, 17, 29, 34, 35, 42, 44, 47, 48, 54, 69, 70, 77, 79, 82, 83, 89], "time": [4, 6, 35, 37, 70, 72], "matrix": [5, 11, 36, 42, 71, 77], "compar": [7, 8, 9, 10, 11, 12, 13, 14, 29, 38, 39, 40, 41, 42, 43, 44, 45, 54, 73, 74, 75, 76, 77, 78, 79, 80, 89, 90], "calcul": [7, 8, 9, 27, 28, 38, 39, 40, 52, 53, 73, 74, 75, 87, 88], "matlab": [7, 8, 9, 10, 11, 12, 13, 14, 25, 38, 39, 40, 41, 42, 43, 44, 45, 73, 74, 75, 76, 77, 78, 79, 80, 90], "cdl": [10, 11, 41, 42, 59, 76, 77, 90], "result": [10, 11, 12, 13, 14, 41, 42, 43, 44, 45, 76, 77, 78, 79, 80], "model": [10, 11, 21, 22, 29, 41, 42, 51, 54, 59, 76, 77, 86, 89, 90], "appli": [10, 11, 29, 41, 42, 54, 76, 77, 89], "random": [10, 13, 41, 44, 63, 76, 79], "waveform": [10, 11, 13, 29, 41, 42, 44, 54, 65, 76, 77, 79, 89], "carrier": [11, 13, 29, 42, 44, 54, 57, 77, 79, 89], "creat": [11, 13, 21, 22, 42, 44, 51, 77, 79, 86, 91], "resourc": [11, 13, 29, 42, 44, 54, 60, 77, 79, 89], "grid": [11, 13, 29, 42, 44, 54, 60, 77, 79, 89], "popul": [11, 13, 42, 44, 77, 79], "valu": [11, 42, 77], "ofdm": [11, 13, 29, 42, 44, 54, 77, 79, 89], "modul": [11, 13, 29, 42, 44, 54, 61, 77, 79, 89], "ad": [11, 29, 42, 54, 77, 89], "awgn": [11, 42, 77], "synchron": [11, 29, 42, 54, 77, 89], "demodul": [11, 29, 42, 54, 77, 89], "estim": [11, 18, 19, 20, 21, 22, 29, 42, 49, 50, 51, 54, 77, 84, 85, 86, 89], "ldpc": [12, 28, 29, 43, 53, 54, 58, 78, 88, 89, 90], "pdsch": [13, 27, 28, 29, 44, 52, 53, 54, 79, 87, 88, 89, 90], "gener": [13, 18, 44, 49, 63, 79, 84], "dmr": [13, 16, 29, 44, 47, 54, 64, 79, 82, 89, 90], "data": [13, 44, 79], "symbol": [13, 44, 79], "bit": [13, 27, 44, 52, 79, 87], "block": [13, 29, 44, 54, 79, 89], "statist": [13, 44, 79], "draw": [13, 44, 79], "alloc": [13, 44, 79], "map": [13, 29, 44, 54, 79, 89], "mimo": [13, 44, 79], "precod": [13, 29, 44, 54, 79, 89], "polar": [14, 45, 58, 80, 90], "code": [14, 29, 45, 54, 58, 80, 89, 90], "us": [15, 46, 81], "othercdmgroup": [15, 46, 81], "paramet": [15, 46, 81], "ptr": [17, 48, 64, 83, 90], "dataset": [18, 21, 22, 49, 51, 84, 86], "train": [18, 19, 20, 21, 22, 49, 50, 51, 84, 85, 86], "evalu": [19, 20, 21, 22, 50, 51, 85, 86], "load": [19, 20, 21, 22, 50, 51, 85, 86], "mode": [19, 20, 50, 85], "mlchanest": [19, 20, 50, 85], "function": [19, 20, 50, 85], "pipelin": [19, 20, 50, 85], "resnet": [21, 22, 51, 86], "A": [22, 51, 86, 90], "error": [27, 52, 87], "rate": [27, 29, 52, 54, 87, 89], "commun": [27, 28, 29, 52, 53, 54, 87, 88, 89], "ber": [28, 53, 88], "bler": [28, 53, 88], "end": [29, 54, 89], "creation": [29, 54, 89], "simul": [29, 54, 89], "transmit": [29, 54, 89], "nois": [29, 54, 89], "frequenc": [29, 54, 89], "domain": [29, 54, 89], "perfect": [29, 54, 89], "practic": [29, 54, 89], "equal": [29, 54, 89], "de": [29, 54, 89], "descrambl": [29, 54, 89], "recoveri": [29, 54, 89], "decod": [29, 54, 89], "crc": [29, 54, 89], "check": [29, 54, 89], "segment": [29, 54, 89], "transport": [29, 54, 89], "origin": [29, 54, 89], "what": 55, "i": 55, "neoradium": [55, 91], "kei": 55, "featur": 55, "indic": 55, "plot": 56, "type": 56, "bandwidth": 57, "part": 57, "tdl": 59, "physic": [62, 90], "downlink": [62, 90], "share": [62, 90], "number": 63, "The": 63, "object": 63, "support": 63, "playground": 90, "deep": 90, "learn": 90, "case": 90, "studi": 90, "5g": 90, "toolbox": 90, "instal": 91, "virtual": 91, "environ": 91}, "envversion": {"sphinx.domains.c": 2, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 8, "sphinx.domains.index": 1, "sphinx.domains.javascript": 2, "sphinx.domains.math": 2, "sphinx.domains.python": 3, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "nbsphinx": 4, "sphinx": 57}, "alltitles": {"Antenna Array": [[0, "Antenna-Array"], [31, "Antenna-Array"], [66, "Antenna-Array"]], "Antenna Element": [[1, "Antenna-Element"], [32, "Antenna-Element"], [67, "Antenna-Element"]], "Antenna Panel": [[2, "Antenna-Panel"], [33, "Antenna-Panel"], [68, "Antenna-Panel"]], "Channel State Information Reference Signals (CSI-RS) Configuration": [[3, "Channel-State-Information-Reference-Signals-(CSI-RS)-Configuration"], [34, "Channel-State-Information-Reference-Signals-(CSI-RS)-Configuration"], [69, "Channel-State-Information-Reference-Signals-(CSI-RS)-Configuration"]], "CSI-RS timing configurations": [[4, "CSI-RS-timing-configurations"], [35, "CSI-RS-timing-configurations"], [70, "CSI-RS-timing-configurations"]], "Channel Matrix": [[5, "Channel-Matrix"], [36, "Channel-Matrix"], [71, "Channel-Matrix"]], "Channel timing": [[6, "Channel-timing"], [37, "Channel-timing"], [72, "Channel-timing"]], "Comparing Antenna Array Calculations with Matlab": [[7, "Comparing-Antenna-Array-Calculations-with-Matlab"], [38, "Comparing-Antenna-Array-Calculations-with-Matlab"], [73, "Comparing-Antenna-Array-Calculations-with-Matlab"]], "Comparing Antenna Element Calculations with Matlab": [[8, "Comparing-Antenna-Element-Calculations-with-Matlab"], [39, "Comparing-Antenna-Element-Calculations-with-Matlab"], [74, "Comparing-Antenna-Element-Calculations-with-Matlab"]], "Comparing Antenna Panel Calculations with Matlab": [[9, "Comparing-Antenna-Panel-Calculations-with-Matlab"], [40, "Comparing-Antenna-Panel-Calculations-with-Matlab"], [75, "Comparing-Antenna-Panel-Calculations-with-Matlab"]], "Comparing the CDL Channel results with Matlab": [[10, "Comparing-the-CDL-Channel-results-with-Matlab"], [41, "Comparing-the-CDL-Channel-results-with-Matlab"], [76, "Comparing-the-CDL-Channel-results-with-Matlab"]], "CDL Channel Model": [[10, "CDL-Channel-Model"], [11, "CDL-Channel-Model"], [41, "CDL-Channel-Model"], [42, "CDL-Channel-Model"], [59, "module-neoradium.cdl"], [76, "CDL-Channel-Model"], [77, "CDL-Channel-Model"], [90, "cdl-channel-model"]], "Applying the channel to a random waveform": [[10, "Applying-the-channel-to-a-random-waveform"], [41, "Applying-the-channel-to-a-random-waveform"], [76, "Applying-the-channel-to-a-random-waveform"]], "Comparing the CSI-RS results with Matlab": [[11, "Comparing-the-CSI-RS-results-with-Matlab"], [42, "Comparing-the-CSI-RS-results-with-Matlab"], [77, "Comparing-the-CSI-RS-results-with-Matlab"]], "Carrier Configuration": [[11, "Carrier-Configuration"], [13, "Carrier-Configuration"], [29, "Carrier-Configuration"], [42, "Carrier-Configuration"], [44, "Carrier-Configuration"], [54, "Carrier-Configuration"], [77, "Carrier-Configuration"], [79, "Carrier-Configuration"], [89, "Carrier-Configuration"]], "CSI-RS Configuration": [[11, "CSI-RS-Configuration"], [42, "CSI-RS-Configuration"], [77, "CSI-RS-Configuration"]], "Create a resource grid and populate it with CSI-RS": [[11, "Create-a-resource-grid-and-populate-it-with-CSI-RS"], [42, "Create-a-resource-grid-and-populate-it-with-CSI-RS"], [77, "Create-a-resource-grid-and-populate-it-with-CSI-RS"]], "Comparing CSI-RS values": [[11, "Comparing-CSI-RS-values"], [42, "Comparing-CSI-RS-values"], [77, "Comparing-CSI-RS-values"]], "OFDM Modulation": [[11, "OFDM-Modulation"], [13, "OFDM-Modulation"], [29, "OFDM-Modulation"], [42, "OFDM-Modulation"], [44, "OFDM-Modulation"], [54, "OFDM-Modulation"], [77, "OFDM-Modulation"], [79, "OFDM-Modulation"], [89, "OFDM-Modulation"]], "Comparing the channel matrix with Matlab": [[11, "Comparing-the-channel-matrix-with-Matlab"], [42, "Comparing-the-channel-matrix-with-Matlab"], [77, "Comparing-the-channel-matrix-with-Matlab"]], "Applying the channel to the waveform": [[11, "Applying-the-channel-to-the-waveform"], [42, "Applying-the-channel-to-the-waveform"], [77, "Applying-the-channel-to-the-waveform"]], "Adding AWGN": [[11, "Adding-AWGN"], [42, "Adding-AWGN"], [77, "Adding-AWGN"]], "Synchronization": [[11, "Synchronization"], [42, "Synchronization"], [77, "Synchronization"]], "OFDM Demodulation": [[11, "OFDM-Demodulation"], [42, "OFDM-Demodulation"], [77, "OFDM-Demodulation"]], "Channel Estimation": [[11, "Channel-Estimation"], [29, "Channel-Estimation"], [42, "Channel-Estimation"], [54, "Channel-Estimation"], [77, "Channel-Estimation"], [89, "Channel-Estimation"]], "Comparing the LDPC results with Matlab": [[12, "Comparing-the-LDPC-results-with-Matlab"], [43, "Comparing-the-LDPC-results-with-Matlab"], [78, "Comparing-the-LDPC-results-with-Matlab"]], "PDSCH Waveform generation": [[13, "PDSCH-Waveform-generation"], [44, "PDSCH-Waveform-generation"], [79, "PDSCH-Waveform-generation"]], "PDSCH Configuration": [[13, "PDSCH-Configuration"], [44, "PDSCH-Configuration"], [79, "PDSCH-Configuration"]], "Create a grid and populate it with DMRS data": [[13, "Create-a-grid-and-populate-it-with-DMRS-data"], [44, "Create-a-grid-and-populate-it-with-DMRS-data"], [79, "Create-a-grid-and-populate-it-with-DMRS-data"]], "Comparing DMRS symbols": [[13, "Comparing-DMRS-symbols"], [44, "Comparing-DMRS-symbols"], [79, "Comparing-DMRS-symbols"]], "Generate random bits and create resource block": [[13, "Generate-random-bits-and-create-resource-block"], [44, "Generate-random-bits-and-create-resource-block"], [79, "Generate-random-bits-and-create-resource-block"]], "Comparing the results with Matlab": [[13, "Comparing-the-results-with-Matlab"], [44, "Comparing-the-results-with-Matlab"], [79, "Comparing-the-results-with-Matlab"]], "Grid Statistics": [[13, "Grid-Statistics"], [44, "Grid-Statistics"], [79, "Grid-Statistics"]], "Draw resource allocation map": [[13, "Draw-resource-allocation-map"], [44, "Draw-resource-allocation-map"], [79, "Draw-resource-allocation-map"]], "MIMO Precoding": [[13, "MIMO-Precoding"], [44, "MIMO-Precoding"], [79, "MIMO-Precoding"]], "Comparing the Polar Coding results with Matlab": [[14, "Comparing-the-Polar-Coding-results-with-Matlab"], [45, "Comparing-the-Polar-Coding-results-with-Matlab"], [80, "Comparing-the-Polar-Coding-results-with-Matlab"]], "Using otherCdmGroups parameter": [[15, "Using-otherCdmGroups-parameter"], [46, "Using-otherCdmGroups-parameter"], [81, "Using-otherCdmGroups-parameter"]], "Configuring DMRS": [[16, "Configuring-DMRS"], [47, "Configuring-DMRS"], [82, "Configuring-DMRS"]], "Configuring PTRS": [[17, "Configuring-PTRS"], [48, "Configuring-PTRS"], [83, "Configuring-PTRS"]], "Generating Dataset for Channel Estimation Training": [[18, "Generating-Dataset-for-Channel-Estimation-Training"], [49, "Generating-Dataset-for-Channel-Estimation-Training"], [84, "Generating-Dataset-for-Channel-Estimation-Training"]], "Evaluating the Trained Channel Estimator": [[19, "Evaluating-the-Trained-Channel-Estimator"], [20, "Evaluating-the-Trained-Channel-Estimator"], [50, "Evaluating-the-Trained-Channel-Estimator"], [85, "Evaluating-the-Trained-Channel-Estimator"]], "Load the trained mode": [[19, "Load-the-trained-mode"], [20, "Load-the-trained-mode"], [50, "Load-the-trained-mode"], [85, "Load-the-trained-mode"]], "mlChanEst function": [[19, "mlChanEst-function"], [20, "mlChanEst-function"], [50, "mlChanEst-function"], [85, "mlChanEst-function"]], "Evaluation Pipeline": [[19, "Evaluation-Pipeline"], [20, "Evaluation-Pipeline"], [50, "Evaluation-Pipeline"], [85, "Evaluation-Pipeline"]], "Training a ResNet model for Channel Estimation": [[21, "Training-a-ResNet-model-for-Channel-Estimation"]], "Loading dataset": [[21, "Loading-dataset"], [22, "Loading-dataset"], [51, "Loading-dataset"], [86, "Loading-dataset"]], "Creating the model": [[21, "Creating-the-model"], [22, "Creating-the-model"], [51, "Creating-the-model"], [86, "Creating-the-model"]], "Training the model": [[21, "Training-the-model"], [22, "Training-the-model"], [51, "Training-the-model"], [86, "Training-the-model"]], "Evaluating the model": [[21, "Evaluating-the-model"], [22, "Evaluating-the-model"], [51, "Evaluating-the-model"], [86, "Evaluating-the-model"]], "Training A ResNet model for Channel Estimation": [[22, "Training-A-ResNet-model-for-Channel-Estimation"], [51, "Training-A-ResNet-model-for-Channel-Estimation"], [86, "Training-A-ResNet-model-for-Channel-Estimation"]], "Matlab:": [[25, "Matlab:"]], "Calculating bit error rate of PDSCH communication": [[27, "Calculating-bit-error-rate-of-PDSCH-communication"], [52, "Calculating-bit-error-rate-of-PDSCH-communication"], [87, "Calculating-bit-error-rate-of-PDSCH-communication"]], "Calculating BER/BLER for PDSCH Communication with LDPC": [[28, "Calculating-BER/BLER-for-PDSCH-Communication-with-LDPC"], [53, "Calculating-BER/BLER-for-PDSCH-Communication-with-LDPC"], [88, "Calculating-BER/BLER-for-PDSCH-Communication-with-LDPC"]], "PDSCH end-to-end communication": [[29, "PDSCH-end-to-end-communication"], [54, "PDSCH-end-to-end-communication"], [89, "PDSCH-end-to-end-communication"]], "PDSCH and DMRS Configuration": [[29, "PDSCH-and-DMRS-Configuration"], [54, "PDSCH-and-DMRS-Configuration"], [89, "PDSCH-and-DMRS-Configuration"]], "Channel Coding Configuration": [[29, "Channel-Coding-Configuration"], [54, "Channel-Coding-Configuration"], [89, "Channel-Coding-Configuration"]], "Resource Grid Creation and Mapping": [[29, "Resource-Grid-Creation-and-Mapping"], [54, "Resource-Grid-Creation-and-Mapping"], [89, "Resource-Grid-Creation-and-Mapping"]], "Channel Simulation and Precoding": [[29, "Channel-Simulation-and-Precoding"], [54, "Channel-Simulation-and-Precoding"], [89, "Channel-Simulation-and-Precoding"]], "Applying the channel model to the transmitted waveform": [[29, "Applying-the-channel-model-to-the-transmitted-waveform"], [54, "Applying-the-channel-model-to-the-transmitted-waveform"], [89, "Applying-the-channel-model-to-the-transmitted-waveform"]], "Adding Noise": [[29, "Adding-Noise"], [54, "Adding-Noise"], [89, "Adding-Noise"]], "Synchronization and OFDM Demodulation": [[29, "Synchronization-and-OFDM-Demodulation"], [54, "Synchronization-and-OFDM-Demodulation"], [89, "Synchronization-and-OFDM-Demodulation"]], "Applying channel in Frequency Domain": [[29, "Applying-channel-in-Frequency-Domain"], [54, "Applying-channel-in-Frequency-Domain"], [89, "Applying-channel-in-Frequency-Domain"]], "Perfect Channel Estimation": [[29, "Perfect-Channel-Estimation"], [54, "Perfect-Channel-Estimation"], [89, "Perfect-Channel-Estimation"]], "Practical Channel Estimation": [[29, "Practical-Channel-Estimation"], [54, "Practical-Channel-Estimation"], [89, "Practical-Channel-Estimation"]], "Equalization": [[29, "Equalization"], [54, "Equalization"], [89, "Equalization"]], "Demodulation, De-mapping, Descrambling": [[29, "Demodulation,-De-mapping,-Descrambling"], [54, "Demodulation,-De-mapping,-Descrambling"], [89, "Demodulation,-De-mapping,-Descrambling"]], "Rate Recovery and LDPC decoding": [[29, "Rate-Recovery-and-LDPC-decoding"], [54, "Rate-Recovery-and-LDPC-decoding"], [89, "Rate-Recovery-and-LDPC-decoding"]], "CRC checking and De-segmentation": [[29, "CRC-checking-and-De-segmentation"], [54, "CRC-checking-and-De-segmentation"], [89, "CRC-checking-and-De-segmentation"]], "Comparing the decoded transport block with the original": [[29, "Comparing-the-decoded-transport-block-with-the-original"], [54, "Comparing-the-decoded-transport-block-with-the-original"], [89, "Comparing-the-decoded-transport-block-with-the-original"]], "What is NeoRadium?": [[55, "what-is-neoradium"]], "Key features": [[55, "key-features"]], "Indices": [[55, "indices"]], "Antenna": [[56, "antenna"], [90, "antenna"], [90, "id1"]], "Plot Types:": [[56, "plot-types"]], "Carriers and Bandwidth Parts": [[57, "module-neoradium.carrier"]], "Channel Coding": [[58, "module-neoradium.chancodebase"]], "LDPC": [[58, "module-neoradium.ldpc"]], "Polar Coding": [[58, "module-neoradium.polar"]], "Channel Models": [[59, "channel-models"]], "TDL Channel Model": [[59, "module-neoradium.tdl"]], "Resource Grid": [[60, "module-neoradium.grid"]], "Modulation": [[61, "module-neoradium.modulation"]], "Physical Channels": [[62, "physical-channels"]], "Physical Downlink Shared Channel": [[62, "module-neoradium.pdsch"]], "Random Number Generator": [[63, "module-neoradium.random"]], "The random object": [[63, "the-random-object"]], "Supported Random Generators": [[63, "supported-random-generators"]], "Reference Signals": [[64, "reference-signals"]], "CSI-RS": [[64, "module-neoradium.csirs"], [90, "csi-rs"]], "DMRS and PTRS": [[64, "module-neoradium.dmrs"], [90, "dmrs-and-ptrs"]], "Waveform": [[65, "module-neoradium.waveform"]], "Playground": [[90, "playground"]], "Channels": [[90, "channels"]], "Channel State Information Reference Signals (CSI-RS)": [[90, "channel-state-information-reference-signals-csi-rs"]], "Physical Downlink Shared Channel (PDSCH)": [[90, "physical-downlink-shared-channel-pdsch"]], "A Deep Learning Case Study": [[90, "a-deep-learning-case-study"]], "Comparing with Matlab 5G Toolbox": [[90, "comparing-with-matlab-5g-toolbox"]], "PDSCH": [[90, "pdsch"]], "LDPC and Polar Coding": [[90, "ldpc-and-polar-coding"]], "Installation": [[91, "installation"]], "Create a virtual environment": [[91, "create-a-virtual-environment"]], "Install NeoRadium": [[91, "install-neoradium"]]}, "indexentries": {"antennaarray (class in neoradium.antenna)": [[56, "neoradium.antenna.AntennaArray"]], "antennabase (class in neoradium.antenna)": [[56, "neoradium.antenna.AntennaBase"]], "antennaelement (class in neoradium.antenna)": [[56, "neoradium.antenna.AntennaElement"]], "antennapanel (class in neoradium.antenna)": [[56, "neoradium.antenna.AntennaPanel"]], "allelements() (neoradium.antenna.antennaarray method)": [[56, "neoradium.antenna.AntennaArray.allElements"]], "allelements() (neoradium.antenna.antennapanel method)": [[56, "neoradium.antenna.AntennaPanel.allElements"]], "allpanels() (neoradium.antenna.antennaarray method)": [[56, "neoradium.antenna.AntennaArray.allPanels"]], "clone() (neoradium.antenna.antennaelement method)": [[56, "neoradium.antenna.AntennaElement.clone"]], "clone() (neoradium.antenna.antennapanel method)": [[56, "neoradium.antenna.AntennaPanel.clone"]], "drawradiation() (neoradium.antenna.antennabase method)": [[56, "neoradium.antenna.AntennaBase.drawRadiation"]], "getallpositions() (neoradium.antenna.antennaarray method)": [[56, "neoradium.antenna.AntennaArray.getAllPositions"]], "getallpositions() (neoradium.antenna.antennapanel method)": [[56, "neoradium.antenna.AntennaPanel.getAllPositions"]], "getdirectivity() (neoradium.antenna.antennabase method)": [[56, "neoradium.antenna.AntennaBase.getDirectivity"]], "getdirectivity() (neoradium.antenna.antennaelement method)": [[56, "neoradium.antenna.AntennaElement.getDirectivity"]], "getelement() (neoradium.antenna.antennaarray method)": [[56, "neoradium.antenna.AntennaArray.getElement"]], "getelement() (neoradium.antenna.antennapanel method)": [[56, "neoradium.antenna.AntennaPanel.getElement"]], "getelementposition() (neoradium.antenna.antennaarray method)": [[56, "neoradium.antenna.AntennaArray.getElementPosition"]], "getelementposition() (neoradium.antenna.antennapanel method)": [[56, "neoradium.antenna.AntennaPanel.getElementPosition"]], "getelementsfields() (neoradium.antenna.antennabase method)": [[56, "neoradium.antenna.AntennaBase.getElementsFields"]], "getfield() (neoradium.antenna.antennabase method)": [[56, "neoradium.antenna.AntennaBase.getField"]], "getfield() (neoradium.antenna.antennaelement method)": [[56, "neoradium.antenna.AntennaElement.getField"]], "getfieldpattern() (neoradium.antenna.antennabase method)": [[56, "neoradium.antenna.AntennaBase.getFieldPattern"]], "getnumelements() (neoradium.antenna.antennaarray method)": [[56, "neoradium.antenna.AntennaArray.getNumElements"]], "getnumelements() (neoradium.antenna.antennapanel method)": [[56, "neoradium.antenna.AntennaPanel.getNumElements"]], "getpolarizedfields() (neoradium.antenna.antennabase method)": [[56, "neoradium.antenna.AntennaBase.getPolarizedFields"]], "getpolarizedfields() (neoradium.antenna.antennaelement method)": [[56, "neoradium.antenna.AntennaElement.getPolarizedFields"]], "getpowerpattern() (neoradium.antenna.antennabase method)": [[56, "neoradium.antenna.AntennaBase.getPowerPattern"]], "getpowerpattern() (neoradium.antenna.antennaelement method)": [[56, "neoradium.antenna.AntennaElement.getPowerPattern"]], "getpowerpatterndb() (neoradium.antenna.antennabase method)": [[56, "neoradium.antenna.AntennaBase.getPowerPatternDb"]], "getpowerpatterndb() (neoradium.antenna.antennaelement method)": [[56, "neoradium.antenna.AntennaElement.getPowerPatternDb"]], "getrotationmatrix() (neoradium.antenna.antennabase method)": [[56, "neoradium.antenna.AntennaBase.getRotationMatrix"]], "getsteeringvector() (neoradium.antenna.antennabase method)": [[56, "neoradium.antenna.AntennaBase.getSteeringVector"]], "module": [[56, "module-neoradium.antenna"], [57, "module-neoradium.carrier"], [58, "module-neoradium.chancodebase"], [58, "module-neoradium.ldpc"], [58, "module-neoradium.polar"], [59, "module-neoradium.cdl"], [59, "module-neoradium.channel"], [59, "module-neoradium.tdl"], [60, "module-neoradium.grid"], [61, "module-neoradium.modulation"], [62, "module-neoradium.pdsch"], [63, "module-neoradium.random"], [64, "module-neoradium.csirs"], [64, "module-neoradium.dmrs"], [65, "module-neoradium.waveform"]], "neoradium.antenna": [[56, "module-neoradium.antenna"]], "posinarray (neoradium.antenna.antennaelement property)": [[56, "neoradium.antenna.AntennaElement.posInArray"]], "print() (neoradium.antenna.antennaarray method)": [[56, "neoradium.antenna.AntennaArray.print"]], "print() (neoradium.antenna.antennaelement method)": [[56, "neoradium.antenna.AntennaElement.print"]], "print() (neoradium.antenna.antennapanel method)": [[56, "neoradium.antenna.AntennaPanel.print"]], "showelements() (neoradium.antenna.antennaarray method)": [[56, "neoradium.antenna.AntennaArray.showElements"]], "showelements() (neoradium.antenna.antennapanel method)": [[56, "neoradium.antenna.AntennaPanel.showElements"]], "bandwidthpart (class in neoradium.carrier)": [[57, "neoradium.carrier.BandwidthPart"]], "carrier (class in neoradium.carrier)": [[57, "neoradium.carrier.Carrier"]], "creategrid() (neoradium.carrier.bandwidthpart method)": [[57, "neoradium.carrier.BandwidthPart.createGrid"]], "creategrid() (neoradium.carrier.carrier method)": [[57, "neoradium.carrier.Carrier.createGrid"]], "getcplen() (neoradium.carrier.bandwidthpart method)": [[57, "neoradium.carrier.BandwidthPart.getCpLen"]], "getcptime() (neoradium.carrier.bandwidthpart method)": [[57, "neoradium.carrier.BandwidthPart.getCpTime"]], "getnumslotsforsamples() (neoradium.carrier.bandwidthpart method)": [[57, "neoradium.carrier.BandwidthPart.getNumSlotsForSamples"]], "getnumsymbolsforsamples() (neoradium.carrier.bandwidthpart method)": [[57, "neoradium.carrier.BandwidthPart.getNumSymbolsForSamples"]], "getslotlen() (neoradium.carrier.bandwidthpart method)": [[57, "neoradium.carrier.BandwidthPart.getSlotLen"]], "getslottime() (neoradium.carrier.bandwidthpart method)": [[57, "neoradium.carrier.BandwidthPart.getSlotTime"]], "getslotsduration() (neoradium.carrier.bandwidthpart method)": [[57, "neoradium.carrier.BandwidthPart.getSlotsDuration"]], "getslotssamples() (neoradium.carrier.bandwidthpart method)": [[57, "neoradium.carrier.BandwidthPart.getSlotsSamples"]], "getsymtime() (neoradium.carrier.bandwidthpart method)": [[57, "neoradium.carrier.BandwidthPart.getSymTime"]], "gonext() (neoradium.carrier.carrier method)": [[57, "neoradium.carrier.Carrier.goNext"]], "neoradium.carrier": [[57, "module-neoradium.carrier"]], "print() (neoradium.carrier.bandwidthpart method)": [[57, "neoradium.carrier.BandwidthPart.print"]], "print() (neoradium.carrier.carrier method)": [[57, "neoradium.carrier.Carrier.print"]], "chancodebase (class in neoradium.chancodebase)": [[58, "neoradium.chancodebase.ChanCodeBase"]], "ldpcbase (class in neoradium.ldpc)": [[58, "neoradium.ldpc.LdpcBase"]], "ldpcdecoder (class in neoradium.ldpc)": [[58, "neoradium.ldpc.LdpcDecoder"]], "ldpcencoder (class in neoradium.ldpc)": [[58, "neoradium.ldpc.LdpcEncoder"]], "polarbase (class in neoradium.polar)": [[58, "neoradium.polar.PolarBase"]], "polardecoder (class in neoradium.polar)": [[58, "neoradium.polar.PolarDecoder"]], "polarencoder (class in neoradium.polar)": [[58, "neoradium.polar.PolarEncoder"]], "appendcrc() (neoradium.chancodebase.chancodebase class method)": [[58, "neoradium.chancodebase.ChanCodeBase.appendCrc"]], "checkcrc() (neoradium.chancodebase.chancodebase class method)": [[58, "neoradium.chancodebase.ChanCodeBase.checkCrc"]], "checkcrcandmerge() (neoradium.ldpc.ldpcdecoder method)": [[58, "neoradium.ldpc.LdpcDecoder.checkCrcAndMerge"]], "decode() (neoradium.ldpc.ldpcdecoder method)": [[58, "neoradium.ldpc.LdpcDecoder.decode"]], "decode() (neoradium.polar.polardecoder method)": [[58, "neoradium.polar.PolarDecoder.decode"]], "dosegmentation() (neoradium.ldpc.ldpcencoder method)": [[58, "neoradium.ldpc.LdpcEncoder.doSegmentation"]], "dosegmentation() (neoradium.polar.polarencoder method)": [[58, "neoradium.polar.PolarEncoder.doSegmentation"]], "encode() (neoradium.ldpc.ldpcencoder method)": [[58, "neoradium.ldpc.LdpcEncoder.encode"]], "encode() (neoradium.polar.polarencoder method)": [[58, "neoradium.polar.PolarEncoder.encode"]], "getcrc() (neoradium.chancodebase.chancodebase class method)": [[58, "neoradium.chancodebase.ChanCodeBase.getCrc"]], "getdecoder() (neoradium.ldpc.ldpcencoder method)": [[58, "neoradium.ldpc.LdpcEncoder.getDecoder"]], "getratematchedcodewords() (neoradium.ldpc.ldpcencoder method)": [[58, "neoradium.ldpc.LdpcEncoder.getRateMatchedCodeWords"]], "isvalidcodeword() (neoradium.ldpc.ldpcbase method)": [[58, "neoradium.ldpc.LdpcBase.isValidCodeword"]], "neoradium.chancodebase": [[58, "module-neoradium.chancodebase"]], "neoradium.ldpc": [[58, "module-neoradium.ldpc"]], "neoradium.polar": [[58, "module-neoradium.polar"]], "print() (neoradium.ldpc.ldpcdecoder method)": [[58, "neoradium.ldpc.LdpcDecoder.print"]], "print() (neoradium.ldpc.ldpcencoder method)": [[58, "neoradium.ldpc.LdpcEncoder.print"]], "print() (neoradium.polar.polardecoder method)": [[58, "neoradium.polar.PolarDecoder.print"]], "print() (neoradium.polar.polarencoder method)": [[58, "neoradium.polar.PolarEncoder.print"]], "ratematch() (neoradium.ldpc.ldpcencoder method)": [[58, "neoradium.ldpc.LdpcEncoder.rateMatch"]], "ratematch() (neoradium.polar.polarencoder method)": [[58, "neoradium.polar.PolarEncoder.rateMatch"]], "recoverrate() (neoradium.ldpc.ldpcdecoder method)": [[58, "neoradium.ldpc.LdpcDecoder.recoverRate"]], "recoverrate() (neoradium.polar.polardecoder method)": [[58, "neoradium.polar.PolarDecoder.recoverRate"]], "setfillerbits() (neoradium.ldpc.ldpcencoder method)": [[58, "neoradium.ldpc.LdpcEncoder.setFillerBits"]], "setiosizes() (neoradium.polar.polarbase method)": [[58, "neoradium.polar.PolarBase.setIoSizes"]], "cdlchannel (class in neoradium.cdl)": [[59, "neoradium.cdl.CdlChannel"]], "channelbase (class in neoradium.channel)": [[59, "neoradium.channel.ChannelBase"]], "tdlchannel (class in neoradium.tdl)": [[59, "neoradium.tdl.TdlChannel"]], "applytogrid() (neoradium.channel.channelbase method)": [[59, "neoradium.channel.ChannelBase.applyToGrid"]], "applytosignal() (neoradium.channel.channelbase method)": [[59, "neoradium.channel.ChannelBase.applyToSignal"]], "getchannelmatrix() (neoradium.channel.channelbase method)": [[59, "neoradium.channel.ChannelBase.getChannelMatrix"]], "getmaxdelay() (neoradium.channel.channelbase method)": [[59, "neoradium.channel.ChannelBase.getMaxDelay"]], "getpathfilters() (neoradium.channel.channelbase method)": [[59, "neoradium.channel.ChannelBase.getPathFilters"]], "getpathgains() (neoradium.channel.channelbase method)": [[59, "neoradium.channel.ChannelBase.getPathGains"]], "gettimingoffset() (neoradium.channel.channelbase method)": [[59, "neoradium.channel.ChannelBase.getTimingOffset"]], "gonext() (neoradium.channel.channelbase method)": [[59, "neoradium.channel.ChannelBase.goNext"]], "neoradium.cdl": [[59, "module-neoradium.cdl"]], "neoradium.channel": [[59, "module-neoradium.channel"]], "neoradium.tdl": [[59, "module-neoradium.tdl"]], "print() (neoradium.cdl.cdlchannel method)": [[59, "neoradium.cdl.CdlChannel.print"]], "print() (neoradium.channel.channelbase method)": [[59, "neoradium.channel.ChannelBase.print"]], "print() (neoradium.tdl.tdlchannel method)": [[59, "neoradium.tdl.TdlChannel.print"]], "restart() (neoradium.cdl.cdlchannel method)": [[59, "neoradium.cdl.CdlChannel.restart"]], "restart() (neoradium.channel.channelbase method)": [[59, "neoradium.channel.ChannelBase.restart"]], "grid (class in neoradium.grid)": [[60, "neoradium.grid.Grid"]], "addnoise() (neoradium.grid.grid method)": [[60, "neoradium.grid.Grid.addNoise"]], "applychannel() (neoradium.grid.grid method)": [[60, "neoradium.grid.Grid.applyChannel"]], "drawmap() (neoradium.grid.grid method)": [[60, "neoradium.grid.Grid.drawMap"]], "equalize() (neoradium.grid.grid method)": [[60, "neoradium.grid.Grid.equalize"]], "estimatechannells() (neoradium.grid.grid method)": [[60, "neoradium.grid.Grid.estimateChannelLS"]], "estimatetimingoffset() (neoradium.grid.grid method)": [[60, "neoradium.grid.Grid.estimateTimingOffset"]], "getreindexes() (neoradium.grid.grid method)": [[60, "neoradium.grid.Grid.getReIndexes"]], "getrevalues() (neoradium.grid.grid method)": [[60, "neoradium.grid.Grid.getReValues"]], "getstats() (neoradium.grid.grid method)": [[60, "neoradium.grid.Grid.getStats"]], "neoradium.grid": [[60, "module-neoradium.grid"]], "ofdmmodulate() (neoradium.grid.grid method)": [[60, "neoradium.grid.Grid.ofdmModulate"]], "precode() (neoradium.grid.grid method)": [[60, "neoradium.grid.Grid.precode"]], "print() (neoradium.grid.grid method)": [[60, "neoradium.grid.Grid.print"]], "retypeat() (neoradium.grid.grid method)": [[60, "neoradium.grid.Grid.reTypeAt"]], "modem (class in neoradium.modulation)": [[61, "neoradium.modulation.Modem"]], "demodulate() (neoradium.modulation.modem method)": [[61, "neoradium.modulation.Modem.demodulate"]], "getllrsfromsymbols() (neoradium.modulation.modem method)": [[61, "neoradium.modulation.Modem.getLLRsFromSymbols"]], "modulate() (neoradium.modulation.modem method)": [[61, "neoradium.modulation.Modem.modulate"]], "neoradium.modulation": [[61, "module-neoradium.modulation"]], "print() (neoradium.modulation.modem method)": [[61, "neoradium.modulation.Modem.print"]], "pdsch (class in neoradium.pdsch)": [[62, "neoradium.pdsch.PDSCH"]], "getbitsizes() (neoradium.pdsch.pdsch method)": [[62, "neoradium.pdsch.PDSCH.getBitSizes"]], "getdatasymbols() (neoradium.pdsch.pdsch method)": [[62, "neoradium.pdsch.PDSCH.getDataSymbols"]], "getgrid() (neoradium.pdsch.pdsch method)": [[62, "neoradium.pdsch.PDSCH.getGrid"]], "gethardbitsfromgrid() (neoradium.pdsch.pdsch method)": [[62, "neoradium.pdsch.PDSCH.getHardBitsFromGrid"]], "getllrsfromgrid() (neoradium.pdsch.pdsch method)": [[62, "neoradium.pdsch.PDSCH.getLLRsFromGrid"]], "getnumresfromindexes() (neoradium.pdsch.pdsch method)": [[62, "neoradium.pdsch.PDSCH.getNumREsFromIndexes"]], "getprecodingmatrix() (neoradium.pdsch.pdsch method)": [[62, "neoradium.pdsch.PDSCH.getPrecodingMatrix"]], "getreindexes() (neoradium.pdsch.pdsch method)": [[62, "neoradium.pdsch.PDSCH.getReIndexes"]], "gettxblocksize() (neoradium.pdsch.pdsch method)": [[62, "neoradium.pdsch.PDSCH.getTxBlockSize"]], "neoradium.pdsch": [[62, "module-neoradium.pdsch"]], "populategrid() (neoradium.pdsch.pdsch method)": [[62, "neoradium.pdsch.PDSCH.populateGrid"]], "print() (neoradium.pdsch.pdsch method)": [[62, "neoradium.pdsch.PDSCH.print"]], "setdmrs() (neoradium.pdsch.pdsch method)": [[62, "neoradium.pdsch.PDSCH.setDMRS"]], "setptrs() (neoradium.pdsch.pdsch method)": [[62, "neoradium.pdsch.PDSCH.setPTRS"]], "rangen (class in neoradium.random)": [[63, "neoradium.random.RanGen"]], "getgenerator() (neoradium.random.rangen method)": [[63, "neoradium.random.RanGen.getGenerator"]], "neoradium.random": [[63, "module-neoradium.random"]], "setseed() (neoradium.random.rangen method)": [[63, "neoradium.random.RanGen.setSeed"]], "csirs (class in neoradium.csirs)": [[64, "neoradium.csirs.CsiRs"]], "csirsconfig (class in neoradium.csirs)": [[64, "neoradium.csirs.CsiRsConfig"]], "csirsset (class in neoradium.csirs)": [[64, "neoradium.csirs.CsiRsSet"]], "dmrs (class in neoradium.dmrs)": [[64, "neoradium.dmrs.DMRS"]], "ptrs (class in neoradium.dmrs)": [[64, "neoradium.dmrs.PTRS"]], "addcsiresourcesets() (neoradium.csirs.csirsconfig method)": [[64, "neoradium.csirs.CsiRsConfig.addCsiResourceSets"]], "addcsirs() (neoradium.csirs.csirsconfig method)": [[64, "neoradium.csirs.CsiRsConfig.addCsiRs"]], "addcsirs() (neoradium.csirs.csirsset method)": [[64, "neoradium.csirs.CsiRsSet.addCsiRs"]], "neoradium.csirs": [[64, "module-neoradium.csirs"]], "neoradium.dmrs": [[64, "module-neoradium.dmrs"]], "populategrid() (neoradium.csirs.csirsconfig method)": [[64, "neoradium.csirs.CsiRsConfig.populateGrid"]], "populategrid() (neoradium.dmrs.dmrs method)": [[64, "neoradium.dmrs.DMRS.populateGrid"]], "populategrid() (neoradium.dmrs.ptrs method)": [[64, "neoradium.dmrs.PTRS.populateGrid"]], "print() (neoradium.csirs.csirs method)": [[64, "neoradium.csirs.CsiRs.print"]], "print() (neoradium.csirs.csirsconfig method)": [[64, "neoradium.csirs.CsiRsConfig.print"]], "print() (neoradium.csirs.csirsset method)": [[64, "neoradium.csirs.CsiRsSet.print"]], "print() (neoradium.dmrs.dmrs method)": [[64, "neoradium.dmrs.DMRS.print"]], "print() (neoradium.dmrs.ptrs method)": [[64, "neoradium.dmrs.PTRS.print"]], "setptrs() (neoradium.dmrs.dmrs method)": [[64, "neoradium.dmrs.DMRS.setPTRS"]], "waveform (class in neoradium.waveform)": [[65, "neoradium.waveform.Waveform"]], "addnoise() (neoradium.waveform.waveform method)": [[65, "neoradium.waveform.Waveform.addNoise"]], "applychannel() (neoradium.waveform.waveform method)": [[65, "neoradium.waveform.Waveform.applyChannel"]], "applywindowing() (neoradium.waveform.waveform method)": [[65, "neoradium.waveform.Waveform.applyWindowing"]], "neoradium.waveform": [[65, "module-neoradium.waveform"]], "ofdmdemodulate() (neoradium.waveform.waveform method)": [[65, "neoradium.waveform.Waveform.ofdmDemodulate"]], "pad() (neoradium.waveform.waveform method)": [[65, "neoradium.waveform.Waveform.pad"]], "print() (neoradium.waveform.waveform method)": [[65, "neoradium.waveform.Waveform.print"]], "sync() (neoradium.waveform.waveform method)": [[65, "neoradium.waveform.Waveform.sync"]]}})