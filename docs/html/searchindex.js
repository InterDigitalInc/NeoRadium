Search.setIndex({"docnames": ["html/html/source/Playground/Notebooks/Antenna/AntennaArray", "html/html/source/Playground/Notebooks/Antenna/AntennaElement", "html/html/source/Playground/Notebooks/Antenna/AntennaPanel", "html/html/source/Playground/Notebooks/CSI-RS/CSI-RS", "html/html/source/Playground/Notebooks/CSI-RS/CSI-RS-Time", "html/html/source/Playground/Notebooks/Channels/ChannelMatrix", "html/html/source/Playground/Notebooks/Channels/cdlTiming", "html/html/source/Playground/Notebooks/CompareWithMatlab/Antenna/AntennaArray", "html/html/source/Playground/Notebooks/CompareWithMatlab/Antenna/AntennaElement", "html/html/source/Playground/Notebooks/CompareWithMatlab/Antenna/AntennaPanel", "html/html/source/Playground/Notebooks/CompareWithMatlab/CDL/CDL-Matlab", "html/html/source/Playground/Notebooks/CompareWithMatlab/CSI-RS/CSI-RS-Matlab", "html/html/source/Playground/Notebooks/CompareWithMatlab/LDPC/LDPC-Matlab", "html/html/source/Playground/Notebooks/CompareWithMatlab/PDSCH/PDSCH-waveform", "html/html/source/Playground/Notebooks/CompareWithMatlab/Polar/PolarMatlab", "html/html/source/Playground/Notebooks/DMRS/CDMsWithNoData", "html/html/source/Playground/Notebooks/DMRS/DMRS", "html/html/source/Playground/Notebooks/DMRS/PTRS", "html/html/source/Playground/Notebooks/MLChEst/MLChestDataGen", "html/html/source/Playground/Notebooks/MLChEst/MLChestEvaluate", "html/html/source/Playground/Notebooks/MLChEst/MLChestEvaluateTorch", "html/html/source/Playground/Notebooks/MLChEst/MLChestTrain", "html/html/source/Playground/Notebooks/MLChEst/MLChestTrainTorch", "html/html/source/Playground/Notebooks/OngoingWork/CSI-Feedback/RemoveNeighbors", "html/html/source/Playground/Notebooks/OngoingWork/CSI-Feedback/Untitled", "html/html/source/Playground/Notebooks/OngoingWork/CSI-Feedback/getSINR", "html/html/source/Playground/Notebooks/OngoingWork/CSI-Feedback/tests1", "html/html/source/Playground/Notebooks/PDSCH/PDSCH-BER", "html/html/source/Playground/Notebooks/PDSCH/PDSCH-BLER", "html/html/source/Playground/Notebooks/PDSCH/PDSCH-endToEnd", "html/html/source/Playground/Notebooks/PDSCH/PDSCH-endToEnd-Copy1", "index", "source/API/Antenna", "source/API/Carrier", "source/API/ChanCode", "source/API/Channels", "source/API/Grid", "source/API/Modulation", "source/API/PhyChannels", "source/API/Random", "source/API/RefSig", "source/API/Waveform", "source/Playground/Notebooks/Antenna/AntennaArray", "source/Playground/Notebooks/Antenna/AntennaElement", "source/Playground/Notebooks/Antenna/AntennaPanel", "source/Playground/Notebooks/CSI-RS/CSI-RS", "source/Playground/Notebooks/CSI-RS/CSI-RS-Time", "source/Playground/Notebooks/Channels/ChannelMatrix", "source/Playground/Notebooks/Channels/cdlTiming", "source/Playground/Notebooks/CompareWithMatlab/Antenna/AntennaArray", "source/Playground/Notebooks/CompareWithMatlab/Antenna/AntennaElement", "source/Playground/Notebooks/CompareWithMatlab/Antenna/AntennaPanel", "source/Playground/Notebooks/CompareWithMatlab/CDL/CDL-Matlab", "source/Playground/Notebooks/CompareWithMatlab/CSI-RS/CSI-RS-Matlab", "source/Playground/Notebooks/CompareWithMatlab/LDPC/LDPC-Matlab", "source/Playground/Notebooks/CompareWithMatlab/PDSCH/PDSCH-waveform", "source/Playground/Notebooks/CompareWithMatlab/Polar/PolarMatlab", "source/Playground/Notebooks/DMRS/CDMsWithNoData", "source/Playground/Notebooks/DMRS/DMRS", "source/Playground/Notebooks/DMRS/PTRS", "source/Playground/Notebooks/MLChEst/MLChestDataGen", "source/Playground/Notebooks/MLChEst/MLChestEvaluateTorch", "source/Playground/Notebooks/MLChEst/MLChestTrainTorch", "source/Playground/Notebooks/PDSCH/PDSCH-BER", "source/Playground/Notebooks/PDSCH/PDSCH-BLER", "source/Playground/Notebooks/PDSCH/PDSCH-endToEnd", "source/Playground/Playground", "source/installation"], "filenames": ["html/html/source/Playground/Notebooks/Antenna/AntennaArray.ipynb", "html/html/source/Playground/Notebooks/Antenna/AntennaElement.ipynb", "html/html/source/Playground/Notebooks/Antenna/AntennaPanel.ipynb", "html/html/source/Playground/Notebooks/CSI-RS/CSI-RS.ipynb", "html/html/source/Playground/Notebooks/CSI-RS/CSI-RS-Time.ipynb", "html/html/source/Playground/Notebooks/Channels/ChannelMatrix.ipynb", "html/html/source/Playground/Notebooks/Channels/cdlTiming.ipynb", "html/html/source/Playground/Notebooks/CompareWithMatlab/Antenna/AntennaArray.ipynb", "html/html/source/Playground/Notebooks/CompareWithMatlab/Antenna/AntennaElement.ipynb", "html/html/source/Playground/Notebooks/CompareWithMatlab/Antenna/AntennaPanel.ipynb", "html/html/source/Playground/Notebooks/CompareWithMatlab/CDL/CDL-Matlab.ipynb", "html/html/source/Playground/Notebooks/CompareWithMatlab/CSI-RS/CSI-RS-Matlab.ipynb", "html/html/source/Playground/Notebooks/CompareWithMatlab/LDPC/LDPC-Matlab.ipynb", "html/html/source/Playground/Notebooks/CompareWithMatlab/PDSCH/PDSCH-waveform.ipynb", "html/html/source/Playground/Notebooks/CompareWithMatlab/Polar/PolarMatlab.ipynb", "html/html/source/Playground/Notebooks/DMRS/CDMsWithNoData.ipynb", "html/html/source/Playground/Notebooks/DMRS/DMRS.ipynb", "html/html/source/Playground/Notebooks/DMRS/PTRS.ipynb", "html/html/source/Playground/Notebooks/MLChEst/MLChestDataGen.ipynb", "html/html/source/Playground/Notebooks/MLChEst/MLChestEvaluate.ipynb", "html/html/source/Playground/Notebooks/MLChEst/MLChestEvaluateTorch.ipynb", "html/html/source/Playground/Notebooks/MLChEst/MLChestTrain.ipynb", "html/html/source/Playground/Notebooks/MLChEst/MLChestTrainTorch.ipynb", "html/html/source/Playground/Notebooks/OngoingWork/CSI-Feedback/RemoveNeighbors.ipynb", "html/html/source/Playground/Notebooks/OngoingWork/CSI-Feedback/Untitled.ipynb", "html/html/source/Playground/Notebooks/OngoingWork/CSI-Feedback/getSINR.ipynb", "html/html/source/Playground/Notebooks/OngoingWork/CSI-Feedback/tests1.ipynb", "html/html/source/Playground/Notebooks/PDSCH/PDSCH-BER.ipynb", "html/html/source/Playground/Notebooks/PDSCH/PDSCH-BLER.ipynb", "html/html/source/Playground/Notebooks/PDSCH/PDSCH-endToEnd.ipynb", "html/html/source/Playground/Notebooks/PDSCH/PDSCH-endToEnd-Copy1.ipynb", "index.rst", "source/API/Antenna.rst", "source/API/Carrier.rst", "source/API/ChanCode.rst", "source/API/Channels.rst", "source/API/Grid.rst", "source/API/Modulation.rst", "source/API/PhyChannels.rst", "source/API/Random.rst", "source/API/RefSig.rst", "source/API/Waveform.rst", "source/Playground/Notebooks/Antenna/AntennaArray.ipynb", "source/Playground/Notebooks/Antenna/AntennaElement.ipynb", "source/Playground/Notebooks/Antenna/AntennaPanel.ipynb", "source/Playground/Notebooks/CSI-RS/CSI-RS.ipynb", "source/Playground/Notebooks/CSI-RS/CSI-RS-Time.ipynb", "source/Playground/Notebooks/Channels/ChannelMatrix.ipynb", "source/Playground/Notebooks/Channels/cdlTiming.ipynb", "source/Playground/Notebooks/CompareWithMatlab/Antenna/AntennaArray.ipynb", "source/Playground/Notebooks/CompareWithMatlab/Antenna/AntennaElement.ipynb", "source/Playground/Notebooks/CompareWithMatlab/Antenna/AntennaPanel.ipynb", "source/Playground/Notebooks/CompareWithMatlab/CDL/CDL-Matlab.ipynb", "source/Playground/Notebooks/CompareWithMatlab/CSI-RS/CSI-RS-Matlab.ipynb", "source/Playground/Notebooks/CompareWithMatlab/LDPC/LDPC-Matlab.ipynb", "source/Playground/Notebooks/CompareWithMatlab/PDSCH/PDSCH-waveform.ipynb", "source/Playground/Notebooks/CompareWithMatlab/Polar/PolarMatlab.ipynb", "source/Playground/Notebooks/DMRS/CDMsWithNoData.ipynb", "source/Playground/Notebooks/DMRS/DMRS.ipynb", "source/Playground/Notebooks/DMRS/PTRS.ipynb", "source/Playground/Notebooks/MLChEst/MLChestDataGen.ipynb", "source/Playground/Notebooks/MLChEst/MLChestEvaluateTorch.ipynb", "source/Playground/Notebooks/MLChEst/MLChestTrainTorch.ipynb", "source/Playground/Notebooks/PDSCH/PDSCH-BER.ipynb", "source/Playground/Notebooks/PDSCH/PDSCH-BLER.ipynb", "source/Playground/Notebooks/PDSCH/PDSCH-endToEnd.ipynb", "source/Playground/Playground.rst", "source/installation.rst"], "titles": ["Antenna Array", "Antenna Element", "Antenna Panel", "Channel State Information Reference Signals (CSI-RS) Configuration", "CSI-RS timing configurations", "Channel Matrix", "Channel timing", "Comparing Antenna Array Calculations with Matlab", "Comparing Antenna Element Calculations with Matlab", "Comparing Antenna Panel Calculations with Matlab", "Comparing the CDL Channel results with Matlab", "Comparing the CSI-RS results with Matlab", "Comparing the LDPC results with Matlab", "PDSCH Waveform generation", "Comparing the Polar Coding results with Matlab", "Using <code class=\"docutils literal notranslate\"><span class=\"pre\">otherCdmGroups</span></code> parameter", "Configuring DMRS", "Configuring PTRS", "Generating Dataset for Channel Estimation Training", "Evaluating the Trained Channel Estimator", "Evaluating the Trained Channel Estimator", "Training a ResNet model for Channel Estimation", "Training A ResNet model for Channel Estimation", "&lt;no title&gt;", "&lt;no title&gt;", "Matlab:", "&lt;no title&gt;", "Calculating bit error rate of PDSCH communication", "Calculating BER/BLER for PDSCH Communication with LDPC", "PDSCH end-to-end communication", "&lt;no title&gt;", "What is NeoRadium?", "Antenna", "Carriers and Bandwidth Parts", "Channel Coding", "Channel Models", "Resource Grid", "Modulation", "Physical Channels", "Random Number Generator", "Reference Signals", "Waveform", "Antenna Array", "Antenna Element", "Antenna Panel", "Channel State Information Reference Signals (CSI-RS) Configuration", "CSI-RS timing configurations", "Channel Matrix", "Channel timing", "Comparing Antenna Array Calculations with Matlab", "Comparing Antenna Element Calculations with Matlab", "Comparing Antenna Panel Calculations with Matlab", "Comparing the CDL Channel results with Matlab", "Comparing the CSI-RS results with Matlab", "Comparing the LDPC results with Matlab", "PDSCH Waveform generation", "Comparing the Polar Coding results with Matlab", "Using <code class=\"docutils literal notranslate\"><span class=\"pre\">otherCdmGroups</span></code> parameter", "Configuring DMRS", "Configuring PTRS", "Generating Dataset for Channel Estimation Training", "Evaluating the Trained Channel Estimator", "Training A ResNet model for Channel Estimation", "Calculating bit error rate of PDSCH communication", "Calculating BER/BLER for PDSCH Communication with LDPC", "PDSCH end-to-end communication", "Playground", "Installation"], "terms": {"1": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65], "import": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 38, 39, 40, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65], "numpi": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 32, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65], "np": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 32, 35, 36, 38, 39, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65], "time": [0, 1, 5, 7, 8, 9, 10, 11, 12, 13, 14, 18, 19, 20, 21, 22, 24, 27, 28, 29, 30, 31, 32, 33, 35, 36, 40, 41, 42, 43, 47, 49, 50, 51, 52, 53, 54, 55, 56, 60, 61, 62, 63, 64, 65, 66], "neoradium": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 24, 26, 27, 28, 29, 30, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 63, 64, 65, 66], "nr": [0, 1, 2, 6, 7, 8, 9, 10, 14, 18, 20, 25, 26, 29, 31, 34, 35, 36, 38, 40, 41, 42, 43, 44, 48, 49, 50, 51, 52, 56, 60, 61, 65], "2": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65], "we": [0, 1, 2, 6, 7, 8, 9, 10, 11, 12, 13, 15, 17, 18, 19, 20, 21, 22, 23, 24, 27, 29, 34, 38, 40, 41, 42, 43, 44, 48, 49, 50, 51, 52, 53, 54, 55, 57, 59, 60, 61, 62, 63, 65], "first": [0, 2, 3, 4, 5, 6, 7, 9, 11, 12, 13, 14, 15, 18, 19, 20, 21, 22, 24, 29, 32, 34, 35, 36, 37, 38, 40, 41, 42, 44, 45, 46, 47, 48, 49, 51, 53, 54, 55, 56, 57, 60, 61, 62, 65], "creat": [0, 1, 2, 5, 6, 7, 8, 9, 10, 12, 14, 15, 16, 17, 18, 19, 20, 24, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 38, 39, 40, 41, 42, 43, 44, 47, 48, 49, 50, 51, 52, 54, 56, 57, 58, 59, 60, 61, 63, 64, 65], "an": [0, 1, 2, 5, 7, 8, 9, 11, 12, 13, 16, 17, 18, 19, 20, 22, 24, 25, 26, 29, 30, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 47, 49, 50, 51, 53, 54, 55, 58, 59, 60, 61, 62, 65], "element": [0, 2, 5, 7, 9, 10, 11, 13, 24, 26, 29, 32, 33, 34, 35, 36, 38, 40, 41, 42, 44, 47, 49, 51, 52, 53, 55, 65, 66], "templat": [0, 2, 7, 9, 24, 26, 32, 42, 44, 49, 51], "The": [0, 1, 2, 3, 5, 6, 7, 8, 9, 10, 11, 12, 13, 15, 18, 19, 20, 21, 22, 26, 27, 28, 29, 30, 32, 33, 34, 35, 36, 37, 38, 40, 41, 42, 43, 44, 45, 47, 48, 49, 50, 51, 52, 53, 54, 55, 57, 60, 61, 62, 63, 64, 65, 66], "panel": [0, 7, 24, 26, 32, 42, 49, 66], "class": [0, 2, 7, 9, 10, 11, 20, 22, 26, 29, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 44, 49, 51, 52, 53, 61, 62, 65], "antennapanel": [0, 2, 5, 6, 7, 9, 10, 11, 13, 18, 19, 20, 24, 26, 27, 28, 29, 30, 32, 35, 42, 44, 47, 48, 49, 51, 52, 53, 55, 60, 61, 63, 64, 65], "us": [0, 1, 2, 3, 4, 5, 7, 8, 9, 10, 11, 12, 13, 16, 17, 18, 19, 20, 21, 22, 23, 24, 26, 27, 28, 29, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 49, 50, 51, 52, 53, 54, 55, 58, 59, 60, 61, 62, 63, 64, 65, 66], "thi": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 22, 24, 27, 28, 29, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65], "elementtempl": [0, 2, 7, 9, 32, 42, 44, 49, 51], "antennael": [0, 1, 2, 7, 8, 9, 24, 26, 32, 42, 43, 44, 49, 50, 51], "beamwidth": [0, 1, 2, 7, 8, 9, 32, 42, 43, 44, 49, 50, 51], "65": [0, 1, 2, 5, 7, 8, 9, 22, 24, 32, 42, 43, 44, 47, 49, 50, 51, 62], "maxattenu": [0, 1, 2, 7, 8, 9, 32, 42, 43, 44, 49, 50, 51], "30": [0, 1, 2, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 22, 24, 25, 26, 27, 28, 29, 30, 32, 33, 34, 35, 42, 43, 44, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65], "now": [0, 2, 7, 9, 10, 11, 13, 15, 16, 18, 19, 20, 21, 22, 24, 27, 29, 40, 42, 44, 49, 51, 52, 53, 55, 57, 58, 60, 61, 62, 63, 65], "antennaarrai": [0, 7, 32, 35, 42, 49], "paneltempl": [0, 7, 32, 42, 49], "4": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 32, 33, 34, 35, 36, 37, 38, 39, 40, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65], "polar": [0, 2, 5, 6, 7, 9, 10, 11, 18, 19, 20, 24, 26, 29, 30, 31, 32, 35, 36, 42, 44, 47, 48, 49, 51, 52, 53, 60, 61, 65], "can": [0, 1, 2, 7, 8, 9, 10, 11, 13, 15, 18, 19, 20, 21, 22, 24, 29, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 49, 50, 51, 52, 53, 55, 57, 60, 61, 62, 65, 66], "note": [0, 2, 3, 6, 7, 8, 9, 10, 11, 13, 15, 16, 18, 20, 21, 22, 25, 26, 29, 32, 34, 35, 36, 38, 39, 40, 41, 42, 44, 45, 48, 49, 50, 51, 52, 53, 55, 57, 58, 60, 61, 62, 65], "space": [0, 2, 3, 4, 5, 7, 9, 10, 11, 13, 15, 16, 17, 18, 19, 20, 24, 26, 27, 28, 29, 30, 32, 33, 40, 42, 44, 45, 46, 47, 49, 51, 52, 53, 55, 57, 58, 59, 60, 61, 63, 64, 65], "valu": [0, 1, 2, 3, 6, 7, 8, 9, 13, 14, 15, 16, 17, 18, 19, 20, 24, 26, 27, 28, 29, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 48, 49, 50, 51, 55, 56, 57, 58, 59, 60, 61, 63, 64, 65], "ar": [0, 1, 3, 5, 7, 8, 10, 11, 13, 15, 16, 18, 19, 20, 24, 29, 31, 32, 33, 34, 35, 36, 38, 40, 41, 42, 43, 45, 47, 49, 50, 52, 53, 55, 57, 58, 60, 61, 65, 66], "multipl": [0, 7, 25, 26, 29, 32, 34, 35, 36, 38, 42, 49, 65], "wavelength": [0, 7, 42, 49], "3": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 67], "showel": [0, 2, 7, 9, 24, 26, 32, 42, 44, 49, 51], "method": [0, 1, 2, 5, 6, 7, 8, 9, 10, 11, 13, 18, 19, 20, 24, 27, 28, 29, 32, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 47, 48, 49, 50, 51, 52, 53, 55, 60, 61, 63, 64, 65], "draw": [0, 1, 2, 4, 6, 7, 8, 9, 15, 16, 17, 29, 32, 36, 42, 43, 44, 46, 48, 49, 50, 51, 57, 58, 59, 65], "show": [0, 2, 3, 4, 5, 6, 7, 9, 11, 13, 15, 16, 17, 18, 19, 20, 21, 22, 27, 28, 29, 32, 34, 38, 40, 42, 44, 45, 46, 47, 48, 49, 51, 53, 55, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66], "all": [0, 2, 3, 7, 9, 11, 12, 13, 15, 16, 17, 18, 19, 20, 21, 24, 26, 29, 31, 32, 34, 35, 36, 38, 39, 40, 41, 42, 44, 45, 49, 51, 53, 54, 55, 57, 58, 59, 60, 61, 65], "zerotick": [0, 2, 7, 9, 24, 26, 32, 42, 44, 49, 51], "true": [0, 1, 2, 5, 6, 7, 8, 9, 10, 11, 12, 14, 18, 19, 20, 22, 24, 26, 27, 28, 29, 32, 33, 34, 35, 36, 37, 38, 40, 41, 42, 43, 44, 47, 48, 49, 50, 51, 52, 53, 54, 56, 60, 61, 62, 63, 64, 65], "depend": [0, 1, 2, 7, 8, 9, 18, 29, 32, 34, 36, 37, 38, 39, 41, 42, 43, 44, 49, 50, 51, 60, 65], "input": [0, 1, 2, 6, 7, 8, 9, 10, 12, 14, 19, 20, 21, 29, 34, 37, 38, 42, 43, 44, 48, 49, 50, 51, 52, 54, 56, 61, 65], "paramet": [0, 1, 2, 7, 8, 9, 10, 11, 13, 19, 20, 21, 22, 29, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 49, 50, 51, 52, 53, 55, 61, 62, 65, 66], "drawradi": [0, 1, 2, 7, 8, 9, 32, 42, 43, 44, 49, 50, 51], "differ": [0, 1, 2, 3, 5, 6, 7, 8, 9, 10, 11, 13, 15, 16, 17, 18, 19, 20, 24, 27, 28, 29, 31, 32, 34, 35, 36, 38, 40, 41, 42, 43, 44, 45, 47, 48, 49, 50, 51, 52, 53, 55, 57, 58, 59, 60, 61, 63, 64, 65, 66], "type": [0, 1, 2, 3, 4, 7, 8, 9, 11, 13, 15, 16, 17, 24, 26, 29, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 49, 50, 51, 53, 55, 57, 58, 59, 65], "graph": [0, 1, 2, 6, 7, 8, 9, 12, 34, 42, 43, 44, 48, 49, 50, 51, 54], "here": [0, 1, 2, 7, 8, 9, 10, 11, 12, 13, 14, 15, 19, 20, 29, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 42, 43, 44, 49, 50, 51, 52, 53, 54, 55, 56, 57, 61, 65, 67], "direct": [0, 1, 2, 7, 8, 9, 31, 32, 35, 36, 40, 42, 43, 44, 49, 50, 51], "horizont": [0, 1, 2, 7, 8, 9, 32, 36, 42, 43, 44, 49, 50, 51], "plane": [0, 1, 2, 7, 8, 9, 33, 36, 42, 43, 44, 49, 50, 51], "zero": [0, 1, 2, 5, 7, 8, 9, 11, 12, 13, 18, 19, 20, 23, 27, 28, 29, 30, 32, 33, 34, 35, 36, 38, 40, 41, 42, 43, 44, 47, 49, 50, 51, 53, 54, 55, 60, 61, 63, 64, 65], "elev": [0, 1, 2, 7, 8, 9, 32, 42, 43, 44, 49, 50, 51], "radvalu": [0, 1, 2, 7, 8, 9, 42, 43, 44, 49, 50, 51], "theta": [0, 1, 2, 7, 8, 9, 32, 42, 43, 44, 49, 50, 51], "90": [0, 1, 2, 5, 7, 8, 9, 10, 11, 19, 20, 22, 24, 26, 32, 35, 42, 43, 44, 47, 49, 50, 51, 52, 53, 61, 62], "radiationtyp": [0, 1, 2, 7, 8, 9, 32, 42, 43, 44, 49, 50, 51], "normal": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 15, 16, 17, 24, 29, 32, 33, 35, 40, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 57, 58, 59, 65], "fals": [0, 2, 5, 7, 9, 12, 18, 19, 20, 22, 25, 26, 27, 28, 32, 33, 34, 35, 36, 37, 38, 40, 41, 42, 44, 47, 49, 51, 54, 60, 61, 62, 63, 64], "i": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 60, 61, 62, 63, 64, 65, 67], "radiat": [0, 7, 32, 42, 49], "power": [0, 3, 4, 5, 7, 8, 9, 10, 11, 24, 31, 32, 33, 34, 35, 36, 38, 40, 42, 45, 46, 47, 49, 50, 51, 52, 53], "vertic": [0, 1, 2, 7, 8, 9, 32, 36, 42, 43, 44, 49, 50, 51], "azimuth": [0, 1, 2, 7, 8, 9, 32, 35, 42, 43, 44, 49, 50, 51], "angl": [0, 1, 2, 6, 7, 8, 9, 10, 11, 32, 35, 36, 42, 43, 44, 48, 49, 50, 51, 52, 53], "0": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65], "phi": [0, 1, 2, 7, 8, 9, 24, 26, 32, 42, 43, 44, 49, 50, 51], "powerdb": [0, 7, 8, 9, 11, 32, 40, 42, 49, 50, 51, 53], "5": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 32, 33, 34, 35, 36, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65], "3d": [0, 1, 2, 7, 8, 9, 12, 19, 20, 27, 28, 31, 32, 38, 42, 43, 44, 49, 50, 51, 54, 61, 63, 64], "viewangl": [0, 1, 2, 7, 8, 9, 32, 42, 43, 44, 49, 50, 51], "10": [0, 2, 3, 5, 6, 7, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 24, 25, 26, 27, 28, 29, 34, 35, 36, 37, 38, 39, 40, 41, 42, 44, 45, 47, 48, 49, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65], "figsiz": [0, 7, 13, 32, 42, 49, 55], "scipi": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 26, 27, 28, 29, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 63, 64, 65], "io": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 27, 28, 29, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 63, 64, 65], "beam": [1, 8, 32, 43, 50], "width": [1, 8, 32, 43, 50], "maximum": [1, 7, 8, 9, 10, 11, 29, 32, 34, 35, 36, 40, 41, 43, 49, 50, 51, 52, 53, 65], "attenu": [1, 8, 32, 35, 43, 50], "30db": [1, 8, 43, 50], "el": [1, 8, 43, 50], "our": [1, 8, 10, 11, 12, 13, 18, 19, 20, 21, 22, 29, 43, 50, 52, 53, 54, 55, 60, 61, 62, 65], "field": [1, 2, 7, 8, 9, 31, 32, 33, 36, 38, 43, 44, 49, 50, 51], "6": [1, 3, 4, 5, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 32, 33, 34, 37, 38, 39, 40, 43, 45, 46, 47, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 61, 62, 63, 64, 65], "again": [1, 6, 8, 11, 13, 43, 48, 50, 53, 55], "howev": [1, 8, 18, 31, 35, 39, 43, 50, 60], "specifi": [1, 8, 11, 13, 18, 19, 20, 27, 28, 29, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 43, 50, 53, 55, 60, 61, 63, 64, 65], "resolut": [1, 7, 8, 43, 49, 50], "degre": [1, 5, 8, 10, 11, 24, 32, 35, 43, 47, 50, 52, 53], "make": [1, 5, 8, 10, 11, 13, 15, 18, 19, 20, 22, 27, 28, 29, 30, 33, 34, 35, 36, 38, 39, 40, 41, 43, 47, 50, 52, 53, 55, 57, 60, 61, 62, 63, 64, 65], "gener": [1, 6, 8, 10, 11, 12, 14, 21, 22, 31, 32, 34, 35, 36, 40, 41, 43, 48, 50, 52, 53, 54, 56, 62, 66], "faster": [1, 8, 34, 36, 37, 38, 43, 50], "also": [1, 3, 5, 6, 8, 11, 13, 18, 22, 24, 29, 32, 33, 34, 35, 36, 38, 39, 40, 41, 43, 45, 47, 48, 50, 53, 55, 60, 62, 65], "coarser": [1, 8, 43, 50], "than": [1, 7, 8, 14, 19, 20, 24, 26, 33, 34, 35, 37, 38, 41, 43, 49, 50, 56, 61], "previou": [1, 8, 19, 20, 21, 22, 43, 50, 61, 62], "one": [1, 6, 7, 8, 11, 12, 15, 16, 17, 18, 19, 20, 22, 23, 24, 26, 29, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 43, 48, 49, 50, 53, 54, 57, 58, 59, 60, 61, 62, 65], "default": [1, 2, 3, 4, 5, 8, 9, 11, 13, 15, 16, 17, 24, 26, 29, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 43, 44, 45, 46, 47, 50, 51, 53, 55, 57, 58, 59, 65], "arang": [1, 8, 25, 26, 39, 43, 50], "180": [1, 7, 8, 9, 10, 11, 12, 24, 26, 32, 43, 49, 50, 51, 52, 53, 54], "between": [2, 5, 7, 8, 9, 10, 29, 30, 32, 34, 35, 36, 38, 41, 44, 47, 49, 50, 51, 52, 65], "5\ud835\udf06": [2, 5, 9, 10, 11, 24, 44, 47, 51, 52, 53], "60": [2, 5, 9, 10, 11, 14, 15, 16, 17, 18, 22, 24, 25, 26, 33, 44, 47, 51, 52, 53, 56, 57, 58, 59, 60, 62], "notebook": [3, 4, 5, 6, 10, 11, 15, 16, 17, 18, 27, 28, 29, 31, 38, 40, 45, 46, 47, 48, 52, 53, 57, 58, 59, 60, 63, 64, 65, 66], "exampl": [3, 13, 15, 16, 17, 29, 31, 32, 34, 35, 36, 38, 39, 40, 41, 45, 55, 57, 58, 59, 65, 66], "18": [3, 10, 11, 13, 19, 20, 22, 24, 25, 26, 27, 29, 45, 52, 53, 55, 61, 62, 63, 65], "row": [3, 4, 5, 10, 11, 13, 24, 32, 35, 40, 45, 46, 47, 52, 53, 55], "38": [3, 4, 13, 17, 19, 20, 22, 24, 25, 26, 28, 29, 31, 32, 33, 34, 35, 36, 37, 38, 40, 41, 45, 46, 55, 59, 61, 62, 64, 65], "211": [3, 4, 17, 26, 29, 31, 33, 34, 36, 37, 38, 40, 45, 46, 59, 65], "tabl": [3, 4, 11, 13, 17, 24, 32, 34, 35, 37, 38, 40, 45, 46, 53, 55, 59], "7": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 19, 20, 21, 22, 24, 25, 26, 29, 32, 34, 35, 36, 37, 38, 39, 40, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 61, 62, 65], "from": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 24, 26, 27, 28, 29, 30, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65], "carrier": [3, 4, 5, 15, 16, 17, 18, 19, 20, 24, 26, 27, 28, 30, 31, 35, 36, 38, 40, 41, 45, 46, 47, 57, 58, 59, 60, 61, 63, 64], "pdsch": [3, 4, 15, 16, 17, 18, 19, 20, 24, 30, 31, 34, 36, 38, 40, 45, 46, 57, 58, 59, 60, 61], "grid": [3, 4, 5, 6, 15, 16, 17, 18, 19, 20, 24, 27, 28, 30, 31, 32, 33, 34, 35, 38, 40, 41, 45, 46, 47, 48, 57, 58, 59, 60, 61, 63, 64], "csirsconfig": [3, 4, 11, 24, 36, 40, 45, 46, 53], "csirsset": [3, 4, 11, 24, 40, 45, 46, 53], "startrb": [3, 4, 5, 11, 13, 15, 16, 17, 24, 26, 29, 33, 36, 40, 45, 46, 47, 53, 55, 57, 58, 59, 65], "numrb": [3, 4, 5, 11, 13, 15, 16, 17, 18, 19, 20, 24, 26, 27, 28, 29, 30, 33, 36, 40, 45, 46, 47, 53, 55, 57, 58, 59, 60, 61, 63, 64, 65], "24": [3, 4, 5, 10, 11, 12, 13, 14, 19, 22, 24, 25, 26, 28, 29, 30, 34, 40, 45, 46, 47, 52, 53, 54, 55, 56, 62, 64, 65], "15": [3, 4, 5, 6, 10, 11, 12, 13, 14, 18, 19, 20, 22, 24, 25, 26, 27, 29, 33, 40, 45, 46, 47, 48, 52, 53, 54, 55, 56, 60, 61, 62, 63, 65], "bwp": [3, 4, 5, 11, 13, 15, 16, 17, 18, 19, 20, 24, 26, 27, 28, 29, 33, 35, 36, 38, 40, 41, 45, 46, 47, 53, 55, 57, 58, 59, 60, 61, 63, 64, 65], "print": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 24, 26, 27, 28, 29, 30, 32, 33, 34, 35, 36, 37, 38, 40, 41, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65], "bandwidth": [3, 4, 5, 11, 13, 15, 16, 17, 18, 19, 20, 24, 27, 28, 29, 31, 35, 36, 38, 40, 41, 45, 46, 47, 53, 55, 57, 58, 59, 60, 61, 63, 64, 65], "part": [3, 4, 5, 11, 13, 15, 16, 17, 18, 19, 20, 24, 27, 28, 29, 31, 32, 35, 36, 39, 40, 41, 45, 46, 47, 53, 55, 57, 58, 59, 60, 61, 63, 64, 65], "properti": [3, 4, 5, 10, 11, 13, 14, 15, 16, 17, 24, 29, 32, 33, 34, 35, 36, 37, 38, 40, 41, 45, 46, 47, 52, 53, 55, 56, 57, 58, 59, 65], "resourc": [3, 4, 5, 15, 16, 17, 18, 19, 20, 24, 27, 28, 30, 31, 33, 34, 35, 38, 40, 41, 45, 46, 47, 57, 58, 59, 60, 61, 63, 64], "block": [3, 4, 5, 11, 12, 14, 15, 16, 17, 19, 20, 21, 22, 24, 28, 30, 31, 33, 34, 36, 37, 38, 40, 45, 46, 47, 53, 54, 56, 57, 58, 59, 61, 62, 64], "rb": [3, 4, 11, 13, 15, 16, 17, 18, 19, 20, 24, 27, 28, 29, 33, 36, 38, 40, 45, 46, 53, 55, 57, 58, 59, 60, 61, 63, 64, 65], "start": [3, 4, 6, 11, 13, 15, 16, 17, 18, 19, 20, 21, 22, 24, 28, 29, 33, 35, 38, 40, 41, 45, 46, 48, 53, 55, 57, 58, 59, 60, 61, 62, 64, 65], "288": [3, 4, 24, 26, 45, 46], "subcarri": [3, 4, 5, 11, 13, 15, 16, 17, 18, 19, 20, 23, 24, 27, 28, 29, 33, 35, 36, 38, 45, 46, 47, 53, 55, 57, 58, 59, 60, 61, 63, 64, 65], "khz": [3, 4, 11, 13, 15, 16, 17, 24, 29, 33, 45, 46, 53, 55, 57, 58, 59, 65], "cp": [3, 4, 11, 13, 15, 16, 17, 24, 29, 41, 45, 46, 53, 55, 57, 58, 59, 65], "4320000": [3, 4, 45, 46], "hz": [3, 4, 5, 10, 11, 13, 15, 16, 17, 24, 29, 30, 33, 35, 45, 46, 47, 52, 53, 55, 57, 58, 59, 65], "symbolsperslot": [3, 4, 11, 13, 15, 16, 17, 24, 29, 33, 35, 36, 45, 46, 53, 55, 57, 58, 59, 65], "14": [3, 4, 5, 8, 9, 10, 11, 12, 13, 15, 16, 17, 19, 21, 22, 24, 25, 26, 28, 29, 33, 45, 46, 47, 50, 51, 52, 53, 54, 55, 57, 58, 59, 62, 64, 65], "slotspersubfram": [3, 4, 11, 13, 15, 16, 17, 24, 29, 33, 36, 45, 46, 53, 55, 57, 58, 59, 65], "nfft": [3, 4, 11, 13, 15, 16, 17, 18, 19, 20, 24, 27, 28, 29, 30, 33, 36, 41, 45, 46, 53, 55, 57, 58, 59, 60, 61, 63, 64, 65], "512": [3, 4, 24, 45, 46], "1st": [3, 12, 24, 35, 45, 54], "port": [3, 4, 11, 13, 15, 18, 19, 20, 23, 24, 36, 38, 40, 45, 46, 53, 55, 57, 60, 61], "12": [3, 5, 7, 9, 11, 12, 13, 14, 15, 16, 17, 21, 22, 24, 25, 26, 27, 28, 29, 33, 36, 40, 45, 47, 49, 51, 53, 54, 55, 56, 57, 58, 59, 62, 63, 64, 65], "bit": [3, 5, 12, 14, 18, 19, 20, 28, 29, 30, 34, 37, 38, 39, 45, 47, 54, 56, 60, 61, 64, 65, 66], "set": [3, 4, 11, 12, 13, 15, 16, 17, 18, 19, 20, 22, 23, 24, 27, 28, 29, 32, 33, 34, 35, 36, 38, 40, 41, 45, 46, 53, 54, 55, 57, 58, 59, 60, 61, 62, 63, 64, 65], "freqmap": [3, 11, 24, 40, 45, 53], "onli": [3, 4, 5, 10, 11, 13, 15, 16, 17, 18, 19, 20, 23, 24, 27, 28, 29, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 45, 46, 47, 52, 53, 55, 57, 58, 59, 60, 61, 63, 64, 65], "valid": [3, 5, 12, 18, 20, 21, 22, 26, 34, 45, 47, 54, 60, 61, 62], "cdm": [3, 15, 23, 24, 29, 36, 40, 45, 57, 65], "size": [3, 10, 11, 13, 14, 15, 16, 17, 19, 20, 24, 25, 26, 28, 29, 30, 31, 32, 33, 34, 35, 36, 38, 39, 40, 41, 45, 52, 53, 55, 56, 57, 58, 59, 61, 64, 65], "densiti": [3, 4, 11, 34, 38, 40, 45, 46, 53], "symbol": [3, 4, 5, 11, 14, 15, 16, 17, 18, 19, 20, 23, 24, 29, 31, 33, 35, 36, 37, 38, 40, 41, 45, 46, 47, 53, 56, 57, 58, 59, 60, 61, 65], "re": [3, 4, 11, 13, 15, 16, 17, 19, 20, 22, 23, 24, 29, 31, 33, 34, 35, 36, 38, 40, 45, 46, 53, 55, 57, 58, 59, 61, 62, 65], "11": [3, 5, 6, 9, 10, 11, 12, 13, 14, 15, 16, 17, 20, 21, 22, 24, 25, 26, 27, 28, 29, 34, 45, 47, 48, 51, 52, 53, 54, 55, 56, 57, 58, 59, 61, 62, 63, 64, 65], "csityp": [3, 24, 40, 45], "nzp": [3, 4, 11, 24, 36, 38, 40, 45, 46, 53], "numport": [3, 4, 11, 24, 26, 33, 36, 40, 41, 45, 46, 53], "000000001000": [3, 40, 45], "creategrid": [3, 4, 5, 11, 18, 19, 20, 24, 33, 45, 46, 47, 53, 60, 61], "populategrid": [3, 4, 11, 13, 18, 19, 20, 24, 27, 28, 29, 30, 38, 40, 45, 46, 53, 55, 60, 61, 63, 64, 65], "stat": [3, 5, 11, 13, 24, 29, 45, 47, 53, 55, 65], "getstat": [3, 5, 11, 13, 15, 16, 17, 24, 29, 36, 45, 47, 53, 55, 57, 58, 59, 65], "kei": [3, 11, 13, 24, 29, 36, 45, 53, 55, 65], "item": [3, 11, 13, 22, 24, 29, 35, 36, 40, 45, 53, 55, 62, 65], "": [3, 5, 6, 10, 11, 13, 15, 18, 19, 20, 21, 22, 24, 25, 26, 27, 28, 29, 34, 35, 36, 37, 38, 39, 40, 41, 45, 47, 48, 52, 53, 55, 57, 60, 61, 62, 63, 64, 65, 66], "d": [3, 4, 6, 10, 11, 13, 18, 19, 20, 24, 26, 29, 32, 34, 35, 36, 37, 38, 45, 46, 48, 52, 53, 55, 60, 61, 65], "drawmap": [3, 4, 11, 13, 15, 16, 17, 24, 29, 36, 45, 46, 53, 55, 57, 58, 59, 65], "rang": [3, 4, 11, 18, 19, 20, 22, 24, 26, 27, 28, 32, 35, 36, 40, 45, 46, 53, 60, 61, 62, 63, 64], "rerang": [3, 4, 13, 15, 16, 17, 24, 36, 45, 46, 55, 57, 58, 59], "36": [3, 4, 13, 19, 21, 22, 24, 25, 26, 29, 45, 46, 55, 62, 65], "id": [3, 4, 11, 13, 15, 16, 17, 21, 29, 45, 46, 53, 55, 57, 58, 59, 65], "period": [3, 4, 11, 40, 45, 46, 53], "slot": [3, 4, 11, 15, 16, 17, 18, 19, 20, 24, 27, 31, 33, 35, 36, 38, 40, 45, 46, 53, 57, 58, 59, 60, 61, 63], "resourceid": [3, 4, 11, 40, 45, 46, 53], "cdmsize": [3, 4, 11, 40, 45, 46, 53], "nocdm": [3, 40, 45], "index": [3, 4, 5, 11, 13, 16, 17, 18, 19, 20, 23, 24, 26, 27, 28, 29, 30, 31, 33, 34, 35, 36, 38, 40, 41, 45, 46, 47, 53, 55, 58, 59, 60, 61, 63, 64, 65], "offset": [3, 4, 5, 11, 18, 19, 20, 24, 27, 28, 29, 30, 35, 36, 40, 45, 46, 47, 53, 60, 61, 63, 64, 65], "db": [3, 4, 5, 7, 9, 10, 11, 13, 14, 15, 16, 17, 18, 19, 20, 24, 27, 28, 29, 32, 35, 36, 40, 41, 45, 46, 47, 49, 51, 52, 53, 55, 56, 57, 58, 59, 60, 61, 63, 64, 65], "scramblingid": [3, 4, 11, 40, 45, 46, 53], "gridsiz": [3, 11, 13, 15, 16, 17, 24, 29, 45, 53, 55, 57, 58, 59, 65], "4032": [3, 45], "unassign": [3, 5, 11, 15, 16, 17, 24, 36, 38, 45, 47, 53, 57, 58, 59], "3960": [3, 45], "csirs_nzp": [3, 11, 24, 36, 38, 45, 53], "72": [3, 5, 19, 20, 22, 24, 26, 28, 45, 47, 61, 62, 64], "2nd": [3, 45], "everi": [3, 11, 17, 18, 32, 33, 37, 40, 45, 53, 59, 60], "other": [3, 11, 15, 17, 22, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 45, 53, 57, 59, 62], "skip": [3, 11, 21, 22, 29, 45, 53, 62, 65], "addcsir": [3, 40, 45], "1000": [3, 6, 10, 18, 35, 40, 45, 48, 52, 60], "4020": [3, 45], "4008": [3, 45], "3rd": [3, 4, 16, 45, 46, 58], "000001": [3, 22, 45, 62], "fd": [3, 4, 11, 40, 45, 46, 53], "cdm2": [3, 4, 11, 40, 45, 46, 53], "8064": [3, 45], "8016": [3, 45], "48": [3, 5, 13, 22, 24, 25, 26, 29, 45, 47, 55, 62, 65], "8": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 31, 32, 33, 34, 37, 38, 39, 40, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 67], "001000": [3, 11, 45, 53], "7968": [3, 45], "96": [3, 22, 24, 26, 28, 45, 62, 64], "9": [3, 5, 8, 10, 11, 12, 13, 14, 15, 16, 17, 20, 21, 22, 23, 24, 25, 26, 28, 29, 34, 39, 45, 47, 50, 52, 53, 54, 55, 56, 57, 58, 59, 61, 62, 64, 65], "4th": [3, 45], "next": [3, 18, 19, 20, 21, 22, 27, 29, 32, 33, 34, 35, 40, 45, 60, 61, 62, 63, 65], "010": [3, 21, 24, 45], "16128": [3, 45], "15936": [3, 45], "192": [3, 24, 45], "5th": [3, 45], "000010": [3, 22, 45, 62], "6th": [3, 45], "101101": [3, 45], "32256": [3, 45], "31872": [3, 45], "384": [3, 24, 26, 45], "7th": [3, 45], "010010": [3, 45], "13": [3, 5, 7, 10, 11, 12, 13, 14, 15, 16, 17, 19, 20, 22, 24, 25, 26, 27, 28, 29, 45, 47, 49, 52, 53, 54, 55, 56, 57, 58, 59, 61, 62, 63, 64, 65], "8th": [3, 45], "cdm4": [3, 40, 45], "fd2": [3, 40, 45], "td2": [3, 40, 45], "31488": [3, 45], "768": [3, 26, 45], "9th": [3, 45], "48384": [3, 45], "47808": [3, 45], "576": [3, 24, 26, 45], "10th": [3, 45], "101010": [3, 45], "47232": [3, 45], "1152": [3, 26, 45], "16": [3, 5, 6, 8, 9, 10, 11, 12, 13, 14, 20, 21, 22, 24, 25, 26, 28, 29, 30, 34, 40, 45, 47, 48, 50, 51, 52, 53, 54, 55, 56, 61, 62, 64, 65], "11th": [3, 45], "allow": [3, 31, 32, 36, 40, 45], "which": [3, 11, 13, 15, 17, 18, 19, 20, 27, 29, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 45, 53, 55, 57, 59, 60, 61, 63, 65], "would": [3, 15, 45, 57], "caus": [3, 38, 45], "csr": [3, 45], "alloc": [3, 11, 16, 17, 29, 33, 36, 38, 40, 45, 53, 58, 59, 65], "110011": [3, 45], "64512": [3, 45], "63744": [3, 45], "17": [3, 5, 9, 10, 11, 12, 13, 19, 20, 22, 24, 25, 26, 27, 28, 29, 38, 45, 47, 51, 52, 53, 54, 55, 61, 62, 63, 64, 65], "12th": [3, 45], "62976": [3, 45], "1536": [3, 26, 45], "13th": [3, 45], "96768": [3, 45], "95616": [3, 45], "19": [3, 13, 22, 24, 25, 26, 28, 29, 45, 55, 62, 64, 65], "14th": [3, 45], "94464": [3, 45], "2304": [3, 26, 45], "20": [3, 5, 6, 7, 8, 10, 11, 13, 18, 19, 20, 22, 24, 25, 26, 27, 28, 29, 30, 32, 40, 45, 47, 48, 49, 50, 52, 53, 55, 60, 61, 62, 63, 64, 65], "15th": [3, 45], "cdm8": [3, 40, 45], "td4": [3, 40, 45], "92160": [3, 45], "4608": [3, 45], "21": [3, 5, 7, 10, 11, 13, 20, 22, 24, 25, 26, 29, 45, 47, 49, 52, 53, 55, 61, 62, 65], "16th": [3, 45], "32": [3, 13, 21, 22, 24, 25, 26, 29, 35, 40, 45, 55, 62, 65], "129024": [3, 45], "127488": [3, 45], "22": [3, 5, 7, 10, 11, 12, 13, 22, 24, 25, 26, 29, 32, 34, 45, 47, 49, 52, 53, 54, 55, 62, 65], "17th": [3, 45], "125952": [3, 45], "3072": [3, 35, 45], "23": [3, 5, 7, 10, 11, 13, 19, 20, 22, 24, 25, 26, 27, 29, 45, 47, 49, 52, 53, 55, 61, 62, 63, 65], "18th": [3, 45], "122880": [3, 45], "6144": [3, 45], "domain": [4, 5, 10, 11, 13, 18, 19, 20, 27, 28, 30, 31, 35, 36, 40, 41, 46, 47, 52, 53, 55, 60, 61, 63, 64], "etc": [4, 35, 36, 46], "contain": [4, 11, 18, 19, 20, 22, 29, 32, 33, 34, 35, 36, 38, 39, 40, 41, 46, 53, 60, 61, 62, 65], "slotno": [4, 11, 18, 19, 20, 27, 28, 33, 38, 46, 53, 60, 61, 63, 64], "titl": [4, 6, 13, 16, 17, 19, 20, 27, 28, 32, 33, 34, 35, 36, 37, 38, 40, 41, 46, 48, 55, 58, 59, 61, 63, 64], "map": [4, 15, 16, 17, 18, 19, 20, 24, 27, 28, 31, 36, 38, 40, 46, 57, 58, 59, 60, 61, 63, 64], "same": [4, 6, 7, 10, 11, 13, 15, 16, 20, 22, 23, 24, 25, 26, 29, 32, 34, 35, 36, 38, 39, 40, 41, 46, 48, 49, 52, 53, 55, 57, 58, 61, 62, 65], "befor": [4, 11, 12, 13, 15, 16, 17, 24, 29, 32, 34, 35, 36, 38, 46, 53, 54, 55, 57, 58, 59, 65], "wai": [5, 10, 11, 35, 38, 39, 40, 47, 52, 53], "calcul": [5, 10, 11, 14, 18, 19, 20, 25, 26, 29, 31, 32, 34, 35, 36, 37, 38, 40, 41, 47, 52, 53, 56, 60, 61, 65, 66], "compar": [5, 6, 17, 19, 20, 27, 28, 30, 32, 35, 36, 39, 47, 48, 59, 61, 63, 64], "applic": [5, 35, 47], "v": [5, 17, 24, 25, 26, 36, 47, 59], "frequenc": [5, 11, 18, 19, 20, 24, 27, 28, 31, 32, 35, 36, 38, 40, 41, 47, 53, 60, 61, 63, 64], "modem": [5, 14, 28, 29, 30, 37, 38, 47, 56, 64, 65], "cdlchannel": [5, 6, 10, 11, 13, 18, 19, 20, 24, 27, 28, 29, 30, 35, 47, 48, 52, 53, 55, 60, 61, 63, 64, 65], "random": [5, 6, 11, 12, 14, 18, 19, 20, 27, 28, 29, 30, 35, 36, 40, 41, 47, 48, 53, 54, 56, 60, 61, 63, 64, 65], "setse": [5, 6, 18, 19, 20, 27, 28, 29, 30, 39, 47, 48, 60, 61, 63, 64, 65], "123": [5, 6, 10, 11, 18, 19, 20, 26, 27, 28, 29, 30, 39, 47, 48, 52, 53, 60, 61, 63, 64, 65], "result": [5, 6, 7, 8, 9, 18, 19, 20, 22, 27, 28, 29, 30, 32, 34, 35, 36, 38, 39, 41, 47, 48, 49, 50, 51, 60, 61, 62, 63, 64, 65, 66], "reproduc": [5, 19, 20, 27, 28, 29, 30, 39, 47, 61, 63, 64, 65], "25": [5, 7, 10, 11, 13, 18, 19, 20, 22, 24, 25, 26, 27, 29, 38, 41, 47, 49, 52, 53, 55, 60, 61, 62, 63, 65], "crrier": [5, 47], "15khz": [5, 11, 47, 53], "curbwp": [5, 15, 16, 17, 18, 19, 20, 26, 27, 28, 29, 30, 33, 47, 57, 58, 59, 60, 61, 63, 64, 65], "txgrid": [5, 11, 47, 53], "numplan": [5, 33, 36, 47], "empti": [5, 18, 19, 20, 33, 34, 38, 40, 47, 60, 61], "get": [5, 6, 10, 11, 13, 15, 16, 17, 18, 19, 20, 21, 22, 24, 27, 28, 29, 30, 32, 34, 35, 36, 37, 38, 40, 41, 47, 48, 52, 53, 55, 57, 58, 59, 60, 61, 62, 63, 64, 65], "statist": [5, 10, 11, 15, 16, 17, 29, 35, 36, 47, 52, 53, 57, 58, 59, 65], "about": [5, 11, 13, 15, 16, 17, 18, 29, 32, 35, 36, 39, 47, 53, 55, 57, 58, 59, 60, 65], "16qam": [5, 13, 15, 16, 17, 18, 19, 20, 27, 28, 29, 34, 37, 38, 47, 55, 57, 58, 59, 60, 61, 63, 64, 65], "modul": [5, 12, 14, 15, 16, 17, 18, 19, 20, 21, 22, 27, 28, 30, 31, 33, 34, 35, 36, 38, 39, 40, 41, 47, 54, 56, 57, 58, 59, 60, 61, 62, 63, 64], "numrandombit": [5, 47], "qm": [5, 28, 34, 37, 38, 47, 64], "total": [5, 10, 11, 13, 18, 19, 20, 21, 24, 27, 28, 29, 32, 33, 34, 38, 47, 52, 53, 55, 60, 61, 63, 64, 65], "number": [5, 6, 10, 11, 13, 14, 18, 19, 20, 21, 22, 27, 28, 29, 30, 32, 33, 34, 35, 36, 37, 38, 40, 41, 47, 48, 52, 53, 55, 56, 60, 61, 62, 63, 64, 65], "avail": [5, 11, 13, 15, 18, 19, 20, 22, 27, 28, 29, 30, 31, 33, 34, 35, 38, 40, 41, 47, 53, 55, 57, 60, 61, 62, 63, 64, 65, 66], "getreindex": [5, 18, 19, 20, 24, 27, 28, 29, 30, 36, 38, 47, 60, 61, 63, 64, 65], "put": [5, 24, 29, 40, 47, 65], "txwaveform": [5, 6, 10, 11, 13, 18, 19, 20, 24, 27, 28, 29, 30, 47, 48, 52, 53, 55, 60, 61, 63, 64, 65], "ofdmmodul": [5, 11, 13, 18, 19, 20, 24, 27, 28, 29, 30, 36, 41, 47, 53, 55, 60, 61, 63, 64, 65], "ofdm": [5, 17, 18, 19, 20, 27, 28, 30, 31, 33, 35, 36, 38, 40, 41, 47, 59, 60, 61, 63, 64], "waveform": [5, 24, 30, 35, 36, 47, 66], "shape": [5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 18, 19, 20, 21, 22, 24, 25, 26, 29, 32, 35, 36, 37, 38, 39, 41, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 60, 61, 62, 65], "300": [5, 11, 18, 19, 20, 24, 26, 27, 28, 29, 30, 35, 47, 53, 60, 61, 63, 64, 65], "9216": [5, 47], "cdl": [5, 6, 24, 29, 30, 31, 32, 47, 48, 65], "c": [5, 6, 10, 18, 19, 20, 24, 26, 27, 28, 29, 30, 34, 35, 36, 41, 47, 48, 52, 60, 61, 63, 64, 65], "model": [5, 6, 18, 19, 20, 24, 27, 31, 32, 36, 38, 41, 47, 48, 60, 61, 63], "300n": [5, 24, 47], "delai": [5, 11, 18, 19, 20, 24, 27, 28, 29, 30, 35, 41, 47, 53, 60, 61, 63, 64, 65], "spread": [5, 10, 11, 24, 29, 35, 47, 52, 53, 65], "4ghz": [5, 24, 47], "5hz": [5, 24, 47], "doppler": [5, 6, 10, 24, 29, 35, 47, 48, 52, 65], "shift": [5, 6, 10, 13, 15, 16, 17, 24, 29, 35, 41, 47, 48, 52, 55, 57, 58, 59, 65], "delayspread": [5, 6, 10, 11, 18, 19, 20, 24, 27, 28, 29, 30, 35, 47, 48, 52, 53, 60, 61, 63, 64, 65], "carrierfreq": [5, 6, 10, 11, 18, 19, 20, 24, 27, 28, 29, 30, 35, 47, 48, 52, 53, 60, 61, 63, 64, 65], "4e9": [5, 6, 10, 11, 18, 19, 20, 24, 27, 28, 29, 30, 47, 48, 52, 53, 60, 61, 63, 64, 65], "dopplershift": [5, 6, 10, 11, 18, 19, 20, 24, 27, 28, 29, 30, 35, 47, 48, 52, 53, 60, 61, 63, 64, 65], "txantenna": [5, 6, 10, 11, 18, 19, 20, 24, 26, 27, 28, 29, 30, 35, 47, 48, 52, 53, 60, 61, 63, 64, 65], "tx": [5, 10, 11, 13, 18, 19, 20, 24, 27, 28, 29, 30, 47, 52, 53, 55, 60, 61, 63, 64, 65], "antenna": [5, 6, 10, 11, 13, 18, 19, 20, 24, 26, 27, 28, 29, 30, 31, 35, 36, 38, 40, 41, 47, 48, 52, 53, 55, 60, 61, 63, 64, 65], "rxantenna": [5, 6, 10, 11, 18, 19, 20, 24, 27, 28, 29, 30, 35, 47, 48, 52, 53, 60, 61, 63, 64, 65], "rx": [5, 10, 11, 14, 18, 19, 20, 24, 27, 28, 29, 30, 47, 52, 53, 56, 60, 61, 63, 64, 65], "nearest": [5, 6, 18, 19, 20, 24, 27, 28, 35, 36, 41, 47, 48, 60, 61, 63, 64], "neighbor": [5, 23, 24, 32, 35, 36, 47], "interpol": [5, 6, 19, 20, 24, 27, 28, 29, 35, 36, 47, 48, 61, 63, 64, 65], "try": [5, 6, 20, 24, 47, 48, 61], "linear": [5, 6, 19, 20, 24, 27, 28, 32, 35, 36, 47, 48, 61, 63, 64], "n": [5, 6, 10, 11, 13, 14, 18, 21, 24, 25, 26, 29, 30, 32, 33, 34, 35, 37, 38, 40, 41, 47, 48, 52, 53, 55, 56, 60, 65], "4000000000": [5, 10, 11, 24, 47, 52, 53], "normalizegain": [5, 10, 11, 24, 35, 47, 52, 53], "normalizeoutput": [5, 10, 11, 24, 35, 47, 52, 53], "txdir": [5, 10, 11, 24, 35, 47, 52, 53], "downlink": [5, 10, 11, 24, 29, 33, 34, 35, 36, 40, 47, 52, 53, 65], "coherencetim": [5, 10, 11, 24, 35, 47, 52, 53], "084628": [5, 47], "sec": [5, 10, 11, 18, 19, 20, 21, 24, 27, 28, 47, 52, 53, 60, 61, 63, 64], "uediraz": [5, 10, 11, 24, 35, 47, 52, 53], "pathdelai": [5, 10, 11, 24, 35, 47, 52, 53], "0000": [5, 10, 11, 24, 47, 52, 53], "62": [5, 21, 22, 47, 62], "970": [5, 47], "66": [5, 22, 26, 27, 47, 62, 63], "570": [5, 47], "69": [5, 22, 24, 28, 47, 62, 64], "870": [5, 47], "280": [5, 24, 26, 47], "190": [5, 47], "98": [5, 10, 11, 22, 24, 26, 47, 52, 53, 62], "193": [5, 24, 47], "44": [5, 13, 19, 20, 22, 24, 25, 26, 27, 29, 47, 55, 61, 62, 63, 65], "196": [5, 24, 47], "80": [5, 6, 10, 11, 19, 20, 22, 24, 26, 27, 35, 40, 47, 48, 52, 53, 61, 62, 63], "197": [5, 24, 47], "52": [5, 13, 22, 24, 25, 26, 28, 47, 55, 62, 64], "238": [5, 47], "05": [5, 6, 11, 26, 47, 48, 53], "246": [5, 47], "39": [5, 6, 13, 15, 16, 17, 20, 21, 22, 24, 25, 26, 29, 47, 48, 55, 57, 58, 59, 61, 62, 65], "08": [5, 19, 47], "368": [5, 24, 47], "55": [5, 9, 10, 22, 25, 26, 28, 47, 51, 52, 62, 64], "392": [5, 24, 47], "49": [5, 13, 20, 22, 24, 25, 26, 29, 47, 55, 61, 62, 65], "651": [5, 47], "813": [5, 47], "1277": [5, 47], "1380": [5, 47], "1647": [5, 47], "1682": [5, 47], "1891": [5, 47], "1991": [5, 47], "2112": [5, 26, 47], "2595": [5, 47], "pathpow": [5, 10, 11, 24, 35, 47, 52, 53], "400": [5, 21, 24, 26, 35, 47], "200": [5, 10, 11, 24, 47, 52, 53], "500": [5, 24, 47], "900": [5, 26, 47], "100": [5, 11, 18, 19, 20, 22, 24, 27, 28, 35, 47, 53, 60, 61, 62, 63, 64], "70": [5, 6, 10, 11, 22, 24, 26, 47, 48, 52, 53, 62], "800": [5, 15, 16, 17, 26, 47, 57, 58, 59], "700": [5, 26, 47], "00": [5, 10, 11, 24, 26, 27, 28, 47, 52, 53, 63, 64], "aod": [5, 10, 11, 24, 35, 47, 52, 53], "47": [5, 7, 13, 22, 25, 26, 27, 29, 47, 49, 55, 62, 63, 65], "41": [5, 13, 19, 20, 22, 24, 25, 26, 29, 47, 55, 61, 62, 65], "73": [5, 10, 11, 19, 20, 22, 24, 47, 52, 53, 61, 62], "64": [5, 10, 11, 19, 20, 21, 22, 24, 26, 39, 40, 47, 52, 53, 61, 62], "97": [5, 10, 11, 22, 24, 26, 47, 52, 53, 62], "78": [5, 10, 11, 20, 22, 24, 26, 27, 47, 52, 53, 61, 62, 63], "103": [5, 47], "99": [5, 18, 19, 22, 28, 47, 60, 62, 64], "89": [5, 10, 11, 22, 24, 47, 52, 53, 62], "102": [5, 47], "92": [5, 22, 24, 28, 34, 47, 62, 64], "93": [5, 19, 20, 22, 24, 47, 61, 62], "107": [5, 47], "119": [5, 47], "124": [5, 21, 24, 47], "aoa": [5, 10, 11, 24, 35, 47, 52, 53], "101": [5, 24, 26, 31, 35, 47], "120": [5, 7, 9, 10, 11, 14, 24, 33, 34, 47, 49, 51, 52, 53, 56], "128": [5, 10, 11, 14, 15, 16, 17, 21, 24, 26, 47, 52, 53, 56, 57, 58, 59], "170": [5, 47], "68": [5, 12, 18, 20, 22, 24, 47, 54, 60, 61, 62], "82": [5, 10, 11, 22, 24, 27, 47, 52, 53, 62, 63], "31": [5, 13, 20, 22, 25, 26, 28, 29, 47, 55, 61, 62, 64, 65], "34": [5, 12, 13, 18, 19, 20, 22, 24, 25, 26, 27, 28, 29, 47, 54, 55, 60, 61, 62, 63, 64, 65], "zod": [5, 10, 11, 24, 35, 47, 52, 53], "105": [5, 24, 47], "95": [5, 7, 8, 9, 19, 22, 47, 49, 50, 51, 62], "106": [5, 47], "94": [5, 10, 11, 19, 22, 24, 47, 52, 53, 62], "104": [5, 10, 11, 24, 31, 35, 36, 41, 47, 52, 53], "108": [5, 24, 47], "zoa": [5, 10, 11, 24, 35, 47, 52, 53], "88": [5, 10, 11, 19, 22, 24, 26, 47, 52, 53, 62], "75": [5, 20, 22, 28, 35, 47, 61, 62, 64], "67": [5, 18, 19, 22, 26, 47, 60, 62], "71": [5, 10, 11, 22, 24, 25, 26, 27, 47, 52, 53, 62, 63], "91": [5, 10, 11, 20, 22, 24, 47, 52, 53, 61, 62], "61": [5, 19, 20, 22, 24, 34, 47, 61, 62], "53": [5, 9, 10, 11, 22, 24, 25, 26, 28, 47, 51, 52, 53, 62, 64], "58": [5, 22, 25, 26, 28, 47, 62, 64], "57": [5, 22, 24, 25, 26, 47, 62], "haslo": [5, 10, 11, 24, 35, 47, 52, 53], "cross": [5, 10, 11, 24, 35, 47, 52, 53], "pol": [5, 10, 11, 24, 47, 52, 53], "anglespread": [5, 6, 10, 11, 24, 35, 47, 48, 52, 53], "x": [5, 6, 10, 11, 12, 14, 18, 19, 20, 22, 23, 24, 25, 26, 29, 30, 32, 34, 35, 36, 37, 38, 40, 41, 47, 48, 52, 53, 54, 56, 60, 61, 62, 65], "column": [5, 10, 11, 12, 24, 32, 35, 40, 47, 52, 53, 54], "taper": [5, 10, 11, 24, 32, 47, 52, 53], "filter": [5, 6, 10, 11, 24, 35, 36, 47, 48, 52, 53], "filterdelai": [5, 10, 11, 24, 35, 47, 52, 53], "sampl": [5, 6, 10, 11, 13, 18, 21, 22, 24, 29, 33, 35, 36, 41, 47, 48, 52, 53, 55, 60, 62, 65], "numtxantenna": [5, 10, 11, 13, 24, 47, 52, 53, 55], "numpath": [5, 10, 11, 24, 47, 52, 53], "filterlen": [5, 10, 11, 24, 47, 52, 53], "numinterpol": [5, 10, 11, 24, 47, 52, 53], "50": [5, 10, 11, 13, 22, 24, 25, 26, 28, 29, 33, 47, 52, 53, 55, 62, 64, 65], "stopbandatten": [5, 10, 11, 24, 35, 47, 52, 53], "t0": [5, 6, 7, 9, 18, 19, 20, 22, 27, 28, 47, 48, 49, 51, 60, 61, 62, 63, 64], "experiment": [5, 47], "verif": [5, 47], "debug": [5, 33, 35, 36, 38, 47], "It": [5, 11, 18, 19, 20, 22, 23, 24, 26, 29, 31, 32, 33, 34, 35, 36, 38, 39, 40, 41, 47, 53, 60, 61, 62, 65], "fake": [5, 47], "appli": [5, 6, 12, 13, 14, 18, 19, 20, 24, 27, 28, 30, 31, 32, 34, 35, 36, 38, 41, 47, 48, 54, 55, 56, 60, 61, 63, 64], "demodul": [5, 14, 18, 19, 20, 27, 28, 30, 31, 34, 36, 37, 38, 40, 41, 47, 56, 60, 61, 63, 64], "slowest": [5, 47], "closest": [5, 47], "effect": [5, 14, 18, 29, 31, 35, 36, 41, 47, 56, 60, 65], "channelmatrixtd0": [5, 47], "getchannelmatrixtdexp": [5, 47], "t1": [5, 47], "gain": [5, 6, 31, 32, 35, 47, 48], "channelmatrixtd1": [5, 47], "getchannelmatrix": [5, 11, 18, 19, 20, 24, 27, 28, 29, 30, 35, 38, 47, 53, 60, 61, 63, 64, 65], "timedomain": [5, 11, 24, 35, 47, 53], "interpolatetim": [5, 35, 47], "t2": [5, 47], "without": [5, 15, 29, 31, 32, 34, 36, 39, 40, 47, 57, 65], "directli": [5, 11, 29, 35, 36, 38, 40, 41, 47, 53, 65], "config": [5, 15, 16, 35, 47, 57, 58], "channelmatrixtd2": [5, 47], "t3": [5, 47], "No": [5, 22, 24, 28, 39, 47, 62, 64], "channelmatrixfd": [5, 47], "t4": [5, 47], "07905101776123047": [5, 47], "00852756": [5, 47], "12739031j": [5, 47], "00853205": [5, 47], "12739179j": [5, 47], "00867352": [5, 47], "1274171j": [5, 47], "00908709": [5, 47], "12725874j": [5, 47], "00908488": [5, 47], "12725828j": [5, 47], "0090826": [5, 47], "12725726j": [5, 47], "00920746": [5, 47], "12729786j": [5, 47], "00964038": [5, 47], "12712568j": [5, 47], "00963817": [5, 47], "12712521j": [5, 47], "004191875457763672": [5, 47], "00907741": [5, 47], "12725851j": [5, 47], "00962556": [5, 47], "12712669j": [5, 47], "0034291744232177734": [5, 47], "00854752": [5, 47], "12738554j": [5, 47], "00862589": [5, 47], "12736677j": [5, 47], "00870423": [5, 47], "12734801j": [5, 47], "00878253": [5, 47], "12732925j": [5, 47], "0088608": [5, 47], "12731048j": [5, 47], "00893904": [5, 47], "12729172j": [5, 47], "00901724": [5, 47], "12727295j": [5, 47], "00909731": [5, 47], "12725373j": [5, 47], "00917544": [5, 47], "12723497j": [5, 47], "00925354": [5, 47], "1272162j": [5, 47], "0093316": [5, 47], "12719743j": [5, 47], "00940962": [5, 47], "12717867j": [5, 47], "00948761": [5, 47], "1271599j": [5, 47], "00956557": [5, 47], "12714113j": [5, 47], "005882978439331055": [5, 47], "18121375": [5, 47], "0519848j": [5, 47], "18111617": [5, 47], "05204777j": [5, 47], "18101976": [5, 47], "05210998j": [5, 47], "18092332": [5, 47], "05217218j": [5, 47], "18082688": [5, 47], "05223438j": [5, 47], "18073041": [5, 47], "05229657j": [5, 47], "18063394": [5, 47], "05235875j": [5, 47], "18053627": [5, 47], "05242169j": [5, 47], "18043859": [5, 47], "05248462j": [5, 47], "18034207": [5, 47], "05254679j": [5, 47], "18024553": [5, 47], "05260894j": [5, 47], "18014899": [5, 47], "0526711j": [5, 47], "18005242": [5, 47], "05273324j": [5, 47], "17995584": [5, 47], "05279538j": [5, 47], "receiv": [5, 11, 18, 19, 20, 21, 22, 24, 29, 34, 35, 36, 37, 38, 40, 41, 47, 53, 60, 61, 62, 65], "rxgrid": [5, 11, 18, 19, 20, 24, 27, 28, 29, 30, 38, 47, 53, 60, 61, 63, 64, 65], "maxdelai": [5, 11, 18, 19, 20, 24, 27, 28, 29, 30, 47, 53, 60, 61, 63, 64, 65], "getmaxdelai": [5, 11, 18, 19, 20, 24, 27, 28, 29, 30, 35, 41, 47, 53, 60, 61, 63, 64, 65], "max": [5, 6, 7, 8, 9, 10, 11, 13, 14, 18, 19, 20, 23, 24, 27, 28, 29, 32, 34, 37, 38, 47, 48, 49, 50, 51, 52, 53, 55, 56, 60, 61, 63, 64, 65], "paddedtxwaveform": [5, 47], "pad": [5, 11, 12, 18, 19, 20, 22, 24, 27, 28, 29, 30, 35, 41, 47, 53, 54, 60, 61, 62, 63, 64, 65], "rxwaveform": [5, 10, 11, 18, 19, 20, 24, 27, 28, 29, 30, 36, 47, 52, 53, 60, 61, 63, 64, 65], "applytosign": [5, 6, 10, 11, 18, 19, 20, 24, 27, 28, 29, 30, 35, 41, 47, 48, 52, 53, 60, 61, 63, 64, 65], "gettimingoffset": [5, 11, 18, 19, 20, 24, 27, 28, 29, 30, 35, 41, 47, 53, 60, 61, 63, 64, 65], "synchron": [5, 18, 19, 20, 27, 28, 30, 35, 36, 47, 60, 61, 63, 64], "syncedwaveform": [5, 11, 18, 19, 20, 24, 27, 28, 29, 30, 47, 53, 60, 61, 63, 64, 65], "sync": [5, 11, 18, 19, 20, 24, 27, 28, 29, 30, 35, 36, 41, 47, 53, 60, 61, 63, 64, 65], "ofdmdemodul": [5, 11, 18, 19, 20, 24, 27, 28, 29, 30, 36, 41, 47, 53, 60, 61, 63, 64, 65], "rxgridtd0": [5, 47], "applychannel": [5, 18, 19, 20, 27, 28, 29, 35, 36, 41, 47, 60, 61, 63, 64, 65], "mse": [5, 11, 21, 22, 24, 47, 53, 62], "squar": [5, 11, 18, 19, 20, 24, 25, 26, 27, 29, 36, 47, 53, 60, 61, 63, 65], "ab": [5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 19, 20, 24, 25, 26, 27, 28, 29, 30, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 61, 63, 64, 65], "mean": [5, 10, 11, 15, 17, 24, 27, 29, 32, 33, 34, 35, 36, 37, 38, 40, 41, 47, 52, 53, 57, 59, 63, 65], "rxgridtd1": [5, 47], "rxgridtd2": [5, 47], "rxgridfd": [5, 47], "amp": [5, 47], "3647531619647926e": [5, 47], "07": [5, 11, 47, 53], "399270605372296e": [5, 47], "893382278673798e": [5, 47], "39108756885752305": [5, 47], "studi": [6, 31, 32, 48], "characterist": [6, 48], "princip": [6, 48], "tdl": [6, 31, 48], "speedkmh": [6, 10, 48, 52], "speed": [6, 10, 35, 48, 52], "ue": [6, 10, 15, 29, 35, 36, 38, 40, 48, 52, 57, 65], "devic": [6, 10, 15, 19, 20, 22, 48, 52, 57, 61, 62], "km": [6, 10, 35, 48, 52], "h": [6, 10, 25, 26, 35, 48, 52], "3600": [6, 10, 48, 52], "299792458": [6, 10, 48, 52], "light": [6, 10, 48, 52], "f": [6, 11, 13, 22, 26, 32, 36, 48, 53, 55, 62], "ghz": [6, 10, 30, 35, 48, 52], "timingmethod": [6, 48], "matlab": [6, 26, 32, 35, 39, 48], "matlabord": [6, 10, 11, 32, 48, 52, 53], "txantennaorient": [6, 48], "anglemean": [6, 48], "130": [6, 7, 8, 9, 10, 11, 48, 49, 50, 51, 52, 53], "110": [6, 7, 10, 11, 48, 49, 52, 53], "scale": [6, 10, 11, 13, 29, 35, 36, 38, 48, 52, 53, 55, 65], "seed": [6, 10, 11, 18, 19, 20, 27, 28, 35, 39, 48, 52, 53, 60, 61, 63, 64], "repeat": [6, 32, 34, 35, 48], "numsampl": [6, 10, 22, 35, 48, 52, 62], "int": [6, 10, 18, 20, 22, 26, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 48, 52, 60, 61, 62], "sampler": [6, 10, 33, 35, 48, 52], "001": [6, 10, 21, 24, 48, 52], "subfram": [6, 10, 31, 33, 48, 52], "channeltim": [6, 35, 48], "getchanneltim": [6, 48], "channelgain": [6, 48], "getchannelgain": [6, 48], "nc": [6, 18, 48, 60], "nt": [6, 10, 25, 26, 29, 35, 36, 38, 41, 48, 52, 65], "upsampl": [6, 35, 48], "execut": [6, 7, 8, 9, 10, 11, 12, 13, 14, 36, 48, 49, 50, 51, 52, 53, 54, 55, 56], "4f": [6, 48], "matplotlib": [6, 11, 13, 19, 20, 27, 28, 32, 48, 53, 55, 61, 63, 64], "pyplot": [6, 11, 13, 19, 20, 27, 28, 48, 53, 55, 61, 63, 64], "plt": [6, 11, 13, 19, 20, 27, 28, 48, 53, 55, 61, 63, 64], "pp": [6, 18, 19, 20, 34, 48, 60, 61], "enumer": [6, 18, 19, 20, 22, 27, 28, 48, 60, 61, 62, 63, 64], "plot": [6, 13, 19, 20, 27, 28, 48, 55, 61, 63, 64], "real": [6, 18, 19, 20, 25, 26, 27, 34, 48, 60, 61, 63], "label": [6, 18, 19, 20, 22, 27, 28, 48, 60, 61, 62, 63, 64], "legend": [6, 19, 20, 27, 28, 48, 61, 63, 64], "pair": [6, 11, 18, 24, 32, 34, 48, 53, 60], "path": [6, 19, 21, 29, 35, 41, 48, 65], "imag": [6, 18, 19, 20, 27, 32, 48, 60, 61, 63], "imaginari": [6, 19, 20, 48, 61], "magnitud": [6, 11, 13, 25, 26, 36, 48, 53, 55], "1457": [6, 48], "2356": [6, 48], "0185": [6, 48], "check": [6, 10, 12, 14, 20, 22, 30, 34, 38, 48, 52, 54, 56, 61, 62], "continu": [6, 11, 18, 31, 48, 53, 60], "each": [6, 11, 13, 18, 19, 20, 24, 28, 29, 32, 33, 34, 35, 36, 37, 38, 40, 41, 48, 53, 55, 60, 61, 64, 65], "run": [6, 10, 11, 19, 20, 31, 48, 52, 53, 61], "step": [6, 18, 19, 20, 21, 22, 29, 34, 35, 36, 48, 60, 61, 62, 65], "onc": [6, 17, 29, 40, 41, 48, 59, 65], "twice": [6, 48], "test": [6, 11, 18, 21, 22, 24, 31, 48, 53, 60, 62], "gains1": [6, 48], "advanc": [6, 35, 48], "state": [6, 35, 40, 48], "gonext": [6, 18, 19, 20, 27, 28, 33, 35, 48, 60, 61, 63, 64], "gains2": [6, 48], "concaten": [6, 11, 24, 26, 34, 48, 53], "gains12c": [6, 48], "restart": [6, 35, 48], "mode": [6, 22, 48, 62], "want": [6, 10, 11, 13, 15, 19, 20, 23, 24, 27, 38, 39, 48, 52, 53, 55, 57, 61, 63], "so": [6, 11, 15, 18, 19, 20, 21, 22, 29, 34, 35, 38, 48, 53, 57, 60, 61, 62, 65], "initi": [6, 10, 11, 18, 19, 20, 34, 35, 36, 38, 39, 40, 41, 48, 52, 53, 60, 61], "restartrangen": [6, 35, 48], "gains12": [6, 48], "absolut": [6, 11, 24, 48, 53], "two": [6, 11, 13, 27, 28, 35, 36, 38, 40, 48, 53, 55, 63, 64], "369472471200176e": [6, 48], "4682821260964236e": [6, 48], "06": [6, 11, 18, 24, 26, 28, 48, 53, 60, 64], "010692990186467183": [6, 48], "01192575626972184": [6, 48], "filet": [6, 48], "data": [6, 10, 11, 15, 18, 19, 20, 21, 22, 27, 28, 29, 30, 32, 33, 34, 36, 38, 40, 48, 52, 53, 57, 60, 61, 62, 63, 64, 65], "some": [6, 11, 13, 15, 16, 17, 18, 19, 21, 29, 33, 34, 36, 38, 40, 41, 48, 53, 55, 57, 58, 59, 60, 65], "signal": [6, 10, 11, 14, 15, 18, 19, 20, 24, 29, 30, 31, 35, 36, 38, 41, 48, 52, 53, 56, 57, 60, 61, 65], "m": [6, 10, 32, 34, 37, 48, 52, 67], "standard": [6, 13, 29, 31, 32, 34, 35, 36, 39, 41, 48, 55, 65], "distribut": [6, 38, 48], "nrnt": [6, 10, 11, 35, 48, 52, 53], "output": [6, 13, 19, 20, 21, 29, 32, 34, 36, 37, 38, 48, 55, 61, 65], "filteroutput1": [6, 48], "channelfilt": [6, 10, 11, 35, 48, 52, 53], "filteroutput2": [6, 48], "filteroutput12c": [6, 48], "txwaveform12": [6, 48], "axi": [6, 18, 25, 26, 27, 32, 35, 48, 60, 63], "filteroutput12": [6, 48], "881784197001252e": [6, 48], "equival": [7, 8, 9, 12, 13, 14, 35, 36, 49, 50, 51, 54, 55, 56], "code": [7, 8, 9, 10, 11, 12, 13, 24, 27, 28, 30, 31, 32, 36, 37, 38, 39, 40, 49, 50, 51, 52, 53, 54, 55, 63, 64], "matlabfil": [7, 8, 9, 10, 11, 12, 13, 14, 49, 50, 51, 52, 53, 54, 55, 56], "mlx": [7, 8, 9, 10, 11, 12, 13, 14, 49, 50, 51, 52, 53, 54, 55, 56], "file": [7, 8, 9, 10, 11, 12, 13, 14, 18, 20, 21, 22, 24, 32, 49, 50, 51, 52, 53, 54, 55, 56, 60, 61, 62], "select": [7, 8, 9, 34, 49, 50, 51], "portion": [7, 8, 9, 49, 50, 51], "return": [7, 8, 9, 11, 13, 18, 19, 20, 22, 23, 24, 25, 26, 28, 29, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 49, 50, 51, 53, 55, 60, 61, 62, 64, 65], "function": [7, 8, 9, 10, 11, 13, 18, 21, 22, 29, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 49, 50, 51, 52, 53, 55, 60, 62, 65], "min": [7, 8, 9, 11, 24, 25, 26, 34, 49, 50, 51, 53], "175": [7, 8, 9, 49, 50, 51], "185": [7, 8, 9, 24, 49, 50, 51], "float64": [7, 8, 9, 19, 20, 49, 50, 51, 61], "88125561687992": [7, 49], "06408449": [7, 49], "54297586": [7, 49], "60588276": [7, 49], "32594437": [7, 49], "7440555": [7, 49], "88125562": [7, 49], "expect": [7, 8, 9, 49, 50, 51], "140": [7, 8, 9, 24, 49, 50, 51], "13389943631754": [7, 49], "29": [7, 13, 22, 24, 25, 26, 27, 29, 38, 49, 55, 62, 63, 65], "63146207": [7, 49], "9993008": [7, 49], "13711387": [7, 49], "06384822": [7, 49], "79202509": [7, 49], "32875878": [7, 49], "28": [7, 13, 19, 20, 22, 24, 25, 26, 29, 49, 55, 61, 62, 65], "67612693": [7, 49], "27": [7, 10, 11, 13, 19, 21, 22, 24, 25, 26, 27, 29, 49, 52, 53, 55, 62, 63, 65], "83094652": [7, 49], "26": [7, 13, 22, 25, 26, 29, 49, 55, 62, 65], "78385309": [7, 49], "51736197": [7, 49], "measur": [7, 32, 49], "take": [7, 13, 18, 21, 22, 31, 49, 55, 60, 62], "complet": [7, 18, 21, 22, 31, 32, 33, 35, 49, 60, 62], "action": [7, 49], "In": [7, 15, 18, 19, 20, 24, 26, 29, 32, 34, 35, 36, 37, 38, 39, 40, 41, 49, 57, 60, 61, 65], "averag": [7, 29, 32, 33, 36, 49, 65], "more": [7, 10, 11, 16, 17, 26, 31, 32, 33, 34, 35, 36, 37, 38, 40, 41, 49, 52, 53, 58, 59, 66], "second": [7, 13, 15, 21, 22, 25, 26, 32, 33, 35, 36, 38, 49, 55, 57, 62], "85": [7, 8, 9, 20, 22, 24, 49, 50, 51, 61, 62], "9520609378814697": [7, 49], "getdirect": [7, 8, 9, 32, 49, 50, 51], "read": [7, 8, 9, 10, 11, 12, 13, 14, 19, 21, 36, 40, 41, 49, 50, 51, 52, 53, 54, 55, 56], "directivitymatlab": [7, 8, 9, 49, 50, 51], "loadmat": [7, 8, 9, 10, 11, 12, 13, 14, 49, 50, 51, 52, 53, 54, 55, 56], "arraydirect": [7, 49], "mat": [7, 8, 9, 10, 11, 12, 13, 14, 49, 50, 51, 52, 53, 54, 55, 56], "clip": [7, 9, 49, 51], "minumum": [7, 9, 49, 51], "linearli": [7, 9, 35, 49, 51], "1e": [7, 9, 11, 13, 14, 49, 51, 53, 55, 56], "assert": [7, 8, 9, 10, 11, 12, 13, 14, 18, 19, 20, 24, 36, 38, 49, 50, 51, 52, 53, 54, 55, 56, 60, 61], "360": [7, 8, 9, 24, 26, 29, 49, 50, 51, 65], "209880444250302e": [7, 49], "09": [7, 11, 49, 53], "getfield": [7, 8, 9, 32, 49, 50, 51], "fieldmatlab": [7, 8, 9, 49, 50, 51], "arrayfield": [7, 49], "973799150320701e": [7, 49], "getpowerpatterndb": [7, 8, 9, 32, 49, 50, 51], "powerdbmatlab": [7, 8, 9, 49, 50, 51], "arraypowerdb": [7, 49], "maxdiff": [7, 11, 49, 53], "365091399449739e": [7, 49], "see": [8, 9, 10, 11, 13, 15, 16, 17, 22, 24, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 50, 51, 52, 53, 55, 57, 58, 59, 62], "directori": [8, 9, 10, 11, 21, 22, 50, 51, 52, 53, 62, 66], "follow": [8, 9, 10, 11, 13, 18, 19, 20, 21, 22, 29, 32, 33, 34, 35, 36, 38, 39, 40, 41, 50, 51, 52, 53, 55, 60, 61, 62, 65, 66], "174314951982485": [8, 50], "825685048017517": [8, 50], "arrai": [8, 9, 11, 12, 13, 18, 19, 20, 23, 24, 25, 26, 31, 32, 34, 35, 36, 37, 38, 39, 40, 41, 50, 51, 53, 54, 55, 60, 61, 66], "75467913": [8, 50], "78024126": [8, 50], "80012292": [8, 50], "8143241": [8, 50], "82284481": [8, 50], "82568505": [8, 50], "07074636689134867": [8, 50], "5926265": [8, 50], "57713592": [8, 50], "5616828": [8, 50], "54628606": [8, 50], "53096402": [8, 50], "51573432": [8, 50], "50061396": [8, 50], "48561921": [8, 50], "47076561": [8, 50], "45606798": [8, 50], "elementdirect": [8, 50], "552713678800501e": [8, 14, 50, 56], "elementfield": [8, 50], "440892098500626e": [8, 50], "elementpowerdb": [8, 50], "197442310920451e": [8, 50], "3461163449353218e": [9, 51], "56": [9, 19, 20, 22, 24, 25, 26, 28, 51, 61, 62, 64], "83750173730888": [9, 51], "76686552": [9, 51], "54": [9, 14, 22, 25, 26, 28, 51, 56, 62, 64], "85766752": [9, 51], "71739482": [9, 51], "33761657": [9, 51], "71222024": [9, 51], "83750174": [9, 51], "584305117453359e": [9, 51], "77330424": [9, 51], "94472821": [9, 51], "03364825": [9, 51], "04789381": [9, 51], "99526854": [9, 51], "88346163": [9, 51], "71996913": [9, 51], "51202565": [9, 51], "26654655": [9, 51], "99008022": [9, 51], "7155697345733643": [9, 51], "867890470891137": [9, 51], "38548524": [9, 51], "55993762": [9, 51], "6950069": [9, 51], "79116026": [9, 51], "84872386": [9, 51], "86789047": [9, 51], "paneldirect": [9, 51], "6200374375330284e": [9, 51], "panelfield": [9, 51], "263256414560601e": [9, 51], "panelpowerdb": [9, 51], "6186163520615082e": [9, 51], "cdltest": [10, 52], "were": [10, 11, 29, 52, 53, 65], "If": [10, 11, 15, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 52, 53, 57], "you": [10, 11, 13, 15, 20, 21, 22, 29, 31, 32, 33, 34, 35, 36, 38, 39, 40, 41, 52, 53, 55, 57, 61, 62, 65, 66], "recreat": [10, 11, 52, 53], "instruct": [10, 11, 52, 53], "matlabfilespath": [10, 12, 13, 14, 52, 54, 55, 56], "object": [10, 11, 12, 13, 15, 16, 17, 18, 19, 20, 21, 22, 24, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 40, 41, 52, 53, 54, 55, 57, 58, 59, 60, 61, 62, 63, 64, 65], "sinc": [10, 11, 18, 29, 38, 39, 40, 52, 53, 60, 65], "alwai": [10, 11, 12, 33, 34, 35, 36, 40, 52, 53, 54], "phase": [10, 11, 35, 38, 40, 52, 53], "rai": [10, 11, 32, 35, 52, 53], "coupl": [10, 11, 28, 35, 40, 52, 53, 64], "getmatlabrandominit": [10, 11, 52, 53], "helper": [10, 11, 38, 41, 52, 53], "implement": [10, 11, 13, 18, 19, 20, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 52, 53, 55, 60, 61], "fir": [10, 11, 52, 53], "slightli": [10, 11, 34, 36, 37, 38, 52, 53], "To": [10, 11, 12, 13, 29, 33, 34, 36, 41, 52, 53, 54, 55, 65], "compens": [10, 11, 52, 53], "need": [10, 11, 12, 15, 22, 29, 32, 35, 39, 40, 41, 52, 53, 54, 57, 62, 65], "modifi": [10, 11, 32, 35, 52, 53], "stopbandattenu": [10, 11, 52, 53], "document": [10, 11, 32, 35, 40, 52, 53], "inform": [10, 11, 13, 15, 18, 19, 20, 29, 32, 33, 34, 35, 36, 37, 38, 40, 41, 52, 53, 55, 57, 60, 61, 65], "cdlmodel": [10, 11, 52, 53], "phiinit": [10, 11, 52, 53], "beta": [10, 11, 13, 32, 35, 52, 53, 55], "getmultiratefir": [10, 11, 52, 53], "861": [10, 11, 52, 53], "abov": [10, 11, 13, 15, 16, 18, 19, 20, 21, 22, 34, 35, 36, 38, 39, 40, 52, 53, 55, 57, 58, 60, 61, 62], "fc": [10, 52], "initialphas": [10, 11, 35, 52, 53], "raycoupl": [10, 11, 35, 52, 53], "txorient": [10, 11, 35, 52, 53], "anglesc": [10, 11, 35, 52, 53], "matlabmatlab": [10, 11, 52, 53], "when": [10, 11, 13, 26, 27, 32, 34, 35, 36, 38, 39, 40, 41, 52, 53, 55, 63], "59401586635868": [10, 52], "007611": [10, 52], "rm": [10, 11, 35, 52, 53], "3500": [10, 11, 24, 52, 53], "1200": [10, 11, 24, 26, 35, 52, 53], "630": [10, 11, 24, 26, 52, 53], "050": [10, 11, 24, 52, 53], "040": [10, 11, 24, 52, 53], "960": [10, 11, 24, 26, 33, 52, 53], "750": [10, 11, 24, 52, 53], "40": [10, 11, 13, 19, 20, 22, 24, 25, 26, 29, 35, 40, 52, 53, 55, 61, 62, 65], "420": [10, 11, 24, 26, 52, 53], "79": [10, 11, 22, 24, 27, 52, 53, 62, 63], "370": [10, 11, 21, 24, 52, 53], "240": [10, 11, 12, 24, 26, 33, 52, 53, 54], "080": [10, 11, 24, 52, 53], "125": [10, 11, 24, 41, 52, 53], "35": [10, 11, 13, 19, 22, 24, 25, 26, 29, 35, 52, 53, 55, 62, 65], "33": [10, 11, 13, 19, 20, 22, 24, 25, 26, 29, 34, 52, 53, 55, 61, 62, 65], "132": [10, 11, 24, 52, 53], "77": [10, 11, 19, 20, 22, 24, 26, 27, 28, 52, 53, 61, 62, 63, 64], "163": [10, 11, 24, 52, 53], "137": [10, 11, 24, 52, 53], "74": [10, 11, 20, 22, 24, 27, 52, 53, 61, 62, 63], "84": [10, 11, 22, 24, 26, 52, 53, 62], "86": [10, 11, 22, 24, 52, 53, 62], "87": [10, 11, 20, 22, 24, 29, 52, 53, 61, 62, 65], "orient": [10, 11, 31, 32, 35, 52, 53], "\ud835\udefc": [10, 11, 52, 53], "\ud835\udec3": [10, 11, 52, 53], "\ud835\udec4": [10, 11, 52, 53], "151": [10, 11, 52, 53], "long": [10, 31, 35, 52], "program": [10, 13, 39, 52, 55], "t": [10, 11, 12, 13, 14, 17, 24, 26, 29, 31, 32, 33, 34, 35, 36, 38, 40, 41, 52, 53, 54, 55, 56, 59, 65], "numinputsampl": [10, 52], "antanna": [10, 52], "load": [10, 11, 13, 52, 53, 55], "sure": [10, 11, 15, 18, 29, 33, 36, 38, 40, 41, 52, 53, 57, 60, 65], "round": [10, 11, 13, 18, 24, 41, 52, 53, 55, 60], "204": [10, 24, 52], "201": [10, 24, 52], "line": [10, 13, 20, 24, 26, 35, 52, 55, 61], "instead": [10, 11, 13, 32, 33, 34, 35, 36, 37, 38, 40, 41, 52, 53, 55], "1j": [10, 19, 20, 25, 26, 52, 61], "rxwaveformmatlab": [10, 11, 52, 53], "diffab": [10, 52], "6478": [10, 52], "1199j": [10, 52], "2126": [10, 52], "1219j": [10, 52], "2027": [10, 52], "3657j": [10, 52], "235": [10, 52], "5164j": [10, 52], "2795": [10, 52], "0952j": [10, 52], "5704": [10, 52], "3598j": [10, 52], "0207": [10, 52], "3367j": [10, 52], "2162": [10, 52], "0988j": [10, 52], "0091": [10, 52], "0549j": [10, 52], "0093": [10, 52], "0458j": [10, 52], "0008": [10, 52], "0113j": [10, 52], "025": [10, 52], "0101j": [10, 52], "5649542371081303e": [10, 52], "matlabpath": [11, 53], "instanc": [11, 13, 22, 29, 35, 39, 53, 55, 62, 65], "singl": [11, 13, 15, 16, 17, 29, 32, 33, 34, 38, 39, 40, 53, 55, 57, 58, 59, 65], "call": [11, 12, 13, 18, 24, 26, 29, 32, 34, 35, 37, 38, 40, 41, 53, 54, 55, 60, 65], "2048": [11, 53], "cell": [11, 13, 15, 16, 17, 18, 19, 20, 21, 22, 24, 26, 29, 33, 53, 55, 57, 58, 59, 60, 61, 62, 65], "activ": [11, 13, 15, 16, 17, 19, 21, 29, 33, 40, 53, 55, 57, 58, 59, 65, 67], "4500000": [11, 53], "condigur": [11, 53], "One": [11, 32, 36, 41, 53], "non": [11, 32, 34, 35, 36, 38, 40, 53], "resouec": [11, 53], "pleas": [11, 18, 29, 32, 33, 34, 35, 36, 38, 39, 40, 41, 53, 60, 65], "current": [11, 18, 31, 32, 33, 34, 35, 36, 37, 39, 40, 53, 60], "have": [11, 13, 15, 17, 19, 20, 21, 22, 23, 24, 29, 32, 34, 35, 38, 40, 41, 53, 55, 57, 59, 61, 62, 65], "zp": [11, 36, 38, 40, 53], "000100": [11, 22, 53, 62], "base": [11, 12, 13, 18, 19, 20, 21, 29, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 53, 54, 55, 60, 61, 65], "Then": [11, 13, 21, 22, 29, 41, 53, 55, 62, 65], "poulat": [11, 53], "dictionari": [11, 13, 19, 20, 27, 36, 38, 53, 55, 61, 63], "after": [11, 29, 34, 35, 36, 38, 41, 53, 65], "visual": [11, 24, 31, 32, 36, 53], "gridstat": [11, 29, 53, 65], "numslot": [11, 18, 19, 20, 24, 27, 28, 33, 35, 36, 53, 60, 61, 63, 64], "content": [11, 31, 33, 34, 36, 38, 53], "16800": [11, 53], "16500": [11, 53], "csirs_zp": [11, 36, 38, 53], "getrevalu": [11, 13, 36, 53, 55], "complex": [11, 18, 19, 20, 21, 29, 31, 32, 35, 36, 37, 38, 39, 40, 41, 53, 60, 61, 65], "correspondingli": [11, 15, 18, 24, 33, 35, 40, 53, 57, 60], "csirssymbol": [11, 53], "nrcsir": [11, 53], "5g": [11, 29, 31, 34, 35, 40, 53, 65], "toolkit": [11, 32, 35, 53], "csirszpsymbol": [11, 53], "These": [11, 18, 19, 20, 29, 31, 32, 34, 35, 38, 40, 53, 60, 61, 65], "csirsnzpsymbol": [11, 53], "csirssymbolsmatlab": [11, 53], "csirssym": [11, 53], "flatten": [11, 13, 53, 55], "mismatch": [11, 12, 13, 14, 29, 30, 53, 54, 55, 56, 65], "WITH": [11, 12, 13, 14, 53, 54, 55, 56], "diff": [11, 13, 14, 53, 55, 56], "210": [11, 26, 53], "7071": [11, 24, 53], "7071j": [11, 53], "5700924586837752e": [11, 14, 53, 56], "whole": [11, 19, 20, 21, 22, 29, 33, 34, 36, 38, 53, 61, 62, 65], "nrresourcegrid": [11, 53], "gridmatlab": [11, 53], "transpos": [11, 13, 18, 19, 20, 22, 25, 26, 53, 55, 60, 61, 62], "order": [11, 13, 32, 34, 37, 38, 53, 55], "127": [11, 53], "j": [11, 13, 24, 25, 26, 53, 55], "ger": [11, 53], "nrofdmmodul": [11, 53], "waveformmatlab": [11, 13, 53, 55], "3000": [11, 18, 53, 60], "3010": [11, 53], "30720": [11, 53], "0017": [11, 13, 53, 55], "0022j": [11, 53], "0027": [11, 53], "0026j": [11, 53], "0038": [11, 53], "0027j": [11, 53], "0048": [11, 53], "0054": [11, 53], "0023j": [11, 53], "0055": [11, 53], "0019j": [11, 53], "0051": [11, 53], "0015j": [11, 53], "0042": [11, 53], "0013j": [11, 53], "0028": [11, 53], "0012j": [11, 53], "0012": [11, 53], "878959614448864e": [11, 53], "042314": [11, 24, 53], "support": [11, 29, 32, 34, 35, 36, 37, 38, 40, 41, 53, 65], "match": [11, 12, 13, 14, 19, 20, 28, 29, 30, 34, 36, 38, 39, 40, 41, 53, 54, 55, 56, 61, 64, 65], "nrperfectchannelestim": [11, 53], "timedomain2": [11, 53], "NOT": [11, 53], "hactual": [11, 24, 53], "hactualmatlab": [11, 53], "h_actual": [11, 53], "687402477901097e": [11, 53], "0173j": [11, 53], "0034": [11, 53], "0171j": [11, 53], "ha": [11, 24, 36, 38, 53], "propag": [11, 34, 41, 53], "goe": [11, 41, 53], "through": [11, 24, 29, 31, 32, 41, 53, 65], "append": [11, 24, 29, 34, 41, 53, 65], "end": [11, 12, 18, 19, 20, 22, 27, 28, 30, 31, 34, 35, 36, 38, 41, 53, 54, 60, 61, 62, 63, 64, 66], "equal": [11, 19, 20, 27, 28, 30, 31, 33, 34, 35, 36, 38, 41, 53, 61, 63, 64], "obtain": [11, 29, 34, 35, 36, 37, 38, 41, 53, 65], "transform": [11, 29, 32, 41, 53, 65], "pass": [11, 13, 24, 29, 33, 35, 36, 38, 39, 40, 41, 53, 55, 65], "sahp": [11, 53], "30731": [11, 53], "28855165e": [11, 53], "17075417e": [11, 53], "05j": [11, 53], "57030299e": [11, 53], "02737737e": [11, 53], "42472190e": [11, 53], "58492709e": [11, 53], "84693723e": [11, 53], "02529180e": [11, 53], "89449786e": [11, 53], "42511598e": [11, 53], "06j": [11, 53], "68494399e": [11, 53], "08190658e": [11, 53], "18506472e": [11, 53], "40357150e": [11, 53], "83048719e": [11, 53], "80838147e": [11, 53], "77166484e": [11, 53], "88491000e": [11, 53], "29606231e": [11, 53], "02508414e": [11, 53], "58492708e": [11, 53], "42511597e": [11, 53], "18506471e": [11, 53], "40357151e": [11, 53], "80838148e": [11, 53], "457436639872327e": [11, 53], "determinist": [11, 13, 53, 55], "nois": [11, 12, 14, 18, 19, 20, 24, 27, 28, 30, 31, 36, 37, 38, 39, 40, 41, 53, 54, 56, 60, 61, 63, 64], "wa": [11, 20, 29, 34, 35, 36, 41, 53, 61, 65], "noisi": [11, 36, 37, 41, 53], "noisywaveform": [11, 24, 53], "add": [11, 14, 18, 19, 20, 21, 24, 27, 28, 29, 30, 35, 36, 40, 41, 53, 56, 60, 61, 63, 64, 65], "snr": [11, 14, 18, 19, 20, 24, 27, 28, 29, 36, 41, 53, 56, 60, 61, 63, 64, 65], "varrianc": [11, 53], "var": [11, 26, 53], "2f": [11, 18, 19, 20, 27, 28, 53, 60, 61, 63, 64], "log10": [11, 14, 28, 53, 56, 64], "addnois": [11, 18, 19, 20, 24, 27, 28, 29, 30, 36, 41, 53, 60, 61, 63, 64, 65], "2203149233307698e": [11, 53], "begin": [11, 18, 29, 33, 36, 41, 53, 60, 65], "But": [11, 53], "practic": [11, 31, 40, 41, 53], "estimatetimingoffset": [11, 24, 36, 41, 53], "doe": [11, 13, 19, 20, 29, 34, 35, 36, 38, 53, 55, 61, 65], "exactli": [11, 13, 29, 53, 55, 65], "both": [11, 20, 29, 32, 34, 35, 36, 38, 39, 40, 53, 61, 65], "cheat": [11, 24, 53], "becaus": [11, 24, 29, 33, 39, 41, 53, 65], "don": [11, 24, 32, 35, 40, 53], "know": [11, 15, 24, 53, 57], "choffset": [11, 24, 53], "Or": [11, 24, 53], "reciv": [11, 24, 53], "rxcsirsconfig": [11, 24, 53], "csirsgrid": [11, 24, 53], "nrofdmdemodul": [11, 53], "rxgridmatlab": [11, 53], "61575139e": [11, 53], "03": [11, 26, 27, 53, 63], "00175339j": [11, 53], "06114113e": [11, 53], "0013182j": [11, 53], "51931543e": [11, 53], "00099349j": [11, 53], "12506622e": [11, 53], "04": [11, 20, 26, 53, 61], "00099399j": [11, 53], "40631448e": [11, 53], "00146395j": [11, 53], "26437220e": [11, 53], "0011728j": [11, 53], "79090970e": [11, 53], "00045581j": [11, 53], "08299457e": [11, 53], "00019759j": [11, 53], "56087026e": [11, 53], "00012872j": [11, 53], "62260526e": [11, 53], "00062589j": [11, 53], "10153725e": [11, 53], "00029551j": [11, 53], "56870049e": [11, 53], "00037998j": [11, 53], "54244624e": [11, 53], "00114511j": [11, 53], "91488916e": [11, 53], "00068177j": [11, 53], "538668235349703e": [11, 53], "estimatechannel": [11, 19, 20, 24, 27, 28, 29, 30, 36, 38, 53, 61, 63, 64, 65], "actual": [11, 22, 24, 27, 28, 29, 30, 32, 34, 35, 37, 38, 40, 41, 53, 62, 63, 64, 65], "least": [11, 18, 19, 20, 24, 29, 33, 35, 36, 40, 53, 60, 61, 65], "hest": [11, 18, 19, 20, 24, 36, 53, 60, 61], "_": [11, 24, 29, 30, 38, 53, 65], "ignor": [11, 13, 32, 34, 35, 36, 38, 40, 41, 53, 55], "relat": [11, 53], "error": [11, 14, 19, 20, 24, 28, 29, 34, 36, 38, 40, 53, 56, 61, 64, 65, 66], "4569771845362033e": [11, 53], "0027963260779751394": [11, 53], "0008693920418179478": [11, 53], "67645612042719e": [11, 53], "00383678": [11, 53], "01727704j": [11, 53], "00337909": [11, 53], "01709973j": [11, 53], "00469164": [11, 53], "0179458j": [11, 53], "fig": [11, 34, 40, 53], "ax1": [11, 53], "ax2": [11, 53], "subplot": [11, 53], "tight_layout": [11, 53], "suptitl": [11, 53], "hm1": [11, 53], "imshow": [11, 53], "cmap": [11, 53], "autumn": [11, 53], "aspect": [11, 53], "origin": [11, 12, 14, 30, 34, 38, 39, 41, 53, 54, 56], "lower": [11, 35, 53], "set_titl": [11, 53], "set_xlabel": [11, 53], "set_ylabel": [11, 53], "set_xtick": [11, 53], "colorbar": [11, 53], "ax": [11, 25, 26, 32, 53], "hm2": [11, 53], "subplots_adjust": [11, 53], "top": [11, 53], "wspace": [11, 53], "encod": [12, 14, 28, 29, 30, 31, 34, 54, 56, 64, 65], "decod": [12, 14, 28, 30, 31, 34, 37, 54, 56, 64], "transport": [12, 14, 28, 30, 31, 34, 38, 54, 56, 64], "ldpcencod": [12, 13, 28, 29, 30, 34, 54, 55, 64, 65], "ldpcdecod": [12, 13, 28, 29, 30, 34, 37, 54, 55, 64, 65], "basegraphno": [12, 28, 29, 30, 34, 54, 64, 65], "qpsk": [12, 14, 34, 37, 38, 54, 56], "rv": [12, 34, 54], "txlayer": [12, 28, 29, 30, 34, 54, 64, 65], "nref": [12, 34, 54], "targetr": [12, 28, 29, 30, 34, 54, 64, 65], "449": [12, 24, 34, 54], "1024": [12, 13, 24, 28, 29, 30, 33, 34, 54, 55, 64, 65], "inbit": [12, 54], "reshap": [12, 14, 19, 20, 25, 26, 54, 56, 61], "dtype": [12, 18, 19, 20, 23, 24, 26, 39, 54, 60, 61], "int8": [12, 23, 24, 39, 54], "crc": [12, 14, 28, 30, 34, 54, 56, 64], "tbwithcrc": [12, 54], "appendcrc": [12, 34, 54], "24a": [12, 29, 30, 34, 54, 65], "10024": [12, 54], "do": [12, 17, 25, 26, 29, 34, 36, 38, 41, 54, 59, 65], "segment": [12, 14, 28, 30, 34, 54, 56, 64], "filler": [12, 34, 54], "codeblockscrc": [12, 54], "dosegment": [12, 14, 34, 54, 56], "fillerbit": [12, 34, 54], "codeblockscrcmatlab": [12, 54], "cbsin": [12, 54], "sum": [12, 14, 19, 20, 24, 25, 26, 27, 28, 29, 30, 34, 35, 54, 56, 61, 63, 64, 65], "codeblock": [12, 14, 30, 34, 54, 56], "includ": [12, 18, 21, 22, 27, 29, 31, 32, 33, 34, 35, 36, 38, 41, 54, 60, 62, 63, 65], "liftings": [12, 34, 54], "zc": [12, 54], "setindex": [12, 34, 40, 54], "numfillerbit": [12, 54], "5280": [12, 54], "244": [12, 24, 26, 54], "basegraph": [12, 34, 54], "8x8": [12, 54], "sub": [12, 13, 34, 35, 54, 55], "matrix": [12, 13, 18, 19, 20, 21, 22, 27, 28, 29, 30, 32, 34, 35, 36, 37, 38, 54, 55, 60, 61, 62, 63, 64, 65, 66], "doubl": [12, 16, 17, 40, 54, 58, 59], "diagon": [12, 54], "section": [12, 32, 33, 34, 35, 36, 37, 38, 40, 41, 54], "r": [12, 18, 19, 20, 23, 24, 26, 27, 28, 31, 34, 36, 38, 54, 60, 61, 63, 64], "join": [12, 14, 26, 54, 56], "46": [12, 13, 22, 25, 26, 29, 54, 55, 62, 65], "codeword": [12, 14, 29, 34, 54, 56, 65], "punctur": [12, 34, 54], "setfillerbit": [12, 34, 54], "testcodeword": [12, 54], "zerofillerbit": [12, 34, 54], "isvalidcodeword": [12, 34, 54], "ones": [12, 13, 23, 24, 41, 54, 55], "intention": [12, 54], "invalid": [12, 26, 54], "usag": [12, 31, 54], "codewordsmatlab": [12, 14, 54, 56], "enc": [12, 54], "15840": [12, 54], "ratematchedcodeword": [12, 14, 28, 29, 54, 56, 64, 65], "ratematch": [12, 14, 34, 54, 56], "rate": [12, 14, 19, 20, 21, 22, 28, 30, 33, 34, 35, 38, 54, 56, 61, 62, 64, 66], "ratematchedcodewordsmatlab": [12, 14, 54, 56], "chin": [12, 54], "22808": [12, 54], "getratematchedcodeword": [12, 28, 29, 30, 34, 54, 64, 65], "simpl": [12, 13, 29, 40, 54, 55, 65], "bipolar": [12, 54], "channel": [12, 24, 27, 28, 30, 31, 32, 36, 40, 41, 54, 63, 64], "channeloutput": [12, 54], "recov": [12, 14, 28, 29, 34, 54, 56, 64, 65], "rxcodedblock": [12, 28, 29, 30, 34, 54, 64, 65], "recoverr": [12, 14, 28, 29, 30, 34, 54, 56, 64, 65], "len": [12, 13, 18, 19, 20, 22, 24, 26, 28, 35, 54, 55, 60, 61, 62, 64], "rxcodedblocksmatlab": [12, 54], "raterec": [12, 54], "inf": [12, 22, 54, 62], "large_llr": [12, 54], "replac": [12, 54], "messag": [12, 18, 34, 40, 54, 60], "rxcodeword": [12, 54], "rxcodewordsmatlab": [12, 54], "decbit": [12, 14, 54, 56], "undo": [12, 54], "rxdecodedwordswithoutcrc": [12, 54], "crcmatch": [12, 28, 29, 30, 34, 54, 64, 65], "checkcrcandmerg": [12, 28, 29, 30, 34, 54, 64, 65], "rxdecodedwordswithoutcrcmatlab": [12, 54], "decblk": [12, 54], "checkcrc": [12, 29, 30, 34, 54, 65], "30khz": [13, 18, 19, 20, 27, 28, 30, 55, 60, 61, 63, 64], "624": [13, 21, 24, 55], "18720000": [13, 55], "enabl": [13, 14, 31, 34, 38, 40, 55, 56], "interleav": [13, 14, 29, 31, 34, 38, 55, 56, 65], "interleavingbundles": [13, 15, 16, 17, 18, 19, 20, 27, 28, 29, 38, 55, 57, 58, 59, 60, 61, 63, 64, 65], "argument": [13, 32, 33, 34, 35, 38, 40, 55], "layer": [13, 15, 16, 17, 18, 19, 20, 21, 22, 29, 30, 31, 34, 36, 38, 40, 55, 57, 58, 59, 60, 61, 62, 65], "could": [13, 20, 22, 34, 35, 36, 38, 55, 61, 62], "own": [13, 35, 38, 55], "them": [13, 22, 24, 29, 32, 34, 38, 39, 40, 55, 62, 65, 66], "instanti": [13, 20, 22, 35, 55, 61, 62], "just": [13, 29, 31, 35, 40, 55, 65], "account": [13, 55], "factor": [13, 32, 35, 36, 38, 55], "newer": [13, 55], "version": [13, 31, 34, 35, 36, 41, 55], "214": [13, 24, 29, 31, 36, 38, 40, 55, 65], "v17": [13, 55], "2021": [13, 55], "ratio": [13, 29, 30, 33, 34, 35, 36, 37, 38, 40, 41, 55, 65], "epr": [13, 40, 55], "forc": [13, 55], "epreratiodb": [13, 15, 16, 17, 29, 40, 55, 57, 58, 59, 65], "numlay": [13, 15, 16, 17, 18, 19, 20, 24, 26, 27, 28, 29, 30, 36, 38, 55, 57, 58, 59, 60, 61, 63, 64, 65], "numcdmgroupswithoutdata": [13, 55], "othercdmgroup": [13, 36, 38, 40, 55, 66], "setdmr": [13, 15, 16, 17, 18, 19, 20, 27, 28, 29, 30, 38, 55, 57, 58, 59, 60, 61, 63, 64, 65], "mappingtyp": [13, 15, 16, 17, 29, 38, 55, 57, 58, 59, 65], "A": [13, 14, 15, 16, 17, 21, 24, 29, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 55, 56, 57, 58, 59, 65], "nid": [13, 15, 16, 17, 18, 19, 20, 27, 28, 29, 30, 38, 40, 55, 57, 58, 59, 60, 61, 63, 64, 65], "rnti": [13, 15, 16, 17, 29, 38, 55, 57, 58, 59, 65], "numcodeword": [13, 15, 16, 17, 29, 55, 57, 58, 59, 65], "portset": [13, 15, 16, 17, 18, 19, 20, 29, 38, 40, 55, 57, 58, 59, 60, 61, 65], "symset": [13, 15, 16, 17, 29, 38, 40, 55, 57, 58, 59, 65], "prbset": [13, 15, 16, 17, 29, 38, 55, 57, 58, 59, 65], "37": [13, 22, 24, 25, 26, 29, 55, 62, 65], "42": [13, 19, 20, 22, 25, 26, 28, 29, 55, 61, 62, 64, 65], "43": [13, 22, 25, 26, 29, 55, 62, 65], "45": [13, 14, 22, 24, 25, 26, 28, 29, 32, 55, 56, 62, 64, 65], "51": [13, 18, 19, 20, 22, 25, 26, 27, 28, 29, 30, 55, 60, 61, 62, 63, 64, 65], "prg": [13, 15, 16, 17, 29, 36, 38, 55, 57, 58, 59, 65], "wideband": [13, 15, 16, 17, 29, 36, 38, 55, 57, 58, 59, 65], "configtyp": [13, 15, 16, 17, 18, 19, 20, 27, 28, 29, 30, 40, 55, 57, 58, 59, 60, 61, 63, 64, 65], "scid": [13, 15, 16, 17, 29, 40, 55, 57, 58, 59, 65], "sameseq": [13, 15, 16, 17, 29, 40, 55, 57, 58, 59, 65], "typea1stpo": [13, 15, 16, 17, 29, 40, 55, 57, 58, 59, 65], "additionalpo": [13, 15, 16, 17, 18, 19, 20, 27, 28, 29, 30, 40, 55, 57, 58, 59, 60, 61, 63, 64, 65], "cdmgroup": [13, 15, 16, 17, 29, 40, 55, 57, 58, 59, 65], "deltashift": [13, 15, 16, 17, 29, 55, 57, 58, 59, 65], "allcdmgroup": [13, 15, 16, 17, 29, 55, 57, 58, 59, 65], "getgrid": [13, 15, 16, 17, 18, 19, 20, 27, 28, 29, 30, 38, 55, 57, 58, 59, 60, 61, 63, 64, 65], "out": [13, 20, 22, 34, 55, 61, 62], "mapping5gphysicalchannelsandsignalstotheresourcegridexampl": [13, 55], "dmrssymbol": [13, 55], "dmrssymbolsmatlab": [13, 55], "70710678": [13, 14, 26, 55, 56], "70710678j": [13, 14, 26, 55, 56], "getgridbits": [13, 55], "crear": [13, 55], "numbit": [13, 18, 19, 20, 27, 28, 29, 30, 55, 60, 61, 63, 64, 65], "feed": [13, 55], "scrambl": [13, 31, 38, 40, 55], "abl": [13, 55], "un": [13, 29, 36, 38, 55, 65], "remark": [13, 29, 55, 65], "below": [13, 18, 20, 35, 36, 38, 40, 41, 55, 60, 61], "getbits": [13, 18, 19, 20, 27, 28, 29, 30, 38, 55, 60, 61, 63, 64, 65], "randint": [13, 39, 55], "unremark": [13, 29, 55, 65], "resault": [13, 55], "pdschbit": [13, 55], "getdatasymbol": [13, 38, 55], "As": [13, 15, 19, 20, 31, 39, 55, 57, 61], "datasymbol": [13, 55], "datasymbolsmatlab": [13, 55], "pdschsymbol": [13, 55], "31622777": [13, 55], "31622777j": [13, 55], "9486833": [13, 55], "9486833j": [13, 55], "count": [13, 38, 55], "ptr": [13, 36, 38, 55], "reserv": [13, 36, 38, 55], "17472": [13, 55], "no_data": [13, 15, 36, 38, 55, 57], "16224": [13, 55], "For": [13, 18, 19, 20, 28, 29, 32, 33, 34, 35, 36, 38, 40, 41, 55, 60, 61, 64, 65], "assum": [13, 29, 32, 34, 35, 36, 38, 41, 55, 65], "transmit": [13, 24, 30, 33, 34, 35, 38, 40, 41, 55], "ident": [13, 20, 22, 38, 40, 55, 61, 62], "w": [13, 25, 26, 55], "fft": [13, 29, 33, 35, 41, 55, 65], "ey": [13, 55], "sqrt": [13, 14, 20, 22, 24, 26, 32, 55, 56, 61, 62], "frist": [13, 55], "accordingli": [13, 55], "35355339": [13, 55], "35355339j": [13, 55], "precodedgrid": [13, 18, 19, 20, 27, 28, 29, 30, 55, 60, 61, 63, 64, 65], "pdschgridmatlab": [13, 55], "pdschgrid": [13, 55], "2236": [13, 55], "4472j": [13, 55], "6708j": [13, 55], "2236j": [13, 55], "4472": [13, 55], "6708": [13, 55], "length": [13, 24, 29, 32, 33, 34, 37, 38, 41, 55, 65], "15360": [13, 29, 55, 65], "0053": [13, 55], "0104j": [13, 55], "0072": [13, 55], "0016j": [13, 55], "0071j": [13, 55], "0086": [13, 55], "0011j": [13, 55], "0063": [13, 55], "0057j": [13, 55], "0191": [13, 55], "0001j": [13, 55], "0044": [13, 55], "004j": [13, 55], "015": [13, 55], "0036j": [13, 55], "0155": [13, 55], "0084j": [13, 55], "008": [13, 21, 55], "015j": [13, 55], "figur": [13, 32, 55], "xlabel": [13, 19, 20, 27, 28, 55, 61, 63, 64], "fontsiz": [13, 55], "ylabel": [13, 19, 20, 27, 28, 55, 61, 63, 64], "text": [13, 32, 33, 34, 35, 36, 37, 38, 40, 41, 55], "payloadlen": [14, 34, 56], "must": [14, 24, 26, 29, 33, 34, 35, 36, 38, 40, 41, 56, 65], "larger": [14, 33, 34, 56], "1706": [14, 56], "ratematchedlen": [14, 34, 56], "ebno": [14, 28, 56, 64], "coder": [14, 28, 29, 38, 56, 64, 65], "bp": [14, 56], "per": [14, 18, 19, 20, 31, 32, 33, 35, 37, 40, 56, 60, 61], "esno": [14, 56], "energi": [14, 40, 56], "over": [14, 38, 56], "snrdb": [14, 18, 19, 20, 24, 27, 28, 29, 30, 36, 41, 56, 60, 61, 63, 64, 65], "noisevar": [14, 25, 26, 36, 37, 38, 41, 56], "noisestd": [14, 36, 39, 41, 56], "varianc": [14, 29, 36, 37, 38, 41, 56, 65], "std": [14, 20, 22, 36, 41, 56, 61, 62], "3424250943932492": [14, 56], "9241819678918566": [14, 56], "9613438343755353": [14, 56], "polarencod": [14, 34, 56], "dci": [14, 34, 40, 56], "datatyp": [14, 34, 56], "payloads": [14, 34, 56], "e": [14, 15, 18, 19, 20, 23, 24, 31, 34, 35, 36, 56, 57, 60, 61, 67], "codeblocks": [14, 34, 56], "k": [14, 18, 19, 20, 25, 26, 29, 32, 33, 34, 35, 36, 38, 40, 56, 60, 61, 65], "polarcodes": [14, 34, 56], "log2": [14, 56], "nmax": [14, 34, 56], "iseg": [14, 34, 56], "disabl": [14, 29, 34, 35, 38, 40, 56, 65], "crcpoli": [14, 34, 56], "24c": [14, 34, 56], "iil": [14, 34, 56], "ibil": [14, 34, 56], "num": [14, 56], "pariti": [14, 34, 38, 56], "npc": [14, 34, 56], "npcwm": [14, 34, 56], "txpblock": [14, 56], "msg": [14, 56], "str": [14, 18, 22, 26, 32, 33, 34, 35, 36, 37, 38, 40, 41, 56, 60, 62], "codeblocksmatlab": [14, 56], "msgcrc": [14, 56], "100100110110000110100110000010": [14, 56], "100100110110000110100110000010111100001010001110100010": [14, 56], "word": [14, 29, 34, 35, 38, 56, 65], "encout": [14, 56], "1001110011": [14, 56], "modin": [14, 56], "modulatedmatlab": [14, 56], "modout": [14, 56], "complexnois": [14, 56], "channois": [14, 56], "rxsymbol": [14, 56], "51312371": [14, 56], "76995541j": [14, 56], "88901799": [14, 56], "41258547j": [14, 56], "44741359": [14, 56], "38917752j": [14, 56], "49504718": [14, 56], "34599014j": [14, 56], "58021683": [14, 56], "80163037j": [14, 56], "llr": [14, 28, 29, 30, 34, 36, 37, 38, 56, 64, 65], "getllrsfromsymbol": [14, 37, 56], "llrsmatlab": [14, 56], "rxllr": [14, 56], "57039747": [14, 56], "35642204": [14, 56], "72080897": [14, 56], "32316924": [14, 56], "42975952": [14, 56], "25153001": [14, 56], "51507488": [14, 56], "05889091": [14, 56], "83619924": [14, 56], "45336219": [14, 56], "hard": [14, 34, 37, 38, 56], "decis": [14, 34, 37, 38, 56], "hardcodeword": [14, 56], "org": [14, 56], "polardecod": [14, 34, 37, 56], "scllistsiz": [14, 34, 56], "useminsum": [14, 34, 56], "scl": [14, 34, 56], "list": [14, 20, 22, 24, 26, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 56, 61, 62], "minsum": [14, 56], "approxim": [14, 34, 37, 38, 56], "raterecoveredrxblock": [14, 34, 56], "raterecoveredrxblocksmatlab": [14, 56], "decin": [14, 56], "dectxblock": [14, 34, 56], "numcrcerror": [14, 34, 56], "dectxblockmatlab": [14, 56], "how": [15, 18, 27, 28, 29, 32, 35, 36, 38, 39, 40, 41, 57, 60, 63, 64, 65, 66, 67], "let": [15, 16, 17, 18, 19, 20, 21, 22, 29, 34, 57, 58, 59, 60, 61, 62, 65], "group": [15, 23, 24, 29, 32, 33, 36, 38, 40, 57, 65], "therefor": [15, 18, 34, 36, 40, 57, 60], "should": [15, 32, 34, 35, 36, 38, 39, 40, 41, 57], "assign": [15, 29, 36, 38, 40, 57, 65], "those": [15, 18, 57, 60], "30000": [15, 16, 17, 29, 57, 58, 59, 65], "000": [15, 16, 17, 29, 33, 35, 57, 58, 59, 65], "1800000": [15, 16, 17, 57, 58, 59], "prb": [15, 16, 17, 38, 57, 58, 59], "dmr": [15, 17, 18, 19, 20, 27, 28, 30, 31, 36, 38, 57, 59, 60, 61, 63, 64], "resours": [15, 16, 17, 57, 58, 59], "popul": [15, 16, 17, 18, 19, 20, 27, 28, 29, 30, 38, 40, 57, 58, 59, 60, 61, 63, 64, 65], "1680": [15, 16, 17, 26, 57, 58, 59], "1560": [15, 57], "cannot": [15, 57], "interfer": [15, 57], "anoth": [15, 19, 20, 29, 35, 36, 57, 61, 65], "tell": [15, 57], "g": [15, 31, 34, 35, 36, 57], "third": [15, 57], "look": [15, 57], "mark": [15, 36, 38, 57], "prevent": [15, 57], "interf": [15, 57], "eachoth": [15, 57], "configur": [15, 18, 19, 20, 27, 28, 30, 34, 36, 38, 40, 57, 60, 61, 63, 64, 66], "suppos": [15, 57], "1620": [16, 26, 58], "addit": [16, 17, 22, 29, 32, 33, 35, 36, 37, 38, 39, 40, 41, 58, 59, 62, 65], "posit": [16, 17, 29, 32, 34, 36, 40, 58, 59, 65], "work": [16, 18, 34, 35, 58, 60, 67], "b": [16, 26, 34, 35, 36, 38, 41, 58], "rel": [16, 32, 35, 38, 58], "still": [16, 58], "setptr": [17, 38, 40, 59], "timedens": [17, 40, 59], "freqdens": [17, 40, 59], "reoffset": [17, 40, 59], "epreratio": [17, 40, 59], "1581": [17, 59], "resourceelementoffset": [17, 40, 59], "3gpp": [17, 24, 29, 31, 32, 33, 34, 35, 36, 37, 38, 40, 41, 59, 65], "01": [17, 20, 26, 27, 59, 61, 63], "ani": [18, 26, 31, 32, 33, 34, 35, 36, 38, 40, 60], "deep": [18, 19, 20, 21, 60, 61], "learn": [18, 19, 20, 21, 22, 60, 61, 62], "project": [18, 60], "prepar": [18, 19, 20, 27, 60, 61, 63], "commun": [18, 19, 20, 31, 33, 34, 38, 40, 41, 60, 61, 66], "pipelin": [18, 29, 31, 38, 60, 65], "captur": [18, 60], "togeth": [18, 22, 34, 40, 60, 62], "known": [18, 29, 60, 65], "pilot": [18, 19, 20, 21, 22, 29, 36, 60, 61, 62, 65], "locat": [18, 19, 20, 21, 22, 29, 32, 36, 38, 40, 60, 61, 62, 65], "algorithm": [18, 29, 31, 34, 35, 36, 60, 65], "precod": [18, 19, 20, 27, 28, 30, 31, 36, 38, 60, 61, 63, 64], "predict": [18, 19, 20, 21, 22, 39, 60, 61, 62], "l": [18, 19, 20, 25, 26, 27, 28, 29, 34, 35, 36, 37, 38, 40, 60, 61, 63, 64, 65], "where": [18, 23, 24, 29, 31, 32, 34, 35, 36, 37, 38, 39, 40, 41, 60, 65], "tensor": [18, 19, 20, 21, 29, 35, 36, 60, 61, 65], "nl": [18, 25, 26, 36, 38, 60], "correspond": [18, 20, 24, 32, 34, 35, 36, 38, 40, 60, 61], "diagram": [18, 19, 20, 21, 22, 60, 61, 62], "getsampl": [18, 60], "ground": [18, 60], "truth": [18, 26, 60], "updat": [18, 34, 35, 36, 38, 40, 60], "broken": [18, 60], "down": [18, 34, 35, 60], "def": [18, 19, 20, 22, 23, 24, 25, 26, 28, 60, 61, 62, 64], "actualchannel": [18, 60], "rsgrid": [18, 19, 20, 60, 61], "pxxch": [18, 20, 40, 60, 61], "rsindex": [18, 19, 20, 60, 61], "rr": [18, 19, 20, 60, 61], "ll": [18, 19, 20, 60, 61], "kk": [18, 19, 20, 60, 61], "ll2": [18, 19, 20, 60, 61], "kk2": [18, 19, 20, 60, 61], "p": [18, 19, 20, 26, 32, 35, 36, 41, 60, 61], "portl": [18, 19, 20, 60, 61], "portk": [18, 19, 20, 60, 61], "uniqu": [18, 19, 20, 60, 61], "numl": [18, 19, 20, 60, 61], "numk": [18, 19, 20, 60, 61], "pilotvalu": [18, 19, 20, 60, 61], "rxvalu": [18, 19, 20, 60, 61], "none": [18, 19, 20, 21, 22, 25, 26, 27, 28, 29, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 60, 61, 62, 63, 64, 65], "inh": [18, 19, 20, 60, 61], "complex128": [18, 60], "2d": [18, 23, 24, 31, 34, 38, 41, 60], "li": [18, 19, 20, 60, 61], "th": [18, 35, 40, 60], "makedataset": [18, 60], "frame": [18, 19, 20, 26, 27, 28, 31, 33, 35, 60, 61, 63, 64], "numfram": [18, 19, 20, 27, 28, 60, 61, 63, 64], "name": [18, 21, 35, 60], "save": [18, 19, 20, 21, 22, 27, 41, 60, 61, 62, 63], "filenam": [18, 22, 60, 62], "shown": [18, 19, 20, 29, 60, 61, 65], "aggreg": [18, 60], "freqdomain": [18, 19, 20, 27, 28, 60, 61, 63, 64], "cellid": [18, 19, 20, 27, 28, 29, 30, 33, 60, 61, 63, 64, 65], "prgsize": [18, 19, 20, 27, 28, 29, 38, 60, 61, 63, 64, 65], "slotsperfram": [18, 19, 20, 27, 28, 33, 36, 60, 61, 63, 64], "totalit": [18, 60], "iter": [18, 26, 32, 34, 60], "curit": [18, 60], "counter": [18, 33, 39, 60], "txbit": [18, 19, 20, 27, 60, 61, 63], "binari": [18, 19, 20, 27, 28, 29, 30, 38, 40, 60, 61, 63, 64, 65], "channelmatrix": [18, 19, 20, 27, 28, 29, 30, 36, 38, 60, 61, 63, 64, 65], "getprecodingmatrix": [18, 19, 20, 27, 28, 29, 30, 38, 60, 61, 63, 64, 65], "perform": [18, 19, 20, 27, 28, 29, 30, 31, 34, 36, 38, 60, 61, 63, 64, 65], "els": [18, 19, 20, 22, 26, 27, 28, 60, 61, 62, 63, 64], "noisyrxwaveform": [18, 19, 20, 27, 28, 29, 30, 60, 61, 63, 64, 65], "info": [18, 19, 20, 21, 24, 27, 28, 40, 60, 61, 63, 64], "newsampl": [18, 60], "newlabel": [18, 60], "dt": [18, 19, 20, 27, 28, 60, 61, 63, 64], "durat": [18, 33, 35, 60], "percentdon": [18, 60], "percentag": [18, 41, 60], "task": [18, 34, 41, 60], "done": [18, 19, 29, 34, 35, 60, 65], "last": [18, 24, 25, 26, 32, 34, 36, 60], "progress": [18, 60], "remain": [18, 34, 38, 39, 40, 60], "convert": [18, 19, 20, 29, 32, 35, 36, 37, 38, 41, 60, 61, 65], "float": [18, 32, 33, 34, 36, 37, 38, 41, 60], "stack": [18, 19, 20, 27, 60, 61, 63], "followin": [18, 60], "mixtur": [18, 60], "experienc": [18, 60], "dure": [18, 29, 33, 36, 38, 60, 65], "your": [18, 31, 32, 35, 39, 60], "machin": [18, 22, 60, 62], "minut": [18, 60], "trainsampl": [18, 21, 60], "trainlabel": [18, 21, 60], "integ": [18, 32, 34, 38, 39, 40, 41, 60], "2000": [18, 26, 60], "chesttrain": [18, 21, 22, 60, 62], "npy": [18, 21, 22, 60, 62], "validsampl": [18, 21, 60], "validlabel": [18, 21, 60], "chestvalid": [18, 21, 22, 60, 62], "testsampl": [18, 21, 60], "testlabel": [18, 21, 60], "4000": [18, 60], "chesttest": [18, 21, 22, 60, 62], "447": [18, 60], "59": [18, 22, 25, 26, 27, 28, 60, 62, 63, 64], "its": [19, 20, 31, 34, 36, 38, 40, 41, 61], "baselin": [19, 20, 61], "case": [19, 20, 29, 32, 34, 35, 36, 37, 38, 40, 41, 61, 65], "perfect": [19, 20, 27, 28, 38, 61, 63, 64], "firebal": [19, 21, 24], "dataset": [19, 66], "basedset": [19, 21], "makefromfil": 19, "chestresnet": [19, 21], "fbm": [19, 21], "gpu": [19, 20, 21, 22, 31, 61, 62], "printlayersinfo": [19, 21], "flop": [19, 21], "format": [19, 21], "getflop": [19, 21], "initsess": [19, 21], "tensorflow": 19, "session": 19, "infer": [19, 20, 61], "chanest": [19, 21], "scope": [19, 21], "inshap": [19, 21], "comment": [19, 21], "outshap": [19, 21], "post": [19, 21], "act": [19, 21, 27, 63], "param": [19, 21], "in_tensor": [19, 21], "612": [19, 21, 24, 29, 36, 65], "14x612x2": [19, 21], "s1_l1_res2": [19, 21], "relu": [19, 20, 21, 22, 61, 62], "328": [19, 21, 24], "s1_l2_res1": [19, 21], "904": [19, 21], "s2_l1_conv": [19, 21], "ksp": [19, 21], "l2": [19, 21], "154": [19, 21], "out_reg": [19, 21], "386": [19, 21], "608": [19, 21, 24], "672": [19, 21, 26], "256": [19, 21, 24, 26], "metal": [19, 20, 22, 61, 62], "appl": 19, "m1": 19, "fed": [19, 20, 61], "packag": [19, 20, 21, 61], "rais": [19, 20, 24, 26, 36, 61], "valueerror": [19, 20, 24, 26, 61], "gird": [19, 20, 29, 36, 61, 65], "dx": [19, 20, 61], "modelin": [19, 20, 61], "batch": [19, 20, 21, 61], "modelout": [19, 20, 61], "inferbatch": 19, "estchan": [19, 20, 61], "ml": [19, 20, 61], "seen": [19, 20, 61], "better": [19, 20, 36, 39, 61], "chanestmethod": [19, 20, 27, 28, 61, 63, 64], "three": [19, 20, 21, 22, 24, 36, 38, 40, 61, 62], "nsimul": [19, 20, 27, 28, 61, 63, 64], "ber": [19, 20, 27, 61, 63, 66], "biterror": [19, 20, 27, 28, 61, 63, 64], "totalbit": [19, 20, 27, 28, 61, 63, 64], "store": [19, 20, 27, 28, 29, 36, 61, 63, 64, 65], "pdschindex": [19, 20, 27, 28, 29, 30, 38, 61, 63, 64, 65], "later": [19, 20, 27, 28, 29, 61, 63, 64, 65, 67], "estchannelmatrix": [19, 20, 27, 28, 29, 30, 61, 63, 64, 65], "elif": [19, 20, 22, 24, 61, 62], "noiseest": [19, 20, 27, 28, 61, 63, 64], "polarint": [19, 20, 27, 28, 36, 61, 63, 64], "kernel": [19, 20, 21, 22, 24, 27, 28, 36, 61, 62, 63, 64], "eqgrid": [19, 20, 27, 28, 29, 30, 36, 61, 63, 64, 65], "llrscale": [19, 20, 27, 28, 29, 30, 36, 38, 61, 63, 64, 65], "rxbit": [19, 20, 27, 61, 63], "gethardbitsfromgrid": [19, 20, 27, 38, 61, 63], "8d": [19, 20, 27, 28, 61, 63, 64], "mothod": [19, 20, 27, 28, 61, 63, 64], "xtick": [19, 20, 27, 28, 61, 63, 64], "yscale": [19, 20, 27, 28, 61, 63, 64], "log": [19, 20, 22, 27, 28, 29, 30, 34, 36, 37, 38, 61, 62, 63, 64, 65], "simul": [19, 20, 27, 28, 31, 33, 35, 37, 39, 61, 63, 64], "2545920": [19, 20, 27, 61, 63], "1036799": [19, 20, 61], "850716": [19, 20, 61], "606267": [19, 20, 61], "81": [19, 20, 22, 24, 26, 27, 61, 62, 63], "02": [19, 20, 25, 26, 61], "350625": [19, 20, 61], "145817": [19, 20, 61], "83": [19, 22, 34, 62], "1093175": 19, "894557": 19, "638622": 19, "388298": 19, "191185": 19, "1138786": [19, 20, 61], "968019": [19, 20, 61], "717426": [19, 20, 61], "448406": [19, 20, 61], "217902": [19, 20, 61], "requir": [20, 22, 38, 61, 62], "torch": [20, 22, 61, 62], "nn": [20, 22, 61, 62], "defin": [20, 21, 22, 29, 32, 34, 35, 36, 38, 39, 40, 61, 62, 65], "resnet": [20, 61, 66], "resblock": [20, 22, 61, 62], "__init__": [20, 22, 24, 26, 61, 62], "self": [20, 22, 24, 26, 61, 62], "indepth": [20, 22, 61, 62], "middepth": [20, 22, 61, 62], "outdepth": [20, 22, 61, 62], "stride": [20, 22, 61, 62], "super": [20, 22, 61, 62], "isinst": [20, 22, 61, 62], "conv1": [20, 22, 61, 62], "conv2d": [20, 22, 61, 62], "1x1": [20, 22, 61, 62], "conv": [20, 22, 61, 62], "bn1": [20, 22, 61, 62], "batchnorm2d": [20, 22, 61, 62], "conv2": [20, 22, 61, 62], "bn2": [20, 22, 61, 62], "conv3": [20, 22, 61, 62], "bn3": [20, 22, 61, 62], "inplac": [20, 22, 61, 62], "downsamplenet": [20, 22, 61, 62], "sequenti": [20, 22, 35, 61, 62], "bn": [20, 21, 22, 61, 62], "init": [20, 22, 61, 62], "ones_": [20, 22, 61, 62], "weight": [20, 22, 32, 34, 61, 62], "zeros_": [20, 22, 61, 62], "bia": [20, 22, 61, 62], "trunc_normal_": [20, 22, 61, 62], "prod": [20, 22, 61, 62], "improv": [20, 22, 61, 62], "like": [20, 22, 34, 40, 61, 62], "forward": [20, 22, 38, 61, 62], "chestnet": [20, 22, 61, 62], "res1": [20, 21, 22, 61, 62], "9x11": [20, 21, 22, 61, 62], "res2": [20, 21, 22, 61, 62], "3x7": [20, 21, 22, 61, 62], "res3": [20, 22, 61, 62], "cuda": [20, 22, 61, 62], "is_avail": [20, 22, 61, 62], "mp": [20, 22, 61, 62], "backend": [20, 22, 61, 62], "cpu": [20, 22, 61, 62], "move": [20, 22, 35, 61, 62], "target": [20, 22, 34, 61, 62], "chestmodel": [20, 61], "pth": [20, 22, 61, 62], "epoch": [20, 21, 22, 61, 62], "search": [20, 61], "choos": [20, 29, 35, 61, 65], "load_state_dict": [20, 61], "chestmodelweight": [20, 22, 61, 62], "map_loc": [20, 61], "weights_onli": [20, 61], "prev": [20, 61], "eval": [20, 22, 61, 62], "pytorch": [20, 22, 61, 62], "from_numpi": [20, 61], "float32": [20, 22, 61, 62], "no_grad": [20, 22, 61, 62], "bring": [20, 61], "back": [20, 36, 41, 61], "1083427": [20, 61], "887882": [20, 61], "637612": [20, 61], "389796": [20, 61], "197993": [20, 61], "neural": [21, 22, 62], "network": [21, 22, 38, 62], "structur": [21, 22, 62], "traind": [21, 22, 62], "validd": [21, 22, 62], "testd": [21, 22, 62], "printdsinfo": 21, "16000": [21, 22, 62], "2400": [21, 22, 26, 62], "grai": 21, "box": 21, "layersinfo": 21, "string": [21, 26, 32, 33, 34, 35, 36, 37, 38, 40, 41], "k_kernel_ixi": 21, "o_outsizes_i": 21, "s_stride_ixi_1": 21, "conv_k1_": 21, "s_o": 21, "o0_pv": 21, "conv_k": 21, "k_s1_o": 21, "o1_p": 21, "conv_k1_s1_o": 21, "o2": 21, "o2_pv": 21, "tensor_s14": 21, "res2_k11x9_o16": 21, "res1_k7x3_o16": 21, "conv_k3_o2_p": 21, "l2r": 21, "convolut": [21, 22, 62], "3x3": [21, 32], "regular": 21, "reg_s14": 21, "validationd": 21, "batchsiz": [21, 22, 62], "numepoch": [21, 22, 62], "learningr": [21, 22, 62], "002": 21, "00001": 21, "decai": [21, 22, 62], "exponenti": [21, 22, 37, 38, 62], "regfactor": 21, "dropoutkeep": 21, "optim": [21, 22, 62], "adam": [21, 22, 62], "sever": [21, 22, 33, 37, 41, 62], "hour": [21, 22, 62], "proce": [21, 22, 62], "loss": [21, 22, 62], "00200000009": 21, "0638999": 21, "249": [21, 24], "0086457": 21, "374": 21, "0057803": 21, "007": 21, "499": 21, "00190000003": 21, "0047276": 21, "005": 21, "003938": 21, "749": 21, "0035286": 21, "874": 21, "0034247": 21, "999": 21, "00180500001": 21, "0030548": 21, "1124": 21, "0029008": 21, "012": 21, "1249": 21, "0027836": 21, "004": 21, "1374": 21, "0028083": 21, "1499": 21, "00171474996": 21, "0028544": 21, "399": 21, "49874": 21, "00001015221": 21, "0014256": 21, "49999": 21, "001426": 21, "18354": 21, "evaluatemodel": 21, "process": [21, 29, 34, 35, 36, 37, 38, 41, 65], "nmse": 21, "326738": 21, "001526": 21, "rmse": 21, "033944": 21, "mae": 21, "026846": 21, "0015264276": 21, "033943895": 21, "026845945": 21, "32673806058297666": 21, "gmse": 21, "0015264275197926392": 21, "grmse": 21, "03906952162226509": 21, "gmae": 21, "026845943238406472": 21, "csvitem": 21, "bestms": 21, "bestepoch": [21, 22, 62], "traintim": 21, "001377510605379939": 21, "61710548401": 21, "freamework": [22, 62], "tool": [22, 62], "datetim": [22, 62], "util": [22, 27, 28, 29, 30, 62, 63, 64, 65], "dataload": [22, 62], "lr_schedul": [22, 62], "exponentiallr": [22, 62], "chestdataset": [22, 62], "__len__": [22, 62], "__getitem__": [22, 62], "idx": [22, 23, 24, 62], "loader": [22, 62], "traindl": [22, 62], "shuffl": [22, 39, 62], "validdl": [22, 62], "testdl": [22, 62], "pictur": [22, 62], "And": [22, 62], "loop": [22, 62], "trainepoch": [22, 62], "lossfunct": [22, 62], "modeldevic": [22, 62], "lossmin": [22, 62], "lossmean": [22, 62], "lossmax": [22, 62], "batchno": [22, 62], "batchsampl": [22, 62], "batchlabel": [22, 62], "comput": [22, 31, 62], "batchpredict": [22, 62], "backward": [22, 62], "backpropag": [22, 62], "zero_grad": [22, 62], "lossvalu": [22, 62], "numbatch": [22, 62], "0001": [22, 62], "mseloss": [22, 62], "tupl": [22, 23, 24, 26, 32, 35, 36, 38, 62], "lr1st": [22, 62], "lrlast": [22, 62], "lr": [22, 62], "lrschedul": [22, 62], "exp": [22, 62], "schedul": [22, 38, 62], "lowestloss": [22, 62], "4d": [22, 25, 26, 62], "10f": [22, 62], "get_last_lr": [22, 62], "validloss": [22, 62], "best": [22, 29, 62, 65], "far": [22, 62], "state_dict": [22, 62], "indic": [22, 32, 34, 35, 36, 38, 62], "timedelta": [22, 62], "131095": [22, 62], "018107": [22, 62], "000095": [22, 62], "007698": [22, 62], "004004": [22, 62], "000091": [22, 62], "003329": [22, 62], "002922": [22, 62], "000087": [22, 62], "002697": [22, 62], "002642": [22, 62], "000083": [22, 62], "002430": [22, 62], "002455": [22, 62], "000079": [22, 62], "002270": [22, 62], "002382": [22, 62], "000076": [22, 62], "002169": [22, 62], "002182": [22, 62], "000072": [22, 62], "002083": [22, 62], "002352": [22, 62], "000069": [22, 62], "002019": [22, 62], "002460": [22, 62], "000066": [22, 62], "001962": [22, 62], "002147": [22, 62], "000063": [22, 62], "001917": [22, 62], "001909": [22, 62], "000060": [22, 62], "001873": [22, 62], "002105": [22, 62], "000057": [22, 62], "001842": [22, 62], "001950": [22, 62], "000055": [22, 62], "001809": [22, 62], "001785": [22, 62], "000052": [22, 62], "001781": [22, 62], "000050": [22, 62], "001757": [22, 62], "002527": [22, 62], "000048": [22, 62], "001736": [22, 62], "001796": [22, 62], "000045": [22, 62], "001719": [22, 62], "001724": [22, 62], "000043": [22, 62], "001700": [22, 62], "001919": [22, 62], "000041": [22, 62], "001682": [22, 62], "001789": [22, 62], "000039": [22, 62], "001668": [22, 62], "001765": [22, 62], "000038": [22, 62], "001657": [22, 62], "001684": [22, 62], "000036": [22, 62], "001651": [22, 62], "001970": [22, 62], "000034": [22, 62], "001632": [22, 62], "001833": [22, 62], "000033": [22, 62], "001624": [22, 62], "001627": [22, 62], "000031": [22, 62], "001621": [22, 62], "001659": [22, 62], "000030": [22, 62], "001609": [22, 62], "001677": [22, 62], "000028": [22, 62], "001600": [22, 62], "001732": [22, 62], "000027": [22, 62], "001594": [22, 62], "001583": [22, 62], "000026": [22, 62], "001586": [22, 62], "001582": [22, 62], "000025": [22, 62], "001579": [22, 62], "001688": [22, 62], "000024": [22, 62], "001575": [22, 62], "001565": [22, 62], "000023": [22, 62], "001572": [22, 62], "001834": [22, 62], "000022": [22, 62], "001563": [22, 62], "001663": [22, 62], "000021": [22, 62], "001561": [22, 62], "001573": [22, 62], "000020": [22, 62], "001554": [22, 62], "000019": [22, 62], "001550": [22, 62], "001626": [22, 62], "000018": [22, 62], "001545": [22, 62], "001555": [22, 62], "000017": [22, 62], "001542": [22, 62], "000016": [22, 62], "001540": [22, 62], "001564": [22, 62], "001534": [22, 62], "001556": [22, 62], "000015": [22, 62], "001532": [22, 62], "000014": [22, 62], "001529": [22, 62], "001527": [22, 62], "001537": [22, 62], "000013": [22, 62], "001547": [22, 62], "000012": [22, 62], "001521": [22, 62], "001553": [22, 62], "001513": [22, 62], "000011": [22, 62], "001517": [22, 62], "001514": [22, 62], "001499": [22, 62], "001512": [22, 62], "001496": [22, 62], "000009": [22, 62], "001509": [22, 62], "001511": [22, 62], "001507": [22, 62], "001502": [22, 62], "000008": [22, 62], "001508": [22, 62], "001525": [22, 62], "001506": [22, 62], "001504": [22, 62], "001497": [22, 62], "000007": [22, 62], "001503": [22, 62], "001489": [22, 62], "001501": [22, 62], "001576": [22, 62], "001498": [22, 62], "000006": [22, 62], "001500": [22, 62], "001485": [22, 62], "63": [22, 26, 62], "001494": [22, 62], "000005": [22, 62], "001493": [22, 62], "001490": [22, 62], "001483": [22, 62], "000004": [22, 62], "001492": [22, 62], "001482": [22, 62], "001480": [22, 62], "001484": [22, 62], "001488": [22, 62], "001486": [22, 62], "001487": [22, 62], "000003": [22, 62], "001477": [22, 62], "76": [22, 24, 62], "001474": [22, 62], "000002": [22, 62], "001479": [22, 62], "001481": [22, 62], "001475": [22, 62], "001471": [22, 62], "001473": [22, 62], "001472": [22, 62], "001470": [22, 62], "001478": [22, 62], "001469": [22, 62], "testloss": [22, 62], "6f": [22, 62], "001460": [22, 62], "remov": [23, 24, 28, 29, 30, 34, 41, 64, 65], "y": [23, 24, 32], "csi": [23, 24, 31, 36, 38], "removeneighbor": [23, 24], "bmp": [23, 24], "int32": [23, 26], "newidx": 23, "csireport": [24, 26], "symbollen": [24, 33], "9360000": 24, "16384": 24, "occupi": [24, 38], "fm": 24, "freq": 24, "insid": [24, 40], "34944": 24, "33696": 24, "1248": 24, "getnumel": [24, 26, 32], "int16": [24, 26], "16395": 24, "estim": [24, 27, 28, 30, 31, 36, 37, 38, 40, 63, 64, 66], "csirssetlist": [24, 40], "16388": 24, "152077454384459e": 24, "004140206755751211": 24, "0012053535933496415": 24, "8658583014719393e": 24, "06177877": 24, "00491705j": 24, "06175917": 24, "00506486j": 24, "06173923": 24, "00521265j": 24, "06171894": 24, "0053604j": 24, "0616983": 24, "00550813j": 24, "06167732": 24, "00565583j": 24, "061656": 24, "00580349j": 24, "06163403": 24, "00595314j": 24, "06161201": 24, "00610074j": 24, "06158965": 24, "00624831j": 24, "06156694": 24, "00639584j": 24, "06154389": 24, "00654333j": 24, "06152049": 24, "00669079j": 24, "06149675": 24, "00683821j": 24, "06072263": 24, "00625106j": 24, "p1idx": 24, "109": 24, "112": 24, "113": 24, "116": 24, "117": 24, "121": 24, "129": 24, "133": 24, "136": 24, "141": 24, "144": 24, "145": [24, 28, 64], "148": 24, "149": [24, 26], "152": 24, "153": 24, "156": 24, "157": [24, 26], "160": [24, 28, 40, 64], "161": 24, "164": [24, 41], "165": 24, "168": 24, "169": 24, "172": [24, 26], "173": 24, "176": 24, "177": [24, 26], "181": [24, 26], "184": 24, "188": 24, "189": [24, 26], "205": 24, "208": 24, "209": [24, 26], "212": [24, 29, 31, 34, 65], "213": 24, "216": [24, 26], "217": 24, "220": [24, 26], "221": 24, "224": 24, "225": 24, "228": 24, "229": 24, "232": 24, "233": 24, "236": 24, "237": 24, "241": 24, "245": 24, "248": 24, "252": [24, 26], "253": 24, "257": 24, "260": 24, "261": 24, "264": [24, 26], "265": 24, "268": 24, "269": 24, "272": 24, "273": 24, "276": 24, "277": 24, "281": [24, 26], "284": 24, "285": 24, "289": 24, "292": [24, 26], "293": 24, "296": 24, "297": 24, "301": 24, "304": 24, "305": 24, "308": [24, 26], "309": 24, "312": 24, "313": 24, "316": [24, 36], "317": 24, "320": [24, 26, 28, 40, 64], "321": 24, "324": [24, 26], "325": 24, "329": 24, "332": 24, "333": 24, "336": [24, 26], "337": [24, 26], "340": 24, "341": 24, "344": 24, "345": 24, "348": 24, "349": 24, "352": [24, 26], "353": 24, "356": 24, "357": 24, "361": 24, "364": [24, 26], "365": 24, "369": 24, "372": 24, "373": 24, "376": 24, "377": 24, "380": 24, "381": 24, "385": [24, 26], "388": 24, "389": 24, "393": 24, "396": [24, 26], "397": 24, "401": 24, "404": 24, "405": 24, "408": 24, "409": 24, "412": 24, "413": 24, "416": 24, "417": 24, "421": 24, "424": [24, 26], "425": 24, "428": 24, "429": 24, "432": [24, 26], "433": 24, "436": 24, "437": 24, "440": [24, 26], "441": 24, "444": 24, "445": [24, 26], "448": 24, "452": 24, "453": 24, "456": 24, "457": 24, "460": 24, "461": 24, "464": 24, "465": 24, "468": 24, "469": 24, "472": 24, "473": 24, "476": 24, "477": 24, "480": [24, 26, 33], "481": 24, "484": 24, "485": 24, "488": 24, "489": 24, "492": 24, "493": 24, "496": 24, "497": 24, "501": 24, "504": [24, 26], "505": 24, "508": 24, "509": 24, "513": 24, "516": 24, "517": 24, "520": 24, "521": 24, "524": 24, "525": 24, "528": [24, 26], "529": 24, "532": 24, "533": 24, "536": 24, "537": 24, "540": [24, 26], "541": 24, "544": 24, "545": 24, "548": 24, "549": 24, "552": 24, "553": 24, "556": 24, "557": 24, "560": [24, 26], "561": 24, "564": 24, "565": 24, "568": 24, "569": 24, "572": 24, "573": 24, "577": 24, "580": 24, "581": 24, "584": 24, "585": 24, "588": 24, "589": 24, "592": 24, "593": 24, "596": 24, "597": 24, "600": [24, 26, 35], "601": 24, "604": [24, 26], "605": 24, "609": 24, "613": 24, "616": [24, 26], "617": 24, "620": 24, "621": 24, "codebooktyp": [24, 26], "type1sp": [24, 26], "codebookmod": [24, 26], "csirsindex": 24, "p0idx": 24, "csirsindexesp0": 24, "hatcsir": 24, "codebook": [24, 25, 26], "getcodebook": [24, 26], "5j": [24, 25, 26], "3536": 24, "3536j": 24, "attributeerror": 24, "traceback": [24, 26], "most": [24, 26, 32, 35, 38, 40], "recent": [24, 26], "gt": [24, 26], "opensourc": 24, "ongithub": 24, "wireless": [24, 31, 34, 38, 40], "newproject": 24, "ongit": 24, "csifeedback": 24, "py": [24, 33, 34, 36, 38, 39, 40, 41], "219": [24, 26], "i1": 24, "i2": 24, "type1spindex": 24, "218": 24, "gettype1spprecod": 24, "222": 24, "type1mp": 24, "415": 24, "vlm": 24, "414": 24, "i11": 24, "i12": 24, "i13": 24, "attribut": 24, "n1": [24, 26], "n2": [24, 26], "kwarg": [24, 32, 33, 34, 35, 36, 38, 40, 41], "179": 24, "subbands": 24, "subbandsizevalu": 24, "lt": 24, "subband": 24, "less": [24, 33, 34, 35, 37, 38], "182": 24, "183": 24, "nonetyp": 24, "cb": [24, 26, 34], "getsinr": [25, 26], "heff": [25, 26], "matmul": [25, 26], "u": [25, 26, 33], "vh": [25, 26], "linalg": [25, 26], "svd": [25, 26], "full_matric": [25, 26], "noisyinv": [25, 26], "expand": [25, 26, 31], "dimens": [25, 26, 32, 36, 38], "witch": [25, 26], "elementwis": [25, 26], "boadcast": [25, 26], "dim": [25, 26], "gamma": [25, 26, 32, 35], "4j": [25, 26], "8j": [25, 26], "9j": [25, 26], "2j": [25, 26], "6j": [25, 26], "3j": [25, 26], "7j": [25, 26], "1234": [25, 26], "99168153": [25, 26], "359": [25, 26], "63323565": [25, 26], "56863075": [25, 26], "35297339": [25, 26], "70391124": [25, 26], "05619982": [25, 26], "904854": [25, 26], "78160181": [25, 26], "57413193": [25, 26], "42505049": [25, 26], "nvar": [25, 26], "1i": [25, 26], "nr5g": 25, "intern": [25, 35, 38, 39, 40, 41], "nrprecodedsinr": 25, "0e": 25, "379916815287058": 25, "596332356494885": 25, "045686307544590": 25, "713529733922738": 25, "017039112368622": 25, "370561998195295": 25, "009048539994034": 25, "267816018069208": 25, "005741319256007": 25, "224250504865427": 25, "getsinr2": 25, "ncb": 25, "sinr": [25, 26], "40883222": 25, "52340496": 25, "2475617": 25, "52864147": 25, "76208101": 25, "56866664": 25, "62906288": 25, "30651113": 25, "57440452": 25, "19946038": 25, "textenumerrormsg": 26, "enumerrormsg": 26, "formatstr": 26, "validaterang": 26, "context": [26, 31, 36], "varnam": 26, "inspect": 26, "getouterfram": 26, "currentfram": 26, "getframeinfo": 26, "code_context": 26, "strip": 26, "find": [26, 29, 35, 41, 65], "split": 26, "fstr": 26, "special": 26, "comb": 26, "cl": 26, "122": 26, "my": 26, "a123": 26, "par": 26, "shahab": 26, "codebooksallow": 26, "110101": 26, "restrict": 26, "010101": 26, "uum": 26, "uul": 26, "outer": 26, "cd": [26, 67], "162": 26, "198": 26, "231": 26, "270": 26, "330": 26, "315": 26, "350": 26, "378": 26, "462": 26, "640": [26, 40], "704": 26, "660": 26, "720": [26, 33, 35], "770": 26, "840": 26, "880": 26, "648": 26, "792": 26, "864": 26, "756": 26, "924": 26, "1008": 26, "1056": 26, "486": 26, "594": 26, "567": 26, "693": 26, "810": 26, "990": 26, "1080": 26, "945": 26, "1050": 26, "1155": 26, "1260": 26, "1320": 26, "1440": 26, "972": 26, "1188": 26, "1296": 26, "1134": 26, "1386": 26, "1512": 26, "1584": 26, "1728": 26, "1120": 26, "1232": 26, "1344": 26, "1280": 26, "1408": 26, "1400": 26, "1540": 26, "1600": 26, "1760": 26, "1920": 26, "1848": 26, "2016": 26, "1350": 26, "1500": 26, "1650": 26, "1800": 26, "1575": 26, "1750": 26, "1925": 26, "2100": 26, "2200": 26, "1980": 26, "2160": 26, "1890": 26, "2310": 26, "2520": 26, "2640": 26, "2880": 26, "vml": 26, "vmlphi": 26, "147": 26, "ambigu": 26, "cbrirestrict": 26, "11110110": 26, "typeerror": 26, "286": 26, "287": 26, "pagemtim": 26, "sb": 26, "vb": 26, "pagesvd": 26, "econ": 26, "vector": [26, 32, 36], "a1": 26, "a2": 26, "squeez": 26, "pagetranspos": 26, "syntaxerror": 26, "syntax": 26, "784": 26, "634": 26, "823": 26, "08694782e": 26, "21976428e": 26, "72022958e": 26, "78794263e": 26, "13746866e": 26, "23793807e": 26, "60318900e": 26, "58782552e": 26, "35535122e": 26, "48782490e": 26, "51614857e": 26, "43485094e": 26, "29383495e": 26, "00836679e": 26, "57021497e": 26, "52118989e": 26, "07846033": 26, "23394205": 26, "38942377": 26, "54490549": 26, "7003872": 26, "77061273": 26, "49524854": 26, "21988435": 26, "05547983": 26, "33084402": 26, "06215885": 26, "22342462": 26, "3846904": 26, "54595617": 26, "70722194": 26, "77209862": 26, "50008143": 26, "22806424": 26, "04395294": 26, "31597013": 26, "05908594": 26, "22143288": 26, "38377981": 26, "54612675": 26, "70847368": 26, "77233985": 26, "50096655": 26, "22959324": 26, "04178007": 26, "31315338": 26, "0577943": 26, "22059482": 26, "38339534": 26, "54619585": 26, "70899637": 26, "77243758": 26, "50133614": 26, "2302347": 26, "04086674": 26, "31196819": 26, "298": 26, "myfun": 26, "argv": 26, "arg": 26, "hamidi": 26, "getcomb": 26, "listi": 26, "meshgrid": 26, "q": 26, "evalu": [27, 31, 35, 63, 66], "scheme": [27, 34, 37, 38, 63], "minms": [27, 63], "maxms": [27, 63], "alreadi": [27, 28, 29, 34, 63, 64, 65], "qam": [27, 29, 63, 65], "mse1": [27, 63], "fest": [27, 63], "fact": [27, 63], "mse2": [27, 63], "758389": [27, 63], "478555": [27, 63], "208018": [27, 63], "42283": [27, 63], "2789": [27, 63], "884330": [27, 63], "588715": [27, 63], "300615": [27, 63], "91421": [27, 63], "11869": [27, 63], "708": [27, 63], "ebnodb": [28, 64], "eb": [28, 64], "490": [28, 29, 30, 64, 65], "getdecod": [28, 29, 30, 34, 64, 65], "datatimeratio": [28, 33, 64], "blockerror": [28, 64], "totalblock": [28, 64], "txblocksiz": [28, 29, 30, 34, 64, 65], "gettxblocks": [28, 29, 30, 34, 38, 64, 65], "txblock": [28, 29, 30, 34, 64, 65], "getllrsfromgrid": [28, 29, 30, 34, 38, 64, 65], "decodedblock": [28, 29, 30, 34, 64, 65], "numit": [28, 29, 34, 64, 65], "decodedtxblockwithcrc": [28, 29, 30, 34, 64, 65], "merg": [28, 29, 34, 64, 65], "decodedtxblock": [28, 29, 30, 34, 64, 65], "2417280": [28, 64], "323481": [28, 64], "18663": [28, 64], "469554": [28, 64], "404225": [28, 64], "280051": [28, 64], "319": [28, 64], "133393": [28, 64], "1518": [28, 64], "loggraph": [28, 64], "ebno2snr": [28, 64], "physic": [29, 31, 34, 36, 65], "share": [29, 36, 65], "demonstr": [29, 65], "refer": [29, 31, 32, 33, 34, 35, 36, 38, 39, 41, 65], "tr": [29, 31, 32, 33, 34, 35, 37, 38, 65], "901": [29, 31, 32, 35, 65], "minimum": [29, 36, 40, 41, 65], "mmse": [29, 36, 65], "cancel": [29, 34, 65], "extract": [29, 34, 36, 37, 38, 40, 65], "likelihood": [29, 30, 34, 36, 37, 38, 65], "bitstream": [29, 34, 37, 39, 65], "newradium": [29, 65], "cover": [29, 33, 65], "mhz": [29, 65], "18360000": [29, 65], "qam16": [29, 65], "setdmrd": [29, 65], "although": [29, 35, 65], "wide": [29, 65], "band": [29, 33, 35, 65], "narrow": [29, 65], "provid": [29, 31, 32, 34, 35, 36, 38, 39, 40, 41, 65], "desir": [29, 32, 34, 38, 65], "transmiss": [29, 34, 35, 36, 38, 40, 41, 65], "capac": [29, 65], "what": [29, 36, 38, 65], "30216": [29, 65], "63648": [29, 65], "17136": [29, 65], "1224": [29, 65], "15912": [29, 65], "side": [29, 32, 38, 40, 41, 65], "somehow": [29, 32, 65], "nlo": [29, 65], "small": [29, 38, 39, 65], "mimo": [29, 35, 38, 65], "transmitt": [29, 35, 36, 38, 40, 41, 65], "51x12": [29, 65], "respect": [29, 32, 65], "simpli": [29, 65], "f0": [29, 36, 41, 65], "pring": [29, 65], "usual": [29, 32, 34, 35, 36, 38, 41, 65], "15447": [29, 65], "awgn": [29, 36, 38, 39, 41, 65], "involv": [29, 31, 35, 40, 65], "point": [29, 32, 33, 37, 41, 65], "correl": [29, 35, 36, 41, 65], "shortcut": [29, 36, 65], "go": [29, 31, 65], "happen": [29, 65], "sometim": [29, 65], "conveni": [29, 65], "avid": [29, 65], "That": [29, 40, 65], "close": [29, 65], "procedur": [29, 34, 65], "readi": [29, 34, 35, 38, 65], "separ": [29, 32, 36, 38, 65], "23232": [29, 65], "7744": [29, 65], "wich": [29, 65], "txblockcrcmatch": [29, 30, 34, 65], "30240": [29, 65], "randomli": [29, 35, 65], "ldpc": [30, 31, 38], "pre": [30, 38], "recoveri": [30, 34], "stream": [30, 38], "python": [31, 39, 67], "librari": [31, 32], "design": [31, 34], "simplifi": [31, 35], "latest": 31, "Its": 31, "architectur": 31, "hide": 31, "stage": 31, "swiftli": 31, "develop": 31, "research": 31, "often": 31, "focus": 31, "particular": 31, "entir": 31, "compliant": [31, 32], "consum": 31, "cumbersom": 31, "come": [31, 40], "while": [31, 34, 40], "custom": [31, 34, 35], "achiev": 31, "capabl": [31, 66], "high": [31, 34, 35, 38, 40], "hardwar": 31, "setup": 31, "costli": 31, "basic": [31, 34], "good": 31, "comprehens": 31, "playground": 31, "experi": 31, "numer": 31, "form": [31, 32, 34, 35, 36, 38], "jupyt": [31, 66], "explain": [31, 34, 35, 36, 40, 66], "api": [31, 32, 34, 35, 40, 66], "detail": [31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 66], "offer": 31, "versatil": 31, "suit": 31, "streamlin": 31, "summari": 31, "ad": [31, 36, 40, 41], "effici": [31, 34, 35], "specif": [31, 32, 35, 36, 39], "precis": [31, 34], "cyclic": [31, 33, 41], "prefix": [31, 33, 41], "pt": 31, "align": 31, "valuabl": 31, "insight": 31, "de": [31, 34, 36], "descrambl": [31, 38], "analysi": 31, "gpp": 32, "easili": 32, "charactrist": 32, "antennabas": 32, "deriv": [32, 34, 35, 38, 39, 40], "getsteeringvector": 32, "steer": 32, "respons": [32, 35, 36], "given": [32, 33, 34, 35, 36, 37, 38, 40, 41], "zenith": [32, 35], "except": [32, 40], "thrown": 32, "combin": [32, 34], "numel": 32, "numtheta": 32, "numphi": 32, "getfieldpattern": 32, "pattern": [32, 38], "around": 32, "scaler": 32, "getrotationmatrix": 32, "rotat": 32, "coordin": [32, 35, 36], "local": [32, 40], "global": [32, 35, 36, 39, 41], "system": [32, 38], "equat": [32, 36], "alpha": [32, 35], "bear": [32, 35], "downtilt": 32, "slant": [32, 35], "radian": [32, 35], "getelementsfield": 32, "handl": [32, 35, 37], "convers": [32, 36, 41], "cluster": [32, 35], "numantenna": 32, "locfactor": 32, "getpolarizedfield": 32, "matric": 32, "desier": 32, "beamform": 32, "arrayfieldv": 32, "arrayfieldh": 32, "f_v": 32, "f_h": 32, "getpowerpattern": 32, "frac": [32, 33, 34, 36, 41], "p_": 32, "avg": 32, "integr": 32, "web": 32, "page": [32, 66], "pi": 32, "int_0": 32, "sin": 32, "d_": 32, "dbi": 32, "isotrop": [32, 35], "multi": [32, 35], "purpos": [32, 35], "boolean": [32, 33, 34, 35, 36, 37, 38, 40, 41], "being": [32, 34, 35, 38, 40, 41], "view": 32, "control": [32, 34, 36, 38, 39, 40], "cut": [32, 36], "common": [32, 33, 38, 40], "dict": [32, 33, 34, 35, 36, 38, 40, 41], "option": [32, 33, 34, 35, 38, 40], "enough": 32, "z": 32, "freqrang": 32, "oper": [32, 38, 39], "polangl": 32, "pure": 32, "polmodel": 32, "tr38": 32, "theta_": 32, "3db": 32, "phi_": 32, "verticalsidelobeattenu": 32, "lobe": 32, "sla_v": 32, "a_": 32, "mainmaxgain": 32, "main": [32, 38], "indent": [32, 33, 34, 35, 36, 37, 38, 40, 41], "getstr": [32, 33, 34, 35, 36, 37, 38, 40, 41], "charact": [32, 33, 34, 35, 36, 37, 38, 40, 41], "otherwis": [32, 33, 34, 35, 36, 37, 38, 40, 41], "noth": [32, 33, 34, 35, 36, 37, 38, 40, 41], "posinarrai": 32, "clone": 32, "copi": 32, "represent": 32, "rectangular": 32, "organ": 32, "plain": [32, 36], "individu": [32, 40], "along": [32, 35, 36], "distanc": 32, "wave": [32, 38, 40], "By": [32, 34, 35, 36, 38, 40], "half": 32, "awai": 32, "singli": 32, "dualli": 32, "either": [32, 33, 34, 38, 40], "center": [32, 36], "parent": 32, "getel": 32, "elementrc": 32, "getelementposit": 32, "ref": 32, "repres": [32, 34, 36, 38, 40, 41], "getallposit": 32, "maxsiz": 32, "standalon": 32, "larg": 32, "height": 32, "tick": 32, "allel": 32, "mypanel": 32, "yield": 32, "spece": 32, "across": [32, 38], "within": [32, 38], "panelrc": 32, "elementinpanelrc": 32, "allpanel": 32, "myarrai": 32, "bandwidthpart": [33, 35, 36, 37, 38, 40, 41], "associ": [33, 36, 38, 40], "subset": 33, "contigu": 33, "numerologi": 33, "crb": 33, "cptype": [33, 38], "extend": 33, "calcualt": 33, "At": [33, 41], "unus": 33, "guard": 33, "ge": 33, "symbolspersubfram": [33, 36], "slotnoinfram": [33, 38], "slotnoinsubfram": 33, "identifi": [33, 38, 40], "frameno": [33, 38], "increment": 33, "amount": [33, 35, 36, 41], "spent": 33, "user": [33, 36, 38], "spend": 33, "doesn": 33, "carri": [33, 36], "useredesc": [33, 36, 38], "describ": [33, 36, 38], "correctli": [33, 36, 38], "getcptim": 33, "symidxinsubfram": 33, "getcplen": 33, "getsymtim": 33, "getslottim": 33, "slotindex": 33, "getslotlen": 33, "getslotsdur": 33, "getslotssampl": 33, "getnumslotsforsampl": 33, "getnumsymbolsforsampl": 33, "uplink": [33, 34, 35, 36, 38, 40], "automat": [33, 34, 36, 38, 40], "curbwpindex": 33, "framenorel": 33, "remaind": 33, "divid": 33, "boundari": [33, 35, 38], "chancodebas": 34, "encapsul": [34, 35, 36, 38, 40, 41], "hierarchi": 34, "ldpcbase": 34, "low": [34, 35, 36, 38, 40], "polarbas": 34, "classmethod": 34, "getcrc": 34, "poli": 34, "polynomi": 34, "1d": [34, 38], "1100001": 34, "111000100001": 34, "10001000000100001": 34, "1100001100100110011111011": 34, "24b": 34, "1100000000000000001100011": 34, "1101100101011000100010111": 34, "correct": [34, 38], "new": [34, 35, 36, 39, 40, 41], "choic": [34, 39], "determin": [34, 35, 38, 40, 41], "8448": 34, "3840": 34, "h_": 34, "bg": 34, "bpsk": [34, 37, 38], "64qam": [34, 37, 38], "256qam": [34, 37, 38], "1024qam": [34, 37, 38], "redund": 34, "hybrid": 34, "request": 34, "harq": 34, "buffer": 34, "lbrm": 34, "maxcodeblocks": 34, "k_": 34, "numcodeblock": 34, "lift": 34, "z_c": 34, "i_": 34, "4384765625": 34, "inherit": [34, 35], "break": 34, "smaller": [34, 36, 39], "manag": 34, "fill": 34, "whose": 34, "2z_c": 34, "kept": 34, "concatcb": 34, "lceil": 34, "rceil": 34, "addcrc": 34, "easier": 34, "exist": 34, "opposit": [34, 38], "ldcp": 34, "revers": 34, "typic": [34, 35, 40], "properli": 34, "rxblock": 34, "exact": 34, "Not": 34, "rxcodeblock": 34, "onlyinfobit": 34, "outputbelief": 34, "belief": 34, "inspir": 34, "mostli": [34, 35, 40], "video": 34, "written": 34, "scratch": [34, 35], "accur": [34, 35, 37, 38], "slower": [34, 35, 37, 38], "final": [34, 36], "longer": [34, 36, 41], "rxdecodedword": 34, "assembl": 34, "verifi": 34, "crccheckresult": 34, "uci": 34, "broadcast": 34, "pbch": 34, "flag": [34, 35, 40], "whether": 34, "bil": 34, "10241": 34, "n_": 34, "il": 34, "pc": 34, "mai": [34, 35, 38, 39, 40, 41], "reliabl": 34, "wm": 34, "seg": 34, "ratematchedblocklen": 34, "e_r": 34, "msgbit": 34, "frozenbit": 34, "frozen": 34, "pcbit": 34, "setios": 34, "chang": [34, 38, 39], "reus": 34, "anyth": 34, "success": 34, "extrins": 34, "hyperbol": 34, "tangent": 34, "rxllrblock": 34, "recurs": 34, "access": [34, 35, 36, 38, 40], "technologi": [34, 40], "erik": [34, 40], "dahlman": [34, 40], "stefan": [34, 40], "parkval": [34, 40], "johan": [34, 40], "skold": [34, 40], "tal": 34, "vardi": 34, "ieee": 34, "transact": 34, "theori": 34, "vol": 34, "2213": 34, "2226": 34, "2015": 34, "tap": 35, "tdlchannel": 35, "channelbas": [35, 41], "subclass": 35, "higher": 35, "level": 35, "almost": 35, "interact": 35, "connect": 35, "nanosecond": 35, "veryshort": 35, "short": [35, 36], "nomin": 35, "verylong": 35, "static": 35, "kfactor": 35, "diagnost": 35, "stop": 35, "fix": 35, "mention": [35, 40], "coher": [35, 40], "curtim": 35, "increas": 35, "reset": 35, "sequenc": [35, 38, 40, 41], "applytogrid": 35, "inputsign": [35, 41], "keepnt": 35, "closer": 35, "impuls": [35, 36], "cir": [35, 36], "consid": [35, 36, 38], "millisecond": 35, "situat": 35, "getpathgain": 35, "getpathfilt": 35, "coeffici": 35, "profil": 35, "movement": 35, "station": 35, "stationari": 35, "tilt": 35, "rxorient": 35, "xpolpow": 35, "10db": 35, "departur": 35, "arriv": 35, "overrid": 35, "confus": [35, 36], "kfactorlo": 35, "lo": 35, "rememb": 35, "thei": [35, 36, 38, 40, 41], "accord": [35, 38], "annex": 35, "There": [35, 40], "predefin": 35, "unlik": 35, "a30": 35, "b100": 35, "c60": 35, "c300": 35, "d30": 35, "nano": 35, "fr1": 35, "fr2": 35, "txantennacount": 35, "rxantennacount": 35, "mimocorrel": 35, "medium": 35, "mediuma": 35, "mediumb": 35, "copolar": 35, "crosspolar": 35, "correlationmatrix": 35, "sostyp": 35, "sinusoid": 35, "variat": 35, "techniqu": 35, "gmeds1": 35, "introduc": 35, "paper": 35, "uncorrel": 35, "rayleigh": 35, "fade": 35, "xiao": 35, "novel": 35, "rician": 35, "stateless": 35, "smooth": 35, "transit": 35, "sosnumsin": 35, "keep": [36, 40], "easi": [36, 38, 39, 40], "white": [36, 38, 39, 41], "gaussian": [36, 38, 39, 41], "dimension": [36, 37, 38, 41], "avoid": [36, 39], "term": 36, "unknown": 36, "pdcch": [36, 38, 40], "pusch": [36, 38, 40], "pucch": [36, 38, 40], "rx_data": 36, "numsubcarri": 36, "numsymbol": 36, "present": [36, 38], "transfer": [36, 41], "addition": [36, 40], "few": 36, "myre": 36, "mygrid": [36, 38], "dmrsvalu": [36, 38], "write": 36, "707": 36, "707j": 36, "948": 36, "948j": 36, "316j": 36, "retypeat": 36, "retypestr": [36, 38], "retriev": [36, 38], "dmrsidx": [36, 38], "reservedrbset": [36, 38], "reservedremap": [36, 38], "differnt": 36, "csir": [36, 38, 40], "dmrsvalues1": 36, "dmrsvalues2": 36, "grouprb": [36, 38], "groupf": [36, 38], "entri": [36, 38], "window": [36, 41], "baseband": [36, 41], "up": [36, 40], "applywindow": [36, 41], "hf": 36, "tri": 36, "similar": [36, 38, 40, 41], "rsinfo": 36, "meancdm": 36, "taken": 36, "y_p": 36, "h_p": 36, "odot": 36, "n_p": 36, "qquad": 36, "wise": 36, "divis": 36, "cosin": 36, "cartesian": 36, "cost": 36, "extrapol": 36, "interp1d": 36, "kind": 36, "quadrat": 36, "thin_plate_splin": 36, "rbf": 36, "rbfinterpol": 36, "multiquadr": 36, "estnoisevar": 36, "multipli": [36, 41], "deviat": [36, 39, 41], "formula": [36, 41], "sigma": [36, 41], "2_": [36, 41], "n_r": [36, 41], "rangen": [36, 39, 41], "color": 36, "drawn": 36, "vice": 37, "versa": 37, "well": 37, "constel": 37, "lookup": 37, "usemax": [37, 38], "logarithm": [37, 38], "deliv": 38, "gnb": 38, "qualiti": 38, "fair": 38, "consider": 38, "enhanc": 38, "robust": 38, "among": 38, "assist": 38, "ensur": 38, "recept": 38, "track": [38, 40], "suppress": [38, 40], "particularli": [38, 40], "millimet": [38, 40], "regardless": 38, "fraction": 38, "veri": 38, "latenc": 38, "portno": 38, "symno": 38, "reno": 38, "rule": 38, "flexibl": [38, 40], "sliv": 38, "consecut": [38, 40], "symstart": 38, "symlen": 38, "bundl": 38, "radio": 38, "temporari": 38, "golden": 38, "neither": 38, "numcw": 38, "slotmap": 38, "constructor": 38, "newli": 38, "mypdsch": 38, "getnumresfromindex": 38, "asid": 38, "dedic": 38, "virtual": 38, "vrb": 38, "rare": 38, "descript": 38, "sens": 38, "deinterleav": 38, "demap": 38, "produc": 38, "datasymbols1": 38, "datareindex": 38, "datasymbols2": 38, "xoverhead": 38, "scalefactor": 38, "overhead": 38, "oh": 38, "behavior": [39, 40], "permut": 39, "congruenti": 39, "pcg64": 39, "38382838": 39, "35261486j": 39, "10004801": 39, "5325556j": 39, "20456608": 39, "58387099j": 39, "85796067": 39, "15164351j": 39, "getgener": 39, "default_rng": 39, "mygen": 39, "mt19937": 39, "mersenn": 39, "twister": 39, "unpredict": 39, "pcg64dxsm": 39, "dxsm": 39, "philox": 39, "rng": 39, "sfc64": 39, "fast": [39, 41], "chaotic": 39, "prng": 39, "randomst": 39, "legaci": 39, "69646919": 39, "28613933": 39, "22685145": 39, "55131477": 39, "71946897": 39, "rand": 39, "6965": 39, "2861": 39, "2269": 39, "5513": 39, "7195": 39, "strongli": 39, "recommend": 39, "bitgener": 39, "codebas": 39, "affect": [39, 41], "approach": [39, 41], "quick": 39, "constant": 39, "myrandint": 39, "prefer": 39, "unchang": 39, "overal": [40, 41], "simplic": 40, "zpcsir": 40, "zpcsirsset": 40, "csirslist": 40, "resourcetyp": 40, "semipersist": 40, "nzpcsirs1": 40, "nzpcsirs2": 40, "nzpcsirsset": 40, "quickli": 40, "nz": 40, "t_": 40, "rho": 40, "bitmap": 40, "beta_": 40, "pseudo": 40, "l_0": 40, "l_1": 40, "bar": 40, "k_0": 40, "k_1": 40, "k_2": 40, "k_3": 40, "myset": 40, "rsid": 40, "resourcesetid": 40, "aperiod": 40, "trigger": 40, "semi": 40, "persist": 40, "occur": 40, "why": 40, "until": 40, "deactiv": 40, "addcsiresourceset": 40, "intend": 40, "oscil": 40, "soon": 40, "mandatori": 40, "technic": 40, "65535": 40, "scramblingid0": 40, "scramblingid1": 40, "ptrsenabl": 40, "due": 40, "mcsi": 40, "mcs1": 40, "mcs2": 40, "mcs3": 40, "imc": 40, "nrbi": 40, "nrb0": 40, "nrb1": 40, "mc": 40, "extent": 41, "fourier": 41, "numpad": 41, "entireti": 41, "timingoffset": 41, "shorter": 41, "cplen": 41, "cpoffsetratio": 41, "mid": 41, "open": 66, "plai": 66, "bler": 66, "train": 66, "python3": 67, "venv": 67, "ve": 67, "sourc": 67, "bin": 67, "pip": 67, "upgrad": 67, "setuptool": 67}, "objects": {"neoradium": [[32, 0, 0, "-", "antenna"], [33, 0, 0, "-", "carrier"], [35, 0, 0, "-", "cdl"], [34, 0, 0, "-", "chancodebase"], [35, 0, 0, "-", "channel"], [40, 0, 0, "-", "csirs"], [40, 0, 0, "-", "dmrs"], [36, 0, 0, "-", "grid"], [34, 0, 0, "-", "ldpc"], [37, 0, 0, "-", "modulation"], [38, 0, 0, "-", "pdsch"], [34, 0, 0, "-", "polar"], [39, 0, 0, "-", "random"], [35, 0, 0, "-", "tdl"], [41, 0, 0, "-", "waveform"]], "neoradium.antenna": [[32, 1, 1, "", "AntennaArray"], [32, 1, 1, "", "AntennaBase"], [32, 1, 1, "", "AntennaElement"], [32, 1, 1, "", "AntennaPanel"]], "neoradium.antenna.AntennaArray": [[32, 2, 1, "", "allElements"], [32, 2, 1, "", "allPanels"], [32, 2, 1, "", "getAllPositions"], [32, 2, 1, "", "getElement"], [32, 2, 1, "", "getElementPosition"], [32, 2, 1, "", "getNumElements"], [32, 2, 1, "", "print"], [32, 2, 1, "", "showElements"]], "neoradium.antenna.AntennaBase": [[32, 2, 1, "", "drawRadiation"], [32, 2, 1, "", "getDirectivity"], [32, 2, 1, "", "getElementsFields"], [32, 2, 1, "", "getField"], [32, 2, 1, "", "getFieldPattern"], [32, 2, 1, "", "getPolarizedFields"], [32, 2, 1, "", "getPowerPattern"], [32, 2, 1, "", "getPowerPatternDb"], [32, 2, 1, "", "getRotationMatrix"], [32, 2, 1, "", "getSteeringVector"]], "neoradium.antenna.AntennaElement": [[32, 2, 1, "", "clone"], [32, 2, 1, "", "getDirectivity"], [32, 2, 1, "", "getField"], [32, 2, 1, "", "getPolarizedFields"], [32, 2, 1, "", "getPowerPattern"], [32, 2, 1, "", "getPowerPatternDb"], [32, 3, 1, "", "posInArray"], [32, 2, 1, "", "print"]], "neoradium.antenna.AntennaPanel": [[32, 2, 1, "", "allElements"], [32, 2, 1, "", "clone"], [32, 2, 1, "", "getAllPositions"], [32, 2, 1, "", "getElement"], [32, 2, 1, "", "getElementPosition"], [32, 2, 1, "", "getNumElements"], [32, 2, 1, "", "print"], [32, 2, 1, "", "showElements"]], "neoradium.carrier": [[33, 1, 1, "", "BandwidthPart"], [33, 1, 1, "", "Carrier"]], "neoradium.carrier.BandwidthPart": [[33, 2, 1, "", "createGrid"], [33, 2, 1, "", "getCpLen"], [33, 2, 1, "", "getCpTime"], [33, 2, 1, "", "getNumSlotsForSamples"], [33, 2, 1, "", "getNumSymbolsForSamples"], [33, 2, 1, "", "getSlotLen"], [33, 2, 1, "", "getSlotTime"], [33, 2, 1, "", "getSlotsDuration"], [33, 2, 1, "", "getSlotsSamples"], [33, 2, 1, "", "getSymTime"], [33, 2, 1, "", "print"]], "neoradium.carrier.Carrier": [[33, 2, 1, "", "createGrid"], [33, 2, 1, "", "goNext"], [33, 2, 1, "", "print"]], "neoradium.cdl": [[35, 1, 1, "", "CdlChannel"]], "neoradium.cdl.CdlChannel": [[35, 2, 1, "", "print"], [35, 2, 1, "", "restart"]], "neoradium.chancodebase": [[34, 1, 1, "", "ChanCodeBase"]], "neoradium.chancodebase.ChanCodeBase": [[34, 2, 1, "", "appendCrc"], [34, 2, 1, "", "checkCrc"], [34, 2, 1, "", "getCrc"]], "neoradium.channel": [[35, 1, 1, "", "ChannelBase"]], "neoradium.channel.ChannelBase": [[35, 2, 1, "", "applyToGrid"], [35, 2, 1, "", "applyToSignal"], [35, 2, 1, "", "getChannelMatrix"], [35, 2, 1, "", "getMaxDelay"], [35, 2, 1, "", "getPathFilters"], [35, 2, 1, "", "getPathGains"], [35, 2, 1, "", "getTimingOffset"], [35, 2, 1, "", "goNext"], [35, 2, 1, "", "print"], [35, 2, 1, "", "restart"]], "neoradium.csirs": [[40, 1, 1, "", "CsiRs"], [40, 1, 1, "", "CsiRsConfig"], [40, 1, 1, "", "CsiRsSet"]], "neoradium.csirs.CsiRs": [[40, 2, 1, "", "print"]], "neoradium.csirs.CsiRsConfig": [[40, 2, 1, "", "addCsiResourceSets"], [40, 2, 1, "", "addCsiRs"], [40, 2, 1, "", "populateGrid"], [40, 2, 1, "", "print"]], "neoradium.csirs.CsiRsSet": [[40, 2, 1, "", "addCsiRs"], [40, 2, 1, "", "print"]], "neoradium.dmrs": [[40, 1, 1, "", "DMRS"], [40, 1, 1, "", "PTRS"]], "neoradium.dmrs.DMRS": [[40, 2, 1, "", "populateGrid"], [40, 2, 1, "", "print"], [40, 2, 1, "", "setPTRS"]], "neoradium.dmrs.PTRS": [[40, 2, 1, "", "populateGrid"], [40, 2, 1, "", "print"]], "neoradium.grid": [[36, 1, 1, "", "Grid"]], "neoradium.grid.Grid": [[36, 2, 1, "", "addNoise"], [36, 2, 1, "", "applyChannel"], [36, 2, 1, "", "drawMap"], [36, 2, 1, "", "equalize"], [36, 2, 1, "", "estimateChannelLS"], [36, 2, 1, "", "estimateTimingOffset"], [36, 2, 1, "", "getReIndexes"], [36, 2, 1, "", "getReValues"], [36, 2, 1, "", "getStats"], [36, 2, 1, "", "ofdmModulate"], [36, 2, 1, "", "precode"], [36, 2, 1, "", "print"], [36, 2, 1, "", "reTypeAt"]], "neoradium.ldpc": [[34, 1, 1, "", "LdpcBase"], [34, 1, 1, "", "LdpcDecoder"], [34, 1, 1, "", "LdpcEncoder"]], "neoradium.ldpc.LdpcBase": [[34, 2, 1, "", "isValidCodeword"]], "neoradium.ldpc.LdpcDecoder": [[34, 2, 1, "", "checkCrcAndMerge"], [34, 2, 1, "", "decode"], [34, 2, 1, "", "print"], [34, 2, 1, "", "recoverRate"]], "neoradium.ldpc.LdpcEncoder": [[34, 2, 1, "", "doSegmentation"], [34, 2, 1, "", "encode"], [34, 2, 1, "", "getDecoder"], [34, 2, 1, "", "getRateMatchedCodeWords"], [34, 2, 1, "", "print"], [34, 2, 1, "", "rateMatch"], [34, 2, 1, "", "setFillerBits"]], "neoradium.modulation": [[37, 1, 1, "", "Modem"]], "neoradium.modulation.Modem": [[37, 2, 1, "", "demodulate"], [37, 2, 1, "", "getLLRsFromSymbols"], [37, 2, 1, "", "modulate"], [37, 2, 1, "", "print"]], "neoradium.pdsch": [[38, 1, 1, "", "PDSCH"]], "neoradium.pdsch.PDSCH": [[38, 2, 1, "", "getBitSizes"], [38, 2, 1, "", "getDataSymbols"], [38, 2, 1, "", "getGrid"], [38, 2, 1, "", "getHardBitsFromGrid"], [38, 2, 1, "", "getLLRsFromGrid"], [38, 2, 1, "", "getNumREsFromIndexes"], [38, 2, 1, "", "getPrecodingMatrix"], [38, 2, 1, "", "getReIndexes"], [38, 2, 1, "", "getTxBlockSize"], [38, 2, 1, "", "populateGrid"], [38, 2, 1, "", "print"], [38, 2, 1, "", "setDMRS"], [38, 2, 1, "", "setPTRS"]], "neoradium.polar": [[34, 1, 1, "", "PolarBase"], [34, 1, 1, "", "PolarDecoder"], [34, 1, 1, "", "PolarEncoder"]], "neoradium.polar.PolarBase": [[34, 2, 1, "", "setIoSizes"]], "neoradium.polar.PolarDecoder": [[34, 2, 1, "", "decode"], [34, 2, 1, "", "print"], [34, 2, 1, "", "recoverRate"]], "neoradium.polar.PolarEncoder": [[34, 2, 1, "", "doSegmentation"], [34, 2, 1, "", "encode"], [34, 2, 1, "", "print"], [34, 2, 1, "", "rateMatch"]], "neoradium.random": [[39, 1, 1, "", "RanGen"]], "neoradium.random.RanGen": [[39, 2, 1, "", "getGenerator"], [39, 2, 1, "", "setSeed"]], "neoradium.tdl": [[35, 1, 1, "", "TdlChannel"]], "neoradium.tdl.TdlChannel": [[35, 2, 1, "", "print"]], "neoradium.waveform": [[41, 1, 1, "", "Waveform"]], "neoradium.waveform.Waveform": [[41, 2, 1, "", "addNoise"], [41, 2, 1, "", "applyChannel"], [41, 2, 1, "", "applyWindowing"], [41, 2, 1, "", "ofdmDemodulate"], [41, 2, 1, "", "pad"], [41, 2, 1, "", "print"], [41, 2, 1, "", "sync"]]}, "objtypes": {"0": "py:module", "1": "py:class", "2": "py:method", "3": "py:property"}, "objnames": {"0": ["py", "module", "Python module"], "1": ["py", "class", "Python class"], "2": ["py", "method", "Python method"], "3": ["py", "property", "Python property"]}, "titleterms": {"antenna": [0, 1, 2, 7, 8, 9, 32, 42, 43, 44, 49, 50, 51, 66], "arrai": [0, 7, 42, 49], "element": [1, 8, 43, 50], "panel": [2, 9, 44, 51], "channel": [3, 5, 6, 10, 11, 18, 19, 20, 21, 22, 29, 34, 35, 38, 45, 47, 48, 52, 53, 60, 61, 62, 65, 66], "state": [3, 45, 66], "inform": [3, 45, 66], "refer": [3, 40, 45, 66], "signal": [3, 40, 45, 66], "csi": [3, 4, 11, 40, 45, 46, 53, 66], "r": [3, 4, 11, 40, 45, 46, 53, 66], "configur": [3, 4, 11, 13, 16, 17, 29, 45, 46, 53, 55, 58, 59, 65], "time": [4, 6, 46, 48], "matrix": [5, 11, 47, 53], "compar": [7, 8, 9, 10, 11, 12, 13, 14, 29, 49, 50, 51, 52, 53, 54, 55, 56, 65, 66], "calcul": [7, 8, 9, 27, 28, 49, 50, 51, 63, 64], "matlab": [7, 8, 9, 10, 11, 12, 13, 14, 25, 49, 50, 51, 52, 53, 54, 55, 56, 66], "cdl": [10, 11, 35, 52, 53, 66], "result": [10, 11, 12, 13, 14, 52, 53, 54, 55, 56], "model": [10, 11, 21, 22, 29, 35, 52, 53, 62, 65, 66], "appli": [10, 11, 29, 52, 53, 65], "random": [10, 13, 39, 52, 55], "waveform": [10, 11, 13, 29, 41, 52, 53, 55, 65], "carrier": [11, 13, 29, 33, 53, 55, 65], "creat": [11, 13, 21, 22, 53, 55, 62, 67], "resourc": [11, 13, 29, 36, 53, 55, 65], "grid": [11, 13, 29, 36, 53, 55, 65], "popul": [11, 13, 53, 55], "valu": [11, 53], "ofdm": [11, 13, 29, 53, 55, 65], "modul": [11, 13, 29, 37, 53, 55, 65], "ad": [11, 29, 53, 65], "awgn": [11, 53], "synchron": [11, 29, 53, 65], "demodul": [11, 29, 53, 65], "estim": [11, 18, 19, 20, 21, 22, 29, 53, 60, 61, 62, 65], "ldpc": [12, 28, 29, 34, 54, 64, 65, 66], "pdsch": [13, 27, 28, 29, 55, 63, 64, 65, 66], "gener": [13, 18, 39, 55, 60], "dmr": [13, 16, 29, 40, 55, 58, 65, 66], "data": [13, 55], "symbol": [13, 55], "bit": [13, 27, 55, 63], "block": [13, 29, 55, 65], "statist": [13, 55], "draw": [13, 55], "alloc": [13, 55], "map": [13, 29, 55, 65], "mimo": [13, 55], "precod": [13, 29, 55, 65], "polar": [14, 34, 56, 66], "code": [14, 29, 34, 56, 65, 66], "us": [15, 57], "othercdmgroup": [15, 57], "paramet": [15, 57], "ptr": [17, 40, 59, 66], "dataset": [18, 21, 22, 60, 62], "train": [18, 19, 20, 21, 22, 60, 61, 62], "evalu": [19, 20, 21, 22, 61, 62], "load": [19, 20, 21, 22, 61, 62], "mode": [19, 20, 61], "mlchanest": [19, 20, 61], "function": [19, 20, 61], "pipelin": [19, 20, 61], "resnet": [21, 22, 62], "A": [22, 62, 66], "error": [27, 63], "rate": [27, 29, 63, 65], "commun": [27, 28, 29, 63, 64, 65], "ber": [28, 64], "bler": [28, 64], "end": [29, 65], "creation": [29, 65], "simul": [29, 65], "transmit": [29, 65], "nois": [29, 65], "frequenc": [29, 65], "domain": [29, 65], "perfect": [29, 65], "practic": [29, 65], "equal": [29, 65], "de": [29, 65], "descrambl": [29, 65], "recoveri": [29, 65], "decod": [29, 65], "crc": [29, 65], "check": [29, 65], "segment": [29, 65], "transport": [29, 65], "origin": [29, 65], "what": 31, "i": 31, "neoradium": [31, 67], "kei": 31, "featur": 31, "indic": 31, "plot": 32, "type": 32, "bandwidth": 33, "part": 33, "tdl": 35, "physic": [38, 66], "downlink": [38, 66], "share": [38, 66], "number": 39, "The": 39, "object": 39, "support": 39, "playground": 66, "deep": 66, "learn": 66, "case": 66, "studi": 66, "5g": 66, "toolbox": 66, "instal": 67, "virtual": 67, "environ": 67}, "envversion": {"sphinx.domains.c": 2, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 8, "sphinx.domains.index": 1, "sphinx.domains.javascript": 2, "sphinx.domains.math": 2, "sphinx.domains.python": 3, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "nbsphinx": 4, "sphinx": 57}, "alltitles": {"Antenna Array": [[0, "Antenna-Array"], [42, "Antenna-Array"]], "Antenna Element": [[1, "Antenna-Element"], [43, "Antenna-Element"]], "Antenna Panel": [[2, "Antenna-Panel"], [44, "Antenna-Panel"]], "Channel State Information Reference Signals (CSI-RS) Configuration": [[3, "Channel-State-Information-Reference-Signals-(CSI-RS)-Configuration"], [45, "Channel-State-Information-Reference-Signals-(CSI-RS)-Configuration"]], "CSI-RS timing configurations": [[4, "CSI-RS-timing-configurations"], [46, "CSI-RS-timing-configurations"]], "Channel Matrix": [[5, "Channel-Matrix"], [47, "Channel-Matrix"]], "Channel timing": [[6, "Channel-timing"], [48, "Channel-timing"]], "Comparing Antenna Array Calculations with Matlab": [[7, "Comparing-Antenna-Array-Calculations-with-Matlab"], [49, "Comparing-Antenna-Array-Calculations-with-Matlab"]], "Comparing Antenna Element Calculations with Matlab": [[8, "Comparing-Antenna-Element-Calculations-with-Matlab"], [50, "Comparing-Antenna-Element-Calculations-with-Matlab"]], "Comparing Antenna Panel Calculations with Matlab": [[9, "Comparing-Antenna-Panel-Calculations-with-Matlab"], [51, "Comparing-Antenna-Panel-Calculations-with-Matlab"]], "Comparing the CDL Channel results with Matlab": [[10, "Comparing-the-CDL-Channel-results-with-Matlab"], [52, "Comparing-the-CDL-Channel-results-with-Matlab"]], "CDL Channel Model": [[10, "CDL-Channel-Model"], [11, "CDL-Channel-Model"], [35, "module-neoradium.cdl"], [52, "CDL-Channel-Model"], [53, "CDL-Channel-Model"], [66, "cdl-channel-model"]], "Applying the channel to a random waveform": [[10, "Applying-the-channel-to-a-random-waveform"], [52, "Applying-the-channel-to-a-random-waveform"]], "Comparing the CSI-RS results with Matlab": [[11, "Comparing-the-CSI-RS-results-with-Matlab"], [53, "Comparing-the-CSI-RS-results-with-Matlab"]], "Carrier Configuration": [[11, "Carrier-Configuration"], [13, "Carrier-Configuration"], [29, "Carrier-Configuration"], [53, "Carrier-Configuration"], [55, "Carrier-Configuration"], [65, "Carrier-Configuration"]], "CSI-RS Configuration": [[11, "CSI-RS-Configuration"], [53, "CSI-RS-Configuration"]], "Create a resource grid and populate it with CSI-RS": [[11, "Create-a-resource-grid-and-populate-it-with-CSI-RS"], [53, "Create-a-resource-grid-and-populate-it-with-CSI-RS"]], "Comparing CSI-RS values": [[11, "Comparing-CSI-RS-values"], [53, "Comparing-CSI-RS-values"]], "OFDM Modulation": [[11, "OFDM-Modulation"], [13, "OFDM-Modulation"], [29, "OFDM-Modulation"], [53, "OFDM-Modulation"], [55, "OFDM-Modulation"], [65, "OFDM-Modulation"]], "Comparing the channel matrix with Matlab": [[11, "Comparing-the-channel-matrix-with-Matlab"], [53, "Comparing-the-channel-matrix-with-Matlab"]], "Applying the channel to the waveform": [[11, "Applying-the-channel-to-the-waveform"], [53, "Applying-the-channel-to-the-waveform"]], "Adding AWGN": [[11, "Adding-AWGN"], [53, "Adding-AWGN"]], "Synchronization": [[11, "Synchronization"], [53, "Synchronization"]], "OFDM Demodulation": [[11, "OFDM-Demodulation"], [53, "OFDM-Demodulation"]], "Channel Estimation": [[11, "Channel-Estimation"], [29, "Channel-Estimation"], [53, "Channel-Estimation"], [65, "Channel-Estimation"]], "Comparing the LDPC results with Matlab": [[12, "Comparing-the-LDPC-results-with-Matlab"], [54, "Comparing-the-LDPC-results-with-Matlab"]], "PDSCH Waveform generation": [[13, "PDSCH-Waveform-generation"], [55, "PDSCH-Waveform-generation"]], "PDSCH Configuration": [[13, "PDSCH-Configuration"], [55, "PDSCH-Configuration"]], "Create a grid and populate it with DMRS data": [[13, "Create-a-grid-and-populate-it-with-DMRS-data"], [55, "Create-a-grid-and-populate-it-with-DMRS-data"]], "Comparing DMRS symbols": [[13, "Comparing-DMRS-symbols"], [55, "Comparing-DMRS-symbols"]], "Generate random bits and create resource block": [[13, "Generate-random-bits-and-create-resource-block"], [55, "Generate-random-bits-and-create-resource-block"]], "Comparing the results with Matlab": [[13, "Comparing-the-results-with-Matlab"], [55, "Comparing-the-results-with-Matlab"]], "Grid Statistics": [[13, "Grid-Statistics"], [55, "Grid-Statistics"]], "Draw resource allocation map": [[13, "Draw-resource-allocation-map"], [55, "Draw-resource-allocation-map"]], "MIMO Precoding": [[13, "MIMO-Precoding"], [55, "MIMO-Precoding"]], "Comparing the Polar Coding results with Matlab": [[14, "Comparing-the-Polar-Coding-results-with-Matlab"], [56, "Comparing-the-Polar-Coding-results-with-Matlab"]], "Using otherCdmGroups parameter": [[15, "Using-otherCdmGroups-parameter"], [57, "Using-otherCdmGroups-parameter"]], "Configuring DMRS": [[16, "Configuring-DMRS"], [58, "Configuring-DMRS"]], "Configuring PTRS": [[17, "Configuring-PTRS"], [59, "Configuring-PTRS"]], "Generating Dataset for Channel Estimation Training": [[18, "Generating-Dataset-for-Channel-Estimation-Training"], [60, "Generating-Dataset-for-Channel-Estimation-Training"]], "Evaluating the Trained Channel Estimator": [[19, "Evaluating-the-Trained-Channel-Estimator"], [20, "Evaluating-the-Trained-Channel-Estimator"], [61, "Evaluating-the-Trained-Channel-Estimator"]], "Load the trained mode": [[19, "Load-the-trained-mode"], [20, "Load-the-trained-mode"], [61, "Load-the-trained-mode"]], "mlChanEst function": [[19, "mlChanEst-function"], [20, "mlChanEst-function"], [61, "mlChanEst-function"]], "Evaluation Pipeline": [[19, "Evaluation-Pipeline"], [20, "Evaluation-Pipeline"], [61, "Evaluation-Pipeline"]], "Training a ResNet model for Channel Estimation": [[21, "Training-a-ResNet-model-for-Channel-Estimation"]], "Loading dataset": [[21, "Loading-dataset"], [22, "Loading-dataset"], [62, "Loading-dataset"]], "Creating the model": [[21, "Creating-the-model"], [22, "Creating-the-model"], [62, "Creating-the-model"]], "Training the model": [[21, "Training-the-model"], [22, "Training-the-model"], [62, "Training-the-model"]], "Evaluating the model": [[21, "Evaluating-the-model"], [22, "Evaluating-the-model"], [62, "Evaluating-the-model"]], "Training A ResNet model for Channel Estimation": [[22, "Training-A-ResNet-model-for-Channel-Estimation"], [62, "Training-A-ResNet-model-for-Channel-Estimation"]], "Matlab:": [[25, "Matlab:"]], "Calculating bit error rate of PDSCH communication": [[27, "Calculating-bit-error-rate-of-PDSCH-communication"], [63, "Calculating-bit-error-rate-of-PDSCH-communication"]], "Calculating BER/BLER for PDSCH Communication with LDPC": [[28, "Calculating-BER/BLER-for-PDSCH-Communication-with-LDPC"], [64, "Calculating-BER/BLER-for-PDSCH-Communication-with-LDPC"]], "PDSCH end-to-end communication": [[29, "PDSCH-end-to-end-communication"], [65, "PDSCH-end-to-end-communication"]], "PDSCH and DMRS Configuration": [[29, "PDSCH-and-DMRS-Configuration"], [65, "PDSCH-and-DMRS-Configuration"]], "Channel Coding Configuration": [[29, "Channel-Coding-Configuration"], [65, "Channel-Coding-Configuration"]], "Resource Grid Creation and Mapping": [[29, "Resource-Grid-Creation-and-Mapping"], [65, "Resource-Grid-Creation-and-Mapping"]], "Channel Simulation and Precoding": [[29, "Channel-Simulation-and-Precoding"], [65, "Channel-Simulation-and-Precoding"]], "Applying the channel model to the transmitted waveform": [[29, "Applying-the-channel-model-to-the-transmitted-waveform"], [65, "Applying-the-channel-model-to-the-transmitted-waveform"]], "Adding Noise": [[29, "Adding-Noise"], [65, "Adding-Noise"]], "Synchronization and OFDM Demodulation": [[29, "Synchronization-and-OFDM-Demodulation"], [65, "Synchronization-and-OFDM-Demodulation"]], "Applying channel in Frequency Domain": [[29, "Applying-channel-in-Frequency-Domain"], [65, "Applying-channel-in-Frequency-Domain"]], "Perfect Channel Estimation": [[29, "Perfect-Channel-Estimation"], [65, "Perfect-Channel-Estimation"]], "Practical Channel Estimation": [[29, "Practical-Channel-Estimation"], [65, "Practical-Channel-Estimation"]], "Equalization": [[29, "Equalization"], [65, "Equalization"]], "Demodulation, De-mapping, Descrambling": [[29, "Demodulation,-De-mapping,-Descrambling"], [65, "Demodulation,-De-mapping,-Descrambling"]], "Rate Recovery and LDPC decoding": [[29, "Rate-Recovery-and-LDPC-decoding"], [65, "Rate-Recovery-and-LDPC-decoding"]], "CRC checking and De-segmentation": [[29, "CRC-checking-and-De-segmentation"], [65, "CRC-checking-and-De-segmentation"]], "Comparing the decoded transport block with the original": [[29, "Comparing-the-decoded-transport-block-with-the-original"], [65, "Comparing-the-decoded-transport-block-with-the-original"]], "What is NeoRadium?": [[31, "what-is-neoradium"]], "Key features": [[31, "key-features"]], "Indices": [[31, "indices"]], "Antenna": [[32, "antenna"], [66, "antenna"], [66, "id1"]], "Plot Types:": [[32, "plot-types"]], "Carriers and Bandwidth Parts": [[33, "module-neoradium.carrier"]], "Channel Coding": [[34, "module-neoradium.chancodebase"]], "LDPC": [[34, "module-neoradium.ldpc"]], "Polar Coding": [[34, "module-neoradium.polar"]], "Channel Models": [[35, "channel-models"]], "TDL Channel Model": [[35, "module-neoradium.tdl"]], "Resource Grid": [[36, "module-neoradium.grid"]], "Modulation": [[37, "module-neoradium.modulation"]], "Physical Channels": [[38, "physical-channels"]], "Physical Downlink Shared Channel": [[38, "module-neoradium.pdsch"]], "Random Number Generator": [[39, "module-neoradium.random"]], "The random object": [[39, "the-random-object"]], "Supported Random Generators": [[39, "supported-random-generators"]], "Reference Signals": [[40, "reference-signals"]], "CSI-RS": [[40, "module-neoradium.csirs"], [66, "csi-rs"]], "DMRS and PTRS": [[40, "module-neoradium.dmrs"], [66, "dmrs-and-ptrs"]], "Waveform": [[41, "module-neoradium.waveform"]], "Playground": [[66, "playground"]], "Channels": [[66, "channels"]], "Channel State Information Reference Signals (CSI-RS)": [[66, "channel-state-information-reference-signals-csi-rs"]], "Physical Downlink Shared Channel (PDSCH)": [[66, "physical-downlink-shared-channel-pdsch"]], "A Deep Learning Case Study": [[66, "a-deep-learning-case-study"]], "Comparing with Matlab 5G Toolbox": [[66, "comparing-with-matlab-5g-toolbox"]], "PDSCH": [[66, "pdsch"]], "LDPC and Polar Coding": [[66, "ldpc-and-polar-coding"]], "Installation": [[67, "installation"]], "Create a virtual environment": [[67, "create-a-virtual-environment"]], "Install NeoRadium": [[67, "install-neoradium"]]}, "indexentries": {"antennaarray (class in neoradium.antenna)": [[32, "neoradium.antenna.AntennaArray"]], "antennabase (class in neoradium.antenna)": [[32, "neoradium.antenna.AntennaBase"]], "antennaelement (class in neoradium.antenna)": [[32, "neoradium.antenna.AntennaElement"]], "antennapanel (class in neoradium.antenna)": [[32, "neoradium.antenna.AntennaPanel"]], "allelements() (neoradium.antenna.antennaarray method)": [[32, "neoradium.antenna.AntennaArray.allElements"]], "allelements() (neoradium.antenna.antennapanel method)": [[32, "neoradium.antenna.AntennaPanel.allElements"]], "allpanels() (neoradium.antenna.antennaarray method)": [[32, "neoradium.antenna.AntennaArray.allPanels"]], "clone() (neoradium.antenna.antennaelement method)": [[32, "neoradium.antenna.AntennaElement.clone"]], "clone() (neoradium.antenna.antennapanel method)": [[32, "neoradium.antenna.AntennaPanel.clone"]], "drawradiation() (neoradium.antenna.antennabase method)": [[32, "neoradium.antenna.AntennaBase.drawRadiation"]], "getallpositions() (neoradium.antenna.antennaarray method)": [[32, "neoradium.antenna.AntennaArray.getAllPositions"]], "getallpositions() (neoradium.antenna.antennapanel method)": [[32, "neoradium.antenna.AntennaPanel.getAllPositions"]], "getdirectivity() (neoradium.antenna.antennabase method)": [[32, "neoradium.antenna.AntennaBase.getDirectivity"]], "getdirectivity() (neoradium.antenna.antennaelement method)": [[32, "neoradium.antenna.AntennaElement.getDirectivity"]], "getelement() (neoradium.antenna.antennaarray method)": [[32, "neoradium.antenna.AntennaArray.getElement"]], "getelement() (neoradium.antenna.antennapanel method)": [[32, "neoradium.antenna.AntennaPanel.getElement"]], "getelementposition() (neoradium.antenna.antennaarray method)": [[32, "neoradium.antenna.AntennaArray.getElementPosition"]], "getelementposition() (neoradium.antenna.antennapanel method)": [[32, "neoradium.antenna.AntennaPanel.getElementPosition"]], "getelementsfields() (neoradium.antenna.antennabase method)": [[32, "neoradium.antenna.AntennaBase.getElementsFields"]], "getfield() (neoradium.antenna.antennabase method)": [[32, "neoradium.antenna.AntennaBase.getField"]], "getfield() (neoradium.antenna.antennaelement method)": [[32, "neoradium.antenna.AntennaElement.getField"]], "getfieldpattern() (neoradium.antenna.antennabase method)": [[32, "neoradium.antenna.AntennaBase.getFieldPattern"]], "getnumelements() (neoradium.antenna.antennaarray method)": [[32, "neoradium.antenna.AntennaArray.getNumElements"]], "getnumelements() (neoradium.antenna.antennapanel method)": [[32, "neoradium.antenna.AntennaPanel.getNumElements"]], "getpolarizedfields() (neoradium.antenna.antennabase method)": [[32, "neoradium.antenna.AntennaBase.getPolarizedFields"]], "getpolarizedfields() (neoradium.antenna.antennaelement method)": [[32, "neoradium.antenna.AntennaElement.getPolarizedFields"]], "getpowerpattern() (neoradium.antenna.antennabase method)": [[32, "neoradium.antenna.AntennaBase.getPowerPattern"]], "getpowerpattern() (neoradium.antenna.antennaelement method)": [[32, "neoradium.antenna.AntennaElement.getPowerPattern"]], "getpowerpatterndb() (neoradium.antenna.antennabase method)": [[32, "neoradium.antenna.AntennaBase.getPowerPatternDb"]], "getpowerpatterndb() (neoradium.antenna.antennaelement method)": [[32, "neoradium.antenna.AntennaElement.getPowerPatternDb"]], "getrotationmatrix() (neoradium.antenna.antennabase method)": [[32, "neoradium.antenna.AntennaBase.getRotationMatrix"]], "getsteeringvector() (neoradium.antenna.antennabase method)": [[32, "neoradium.antenna.AntennaBase.getSteeringVector"]], "module": [[32, "module-neoradium.antenna"], [33, "module-neoradium.carrier"], [34, "module-neoradium.chancodebase"], [34, "module-neoradium.ldpc"], [34, "module-neoradium.polar"], [35, "module-neoradium.cdl"], [35, "module-neoradium.channel"], [35, "module-neoradium.tdl"], [36, "module-neoradium.grid"], [37, "module-neoradium.modulation"], [38, "module-neoradium.pdsch"], [39, "module-neoradium.random"], [40, "module-neoradium.csirs"], [40, "module-neoradium.dmrs"], [41, "module-neoradium.waveform"]], "neoradium.antenna": [[32, "module-neoradium.antenna"]], "posinarray (neoradium.antenna.antennaelement property)": [[32, "neoradium.antenna.AntennaElement.posInArray"]], "print() (neoradium.antenna.antennaarray method)": [[32, "neoradium.antenna.AntennaArray.print"]], "print() (neoradium.antenna.antennaelement method)": [[32, "neoradium.antenna.AntennaElement.print"]], "print() (neoradium.antenna.antennapanel method)": [[32, "neoradium.antenna.AntennaPanel.print"]], "showelements() (neoradium.antenna.antennaarray method)": [[32, "neoradium.antenna.AntennaArray.showElements"]], "showelements() (neoradium.antenna.antennapanel method)": [[32, "neoradium.antenna.AntennaPanel.showElements"]], "bandwidthpart (class in neoradium.carrier)": [[33, "neoradium.carrier.BandwidthPart"]], "carrier (class in neoradium.carrier)": [[33, "neoradium.carrier.Carrier"]], "creategrid() (neoradium.carrier.bandwidthpart method)": [[33, "neoradium.carrier.BandwidthPart.createGrid"]], "creategrid() (neoradium.carrier.carrier method)": [[33, "neoradium.carrier.Carrier.createGrid"]], "getcplen() (neoradium.carrier.bandwidthpart method)": [[33, "neoradium.carrier.BandwidthPart.getCpLen"]], "getcptime() (neoradium.carrier.bandwidthpart method)": [[33, "neoradium.carrier.BandwidthPart.getCpTime"]], "getnumslotsforsamples() (neoradium.carrier.bandwidthpart method)": [[33, "neoradium.carrier.BandwidthPart.getNumSlotsForSamples"]], "getnumsymbolsforsamples() (neoradium.carrier.bandwidthpart method)": [[33, "neoradium.carrier.BandwidthPart.getNumSymbolsForSamples"]], "getslotlen() (neoradium.carrier.bandwidthpart method)": [[33, "neoradium.carrier.BandwidthPart.getSlotLen"]], "getslottime() (neoradium.carrier.bandwidthpart method)": [[33, "neoradium.carrier.BandwidthPart.getSlotTime"]], "getslotsduration() (neoradium.carrier.bandwidthpart method)": [[33, "neoradium.carrier.BandwidthPart.getSlotsDuration"]], "getslotssamples() (neoradium.carrier.bandwidthpart method)": [[33, "neoradium.carrier.BandwidthPart.getSlotsSamples"]], "getsymtime() (neoradium.carrier.bandwidthpart method)": [[33, "neoradium.carrier.BandwidthPart.getSymTime"]], "gonext() (neoradium.carrier.carrier method)": [[33, "neoradium.carrier.Carrier.goNext"]], "neoradium.carrier": [[33, "module-neoradium.carrier"]], "print() (neoradium.carrier.bandwidthpart method)": [[33, "neoradium.carrier.BandwidthPart.print"]], "print() (neoradium.carrier.carrier method)": [[33, "neoradium.carrier.Carrier.print"]], "chancodebase (class in neoradium.chancodebase)": [[34, "neoradium.chancodebase.ChanCodeBase"]], "ldpcbase (class in neoradium.ldpc)": [[34, "neoradium.ldpc.LdpcBase"]], "ldpcdecoder (class in neoradium.ldpc)": [[34, "neoradium.ldpc.LdpcDecoder"]], "ldpcencoder (class in neoradium.ldpc)": [[34, "neoradium.ldpc.LdpcEncoder"]], "polarbase (class in neoradium.polar)": [[34, "neoradium.polar.PolarBase"]], "polardecoder (class in neoradium.polar)": [[34, "neoradium.polar.PolarDecoder"]], "polarencoder (class in neoradium.polar)": [[34, "neoradium.polar.PolarEncoder"]], "appendcrc() (neoradium.chancodebase.chancodebase class method)": [[34, "neoradium.chancodebase.ChanCodeBase.appendCrc"]], "checkcrc() (neoradium.chancodebase.chancodebase class method)": [[34, "neoradium.chancodebase.ChanCodeBase.checkCrc"]], "checkcrcandmerge() (neoradium.ldpc.ldpcdecoder method)": [[34, "neoradium.ldpc.LdpcDecoder.checkCrcAndMerge"]], "decode() (neoradium.ldpc.ldpcdecoder method)": [[34, "neoradium.ldpc.LdpcDecoder.decode"]], "decode() (neoradium.polar.polardecoder method)": [[34, "neoradium.polar.PolarDecoder.decode"]], "dosegmentation() (neoradium.ldpc.ldpcencoder method)": [[34, "neoradium.ldpc.LdpcEncoder.doSegmentation"]], "dosegmentation() (neoradium.polar.polarencoder method)": [[34, "neoradium.polar.PolarEncoder.doSegmentation"]], "encode() (neoradium.ldpc.ldpcencoder method)": [[34, "neoradium.ldpc.LdpcEncoder.encode"]], "encode() (neoradium.polar.polarencoder method)": [[34, "neoradium.polar.PolarEncoder.encode"]], "getcrc() (neoradium.chancodebase.chancodebase class method)": [[34, "neoradium.chancodebase.ChanCodeBase.getCrc"]], "getdecoder() (neoradium.ldpc.ldpcencoder method)": [[34, "neoradium.ldpc.LdpcEncoder.getDecoder"]], "getratematchedcodewords() (neoradium.ldpc.ldpcencoder method)": [[34, "neoradium.ldpc.LdpcEncoder.getRateMatchedCodeWords"]], "isvalidcodeword() (neoradium.ldpc.ldpcbase method)": [[34, "neoradium.ldpc.LdpcBase.isValidCodeword"]], "neoradium.chancodebase": [[34, "module-neoradium.chancodebase"]], "neoradium.ldpc": [[34, "module-neoradium.ldpc"]], "neoradium.polar": [[34, "module-neoradium.polar"]], "print() (neoradium.ldpc.ldpcdecoder method)": [[34, "neoradium.ldpc.LdpcDecoder.print"]], "print() (neoradium.ldpc.ldpcencoder method)": [[34, "neoradium.ldpc.LdpcEncoder.print"]], "print() (neoradium.polar.polardecoder method)": [[34, "neoradium.polar.PolarDecoder.print"]], "print() (neoradium.polar.polarencoder method)": [[34, "neoradium.polar.PolarEncoder.print"]], "ratematch() (neoradium.ldpc.ldpcencoder method)": [[34, "neoradium.ldpc.LdpcEncoder.rateMatch"]], "ratematch() (neoradium.polar.polarencoder method)": [[34, "neoradium.polar.PolarEncoder.rateMatch"]], "recoverrate() (neoradium.ldpc.ldpcdecoder method)": [[34, "neoradium.ldpc.LdpcDecoder.recoverRate"]], "recoverrate() (neoradium.polar.polardecoder method)": [[34, "neoradium.polar.PolarDecoder.recoverRate"]], "setfillerbits() (neoradium.ldpc.ldpcencoder method)": [[34, "neoradium.ldpc.LdpcEncoder.setFillerBits"]], "setiosizes() (neoradium.polar.polarbase method)": [[34, "neoradium.polar.PolarBase.setIoSizes"]], "cdlchannel (class in neoradium.cdl)": [[35, "neoradium.cdl.CdlChannel"]], "channelbase (class in neoradium.channel)": [[35, "neoradium.channel.ChannelBase"]], "tdlchannel (class in neoradium.tdl)": [[35, "neoradium.tdl.TdlChannel"]], "applytogrid() (neoradium.channel.channelbase method)": [[35, "neoradium.channel.ChannelBase.applyToGrid"]], "applytosignal() (neoradium.channel.channelbase method)": [[35, "neoradium.channel.ChannelBase.applyToSignal"]], "getchannelmatrix() (neoradium.channel.channelbase method)": [[35, "neoradium.channel.ChannelBase.getChannelMatrix"]], "getmaxdelay() (neoradium.channel.channelbase method)": [[35, "neoradium.channel.ChannelBase.getMaxDelay"]], "getpathfilters() (neoradium.channel.channelbase method)": [[35, "neoradium.channel.ChannelBase.getPathFilters"]], "getpathgains() (neoradium.channel.channelbase method)": [[35, "neoradium.channel.ChannelBase.getPathGains"]], "gettimingoffset() (neoradium.channel.channelbase method)": [[35, "neoradium.channel.ChannelBase.getTimingOffset"]], "gonext() (neoradium.channel.channelbase method)": [[35, "neoradium.channel.ChannelBase.goNext"]], "neoradium.cdl": [[35, "module-neoradium.cdl"]], "neoradium.channel": [[35, "module-neoradium.channel"]], "neoradium.tdl": [[35, "module-neoradium.tdl"]], "print() (neoradium.cdl.cdlchannel method)": [[35, "neoradium.cdl.CdlChannel.print"]], "print() (neoradium.channel.channelbase method)": [[35, "neoradium.channel.ChannelBase.print"]], "print() (neoradium.tdl.tdlchannel method)": [[35, "neoradium.tdl.TdlChannel.print"]], "restart() (neoradium.cdl.cdlchannel method)": [[35, "neoradium.cdl.CdlChannel.restart"]], "restart() (neoradium.channel.channelbase method)": [[35, "neoradium.channel.ChannelBase.restart"]], "grid (class in neoradium.grid)": [[36, "neoradium.grid.Grid"]], "addnoise() (neoradium.grid.grid method)": [[36, "neoradium.grid.Grid.addNoise"]], "applychannel() (neoradium.grid.grid method)": [[36, "neoradium.grid.Grid.applyChannel"]], "drawmap() (neoradium.grid.grid method)": [[36, "neoradium.grid.Grid.drawMap"]], "equalize() (neoradium.grid.grid method)": [[36, "neoradium.grid.Grid.equalize"]], "estimatechannells() (neoradium.grid.grid method)": [[36, "neoradium.grid.Grid.estimateChannelLS"]], "estimatetimingoffset() (neoradium.grid.grid method)": [[36, "neoradium.grid.Grid.estimateTimingOffset"]], "getreindexes() (neoradium.grid.grid method)": [[36, "neoradium.grid.Grid.getReIndexes"]], "getrevalues() (neoradium.grid.grid method)": [[36, "neoradium.grid.Grid.getReValues"]], "getstats() (neoradium.grid.grid method)": [[36, "neoradium.grid.Grid.getStats"]], "neoradium.grid": [[36, "module-neoradium.grid"]], "ofdmmodulate() (neoradium.grid.grid method)": [[36, "neoradium.grid.Grid.ofdmModulate"]], "precode() (neoradium.grid.grid method)": [[36, "neoradium.grid.Grid.precode"]], "print() (neoradium.grid.grid method)": [[36, "neoradium.grid.Grid.print"]], "retypeat() (neoradium.grid.grid method)": [[36, "neoradium.grid.Grid.reTypeAt"]], "modem (class in neoradium.modulation)": [[37, "neoradium.modulation.Modem"]], "demodulate() (neoradium.modulation.modem method)": [[37, "neoradium.modulation.Modem.demodulate"]], "getllrsfromsymbols() (neoradium.modulation.modem method)": [[37, "neoradium.modulation.Modem.getLLRsFromSymbols"]], "modulate() (neoradium.modulation.modem method)": [[37, "neoradium.modulation.Modem.modulate"]], "neoradium.modulation": [[37, "module-neoradium.modulation"]], "print() (neoradium.modulation.modem method)": [[37, "neoradium.modulation.Modem.print"]], "pdsch (class in neoradium.pdsch)": [[38, "neoradium.pdsch.PDSCH"]], "getbitsizes() (neoradium.pdsch.pdsch method)": [[38, "neoradium.pdsch.PDSCH.getBitSizes"]], "getdatasymbols() (neoradium.pdsch.pdsch method)": [[38, "neoradium.pdsch.PDSCH.getDataSymbols"]], "getgrid() (neoradium.pdsch.pdsch method)": [[38, "neoradium.pdsch.PDSCH.getGrid"]], "gethardbitsfromgrid() (neoradium.pdsch.pdsch method)": [[38, "neoradium.pdsch.PDSCH.getHardBitsFromGrid"]], "getllrsfromgrid() (neoradium.pdsch.pdsch method)": [[38, "neoradium.pdsch.PDSCH.getLLRsFromGrid"]], "getnumresfromindexes() (neoradium.pdsch.pdsch method)": [[38, "neoradium.pdsch.PDSCH.getNumREsFromIndexes"]], "getprecodingmatrix() (neoradium.pdsch.pdsch method)": [[38, "neoradium.pdsch.PDSCH.getPrecodingMatrix"]], "getreindexes() (neoradium.pdsch.pdsch method)": [[38, "neoradium.pdsch.PDSCH.getReIndexes"]], "gettxblocksize() (neoradium.pdsch.pdsch method)": [[38, "neoradium.pdsch.PDSCH.getTxBlockSize"]], "neoradium.pdsch": [[38, "module-neoradium.pdsch"]], "populategrid() (neoradium.pdsch.pdsch method)": [[38, "neoradium.pdsch.PDSCH.populateGrid"]], "print() (neoradium.pdsch.pdsch method)": [[38, "neoradium.pdsch.PDSCH.print"]], "setdmrs() (neoradium.pdsch.pdsch method)": [[38, "neoradium.pdsch.PDSCH.setDMRS"]], "setptrs() (neoradium.pdsch.pdsch method)": [[38, "neoradium.pdsch.PDSCH.setPTRS"]], "rangen (class in neoradium.random)": [[39, "neoradium.random.RanGen"]], "getgenerator() (neoradium.random.rangen method)": [[39, "neoradium.random.RanGen.getGenerator"]], "neoradium.random": [[39, "module-neoradium.random"]], "setseed() (neoradium.random.rangen method)": [[39, "neoradium.random.RanGen.setSeed"]], "csirs (class in neoradium.csirs)": [[40, "neoradium.csirs.CsiRs"]], "csirsconfig (class in neoradium.csirs)": [[40, "neoradium.csirs.CsiRsConfig"]], "csirsset (class in neoradium.csirs)": [[40, "neoradium.csirs.CsiRsSet"]], "dmrs (class in neoradium.dmrs)": [[40, "neoradium.dmrs.DMRS"]], "ptrs (class in neoradium.dmrs)": [[40, "neoradium.dmrs.PTRS"]], "addcsiresourcesets() (neoradium.csirs.csirsconfig method)": [[40, "neoradium.csirs.CsiRsConfig.addCsiResourceSets"]], "addcsirs() (neoradium.csirs.csirsconfig method)": [[40, "neoradium.csirs.CsiRsConfig.addCsiRs"]], "addcsirs() (neoradium.csirs.csirsset method)": [[40, "neoradium.csirs.CsiRsSet.addCsiRs"]], "neoradium.csirs": [[40, "module-neoradium.csirs"]], "neoradium.dmrs": [[40, "module-neoradium.dmrs"]], "populategrid() (neoradium.csirs.csirsconfig method)": [[40, "neoradium.csirs.CsiRsConfig.populateGrid"]], "populategrid() (neoradium.dmrs.dmrs method)": [[40, "neoradium.dmrs.DMRS.populateGrid"]], "populategrid() (neoradium.dmrs.ptrs method)": [[40, "neoradium.dmrs.PTRS.populateGrid"]], "print() (neoradium.csirs.csirs method)": [[40, "neoradium.csirs.CsiRs.print"]], "print() (neoradium.csirs.csirsconfig method)": [[40, "neoradium.csirs.CsiRsConfig.print"]], "print() (neoradium.csirs.csirsset method)": [[40, "neoradium.csirs.CsiRsSet.print"]], "print() (neoradium.dmrs.dmrs method)": [[40, "neoradium.dmrs.DMRS.print"]], "print() (neoradium.dmrs.ptrs method)": [[40, "neoradium.dmrs.PTRS.print"]], "setptrs() (neoradium.dmrs.dmrs method)": [[40, "neoradium.dmrs.DMRS.setPTRS"]], "waveform (class in neoradium.waveform)": [[41, "neoradium.waveform.Waveform"]], "addnoise() (neoradium.waveform.waveform method)": [[41, "neoradium.waveform.Waveform.addNoise"]], "applychannel() (neoradium.waveform.waveform method)": [[41, "neoradium.waveform.Waveform.applyChannel"]], "applywindowing() (neoradium.waveform.waveform method)": [[41, "neoradium.waveform.Waveform.applyWindowing"]], "neoradium.waveform": [[41, "module-neoradium.waveform"]], "ofdmdemodulate() (neoradium.waveform.waveform method)": [[41, "neoradium.waveform.Waveform.ofdmDemodulate"]], "pad() (neoradium.waveform.waveform method)": [[41, "neoradium.waveform.Waveform.pad"]], "print() (neoradium.waveform.waveform method)": [[41, "neoradium.waveform.Waveform.print"]], "sync() (neoradium.waveform.waveform method)": [[41, "neoradium.waveform.Waveform.sync"]]}})